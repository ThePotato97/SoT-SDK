// SOT: Sea of Thieves (1.0) SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x4)
#endif

#include "../SDK.hpp"

namespace SDK
{
//---------------------------------------------------------------------------
//Functions
//---------------------------------------------------------------------------

// Function Athena.ControllableObject.TakenControlImpl
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Controller                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AControllableObject::TakenControlImpl(class AActor* Controller)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControllableObject.TakenControlImpl"));}

	AControllableObject_TakenControlImpl_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ControllableObject.SetCanInteract
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           InCanInteract                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AControllableObject::SetCanInteract(bool InCanInteract)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControllableObject.SetCanInteract"));}

	AControllableObject_SetCanInteract_Params params;
	params.InCanInteract = InCanInteract;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ControllableObject.RelinquishedControlImpl
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Controller                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AControllableObject::RelinquishedControlImpl(class AActor* Controller)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControllableObject.RelinquishedControlImpl"));}

	AControllableObject_RelinquishedControlImpl_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ControllableObject.GetControllingActor
// (FUNC_BlueprintCosmetic)
// Parameters:
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* AControllableObject::GetControllingActor()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControllableObject.GetControllingActor"));}

	AControllableObject_GetControllingActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ControllableObject.CanInteractImpl
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  InCharacter                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AControllableObject::CanInteractImpl(class AActor* InCharacter)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControllableObject.CanInteractImpl"));}

	AControllableObject_CanInteractImpl_Params params;
	params.InCharacter = InCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SailManipulator.SetRopeDeltaOffset
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          InRopeDeltaOffset              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ASailManipulator::SetRopeDeltaOffset(float InRopeDeltaOffset)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailManipulator.SetRopeDeltaOffset"));}

	ASailManipulator_SetRopeDeltaOffset_Params params;
	params.InRopeDeltaOffset = InRopeDeltaOffset;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SailManipulator.SetMastSocketId
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FSocketId               InMastSocketId                 (CPF_Parm)

void ASailManipulator::SetMastSocketId(const struct FSocketId& InMastSocketId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailManipulator.SetMastSocketId"));}

	ASailManipulator_SetMastSocketId_Params params;
	params.InMastSocketId = InMastSocketId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SailManipulator.SetMast
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AMast*                   InMast                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ASailManipulator::SetMast(class AMast* InMast)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailManipulator.SetMast"));}

	ASailManipulator_SetMast_Params params;
	params.InMast = InMast;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SailManipulator.RotateTowardsLocation
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVector                 TargetLocation                 (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void ASailManipulator::RotateTowardsLocation(const struct FVector& TargetLocation)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailManipulator.RotateTowardsLocation"));}

	ASailManipulator_RotateTowardsLocation_Params params;
	params.TargetLocation = TargetLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SailManipulator.OnRep_PendingBoundMast
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ASailManipulator::OnRep_PendingBoundMast()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailManipulator.OnRep_PendingBoundMast"));}

	ASailManipulator_OnRep_PendingBoundMast_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SailManipulator.HandleBoundMastEndPlay
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EEndPlayReason>    EndPlayReason                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ASailManipulator::HandleBoundMastEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailManipulator.HandleBoundMastEndPlay"));}

	ASailManipulator_HandleBoundMastEndPlay_Params params;
	params.EndPlayReason = EndPlayReason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SailManipulator.HandleBoundMastDestroyed
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ASailManipulator::HandleBoundMastDestroyed()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailManipulator.HandleBoundMastDestroyed"));}

	ASailManipulator_HandleBoundMastDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SailManipulator.GetRopeUVOffset
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ASailManipulator::GetRopeUVOffset()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailManipulator.GetRopeUVOffset"));}

	ASailManipulator_GetRopeUVOffset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SailManipulator.GetMast
// (FUNC_BlueprintCosmetic)
// Parameters:
// class AMast*                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AMast* ASailManipulator::GetMast()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailManipulator.GetMast"));}

	ASailManipulator_GetMast_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Mast.UpdateSailsLoweredBasedOnIntent
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          LoweredIntent                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMast::UpdateSailsLoweredBasedOnIntent(float LoweredIntent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Mast.UpdateSailsLoweredBasedOnIntent"));}

	AMast_UpdateSailsLoweredBasedOnIntent_Params params;
	params.LoweredIntent = LoweredIntent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Mast.UpdateSailsBasedOnIntent
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          AngleIntent                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          LoweredIntent                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMast::UpdateSailsBasedOnIntent(float AngleIntent, float LoweredIntent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Mast.UpdateSailsBasedOnIntent"));}

	AMast_UpdateSailsBasedOnIntent_Params params;
	params.AngleIntent = AngleIntent;
	params.LoweredIntent = LoweredIntent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Mast.UpdateSailsAngleBasedOnIntent
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          AngleIntent                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMast::UpdateSailsAngleBasedOnIntent(float AngleIntent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Mast.UpdateSailsAngleBasedOnIntent"));}

	AMast_UpdateSailsAngleBasedOnIntent_Params params;
	params.AngleIntent = AngleIntent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Mast.OnMastDescLoaded
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UMastDescAsset*          MastDesc                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMast::OnMastDescLoaded(class UMastDescAsset* MastDesc)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Mast.OnMastDescLoaded"));}

	AMast_OnMastDescLoaded_Params params;
	params.MastDesc = MastDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Mast.OnLoweredProportionChange
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          LoweredProportion              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          DeltaTime                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMast::OnLoweredProportionChange(float LoweredProportion, float DeltaTime)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Mast.OnLoweredProportionChange"));}

	AMast_OnLoweredProportionChange_Params params;
	params.LoweredProportion = LoweredProportion;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Mast.OnAngleChanged
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Angle                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          DeltaTime                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMast::OnAngleChanged(float Angle, float DeltaTime)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Mast.OnAngleChanged"));}

	AMast_OnAngleChanged_Params params;
	params.Angle = Angle;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Mast.GetSailTurnRate
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float AMast::GetSailTurnRate()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Mast.GetSailTurnRate"));}

	AMast_GetSailTurnRate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Mast.GetSails
// ()
// Parameters:
// TArray<class ASail*>           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class ASail*> AMast::GetSails()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Mast.GetSails"));}

	AMast_GetSails_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Mast.GetSailMovementRate
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float AMast::GetSailMovementRate()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Mast.GetSailMovementRate"));}

	AMast_GetSailMovementRate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Mast.GetSailLoweredProportion
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float AMast::GetSailLoweredProportion()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Mast.GetSailLoweredProportion"));}

	AMast_GetSailLoweredProportion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Mast.GetSailAngleRatio
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float AMast::GetSailAngleRatio()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Mast.GetSailAngleRatio"));}

	AMast_GetSailAngleRatio_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Mast.GetMastAngleBoneTransform
// ()
// Parameters:
// struct FTransform              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_IsPlainOldData)

struct FTransform AMast::GetMastAngleBoneTransform()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Mast.GetMastAngleBoneTransform"));}

	AMast_GetMastAngleBoneTransform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Mast.GetLookAtPos
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector AMast::GetLookAtPos()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Mast.GetLookAtPos"));}

	AMast_GetLookAtPos_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Mast.FinaliseSails
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TArray<class ASail*>           InSails                        (CPF_Parm, CPF_ZeroConstructor)

void AMast::FinaliseSails(TArray<class ASail*> InSails)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Mast.FinaliseSails"));}

	AMast_FinaliseSails_Params params;
	params.InSails = InSails;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ActionRulesBlueprintFunctionLibrary.AddOneShotUseActionRule
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  StartInput                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UActionRulesBlueprintFunctionLibrary::AddOneShotUseActionRule(class UClass* StartInput, class AActor* Item)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ActionRulesBlueprintFunctionLibrary.AddOneShotUseActionRule"));}

	UActionRulesBlueprintFunctionLibrary_AddOneShotUseActionRule_Params params;
	params.StartInput = StartInput;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ActionRulesBlueprintFunctionLibrary.AddHoldToUseActionRule
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  StartInput                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  EndInput                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UActionRulesBlueprintFunctionLibrary::AddHoldToUseActionRule(class UClass* StartInput, class UClass* EndInput, class AActor* Item)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ActionRulesBlueprintFunctionLibrary.AddHoldToUseActionRule"));}

	UActionRulesBlueprintFunctionLibrary_AddHoldToUseActionRule_Params params;
	params.StartInput = StartInput;
	params.EndInput = EndInput;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ActorCoherentViewComponent.ReadyForBindingsEventReceived
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UActorCoherentViewComponent::ReadyForBindingsEventReceived()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ActorCoherentViewComponent.ReadyForBindingsEventReceived"));}

	UActorCoherentViewComponent_ReadyForBindingsEventReceived_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ActorFunctionLibrary.TestSetNetCullDistance
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          InDistance                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UActorFunctionLibrary::TestSetNetCullDistance(class AActor* Actor, float InDistance)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ActorFunctionLibrary.TestSetNetCullDistance"));}

	UActorFunctionLibrary_TestSetNetCullDistance_Params params;
	params.Actor = Actor;
	params.InDistance = InDistance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ActorFunctionLibrary.TestSetActorRoleAutonomousProxy
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UActorFunctionLibrary::TestSetActorRoleAutonomousProxy(class AActor* Actor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ActorFunctionLibrary.TestSetActorRoleAutonomousProxy"));}

	UActorFunctionLibrary_TestSetActorRoleAutonomousProxy_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ActorFunctionLibrary.IsParentActorInChildActorComponentHierarchy
// (FUNC_Final, FUNC_Delegate)
// Parameters:
// class AActor*                  ChildActor                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  TestParentActor                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UActorFunctionLibrary::IsParentActorInChildActorComponentHierarchy(class AActor* ChildActor, class AActor* TestParentActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ActorFunctionLibrary.IsParentActorInChildActorComponentHierarchy"));}

	UActorFunctionLibrary_IsParentActorInChildActorComponentHierarchy_Params params;
	params.ChildActor = ChildActor;
	params.TestParentActor = TestParentActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ActorFunctionLibrary.IsDependentActorSpawnAckedOnClient
// (FUNC_Final, FUNC_Delegate)
// Parameters:
// class AActor*                  RealViewer                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  DependencyActor                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UActorFunctionLibrary::IsDependentActorSpawnAckedOnClient(class AActor* RealViewer, class AActor* DependencyActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ActorFunctionLibrary.IsDependentActorSpawnAckedOnClient"));}

	UActorFunctionLibrary_IsDependentActorSpawnAckedOnClient_Params params;
	params.RealViewer = RealViewer;
	params.DependencyActor = DependencyActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ActorFunctionLibrary.IsActorTickFunctionRegistered
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  Actor                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UActorFunctionLibrary::IsActorTickFunctionRegistered(class AActor* Actor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ActorFunctionLibrary.IsActorTickFunctionRegistered"));}

	UActorFunctionLibrary_IsActorTickFunctionRegistered_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ActorFunctionLibrary.GetTransformOfActorRelativeToAnother
// (FUNC_Net, FUNC_Delegate)
// Parameters:
// class AActor*                  TargetActor                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  RelativeToActor                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FTransform              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_IsPlainOldData)

struct FTransform UActorFunctionLibrary::GetTransformOfActorRelativeToAnother(class AActor* TargetActor, class AActor* RelativeToActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ActorFunctionLibrary.GetTransformOfActorRelativeToAnother"));}

	UActorFunctionLibrary_GetTransformOfActorRelativeToAnother_Params params;
	params.TargetActor = TargetActor;
	params.RelativeToActor = RelativeToActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ActorFunctionLibrary.GetActorNetGuidValue
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  Actor                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UActorFunctionLibrary::GetActorNetGuidValue(class AActor* Actor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ActorFunctionLibrary.GetActorNetGuidValue"));}

	UActorFunctionLibrary_GetActorNetGuidValue_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ActorFunctionLibrary.FindActorByNetGuidValue
// (FUNC_BlueprintCosmetic, FUNC_Delegate)
// Parameters:
// class UObject*                 WorldContext                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            NetGuidValue                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* UActorFunctionLibrary::FindActorByNetGuidValue(class UObject* WorldContext, int NetGuidValue)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ActorFunctionLibrary.FindActorByNetGuidValue"));}

	UActorFunctionLibrary_FindActorByNetGuidValue_Params params;
	params.WorldContext = WorldContext;
	params.NetGuidValue = NetGuidValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ActorFunctionLibrary.FindActorByName
// (FUNC_Protected, FUNC_Delegate)
// Parameters:
// class UObject*                 WorldContext                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FString                 ActorName                      (CPF_Parm, CPF_ZeroConstructor)
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* UActorFunctionLibrary::FindActorByName(class UObject* WorldContext, const struct FString& ActorName)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ActorFunctionLibrary.FindActorByName"));}

	UActorFunctionLibrary_FindActorByName_Params params;
	params.WorldContext = WorldContext;
	params.ActorName = ActorName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ActorFunctionLibrary.FindActorByClass
// (FUNC_BlueprintCosmetic, FUNC_Delegate)
// Parameters:
// class UObject*                 WorldContext                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  Class                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* UActorFunctionLibrary::FindActorByClass(class UObject* WorldContext, class UClass* Class)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ActorFunctionLibrary.FindActorByClass"));}

	UActorFunctionLibrary_FindActorByClass_Params params;
	params.WorldContext = WorldContext;
	params.Class = Class;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ActorFunctionLibrary.FilterActorArrayByInterface
// (FUNC_BlueprintCosmetic, FUNC_Protected, FUNC_Delegate)
// Parameters:
// TArray<class AActor*>          Actors                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm)
// class UClass*                  InterfaceToTest                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<class AActor*>          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class AActor*> UActorFunctionLibrary::FilterActorArrayByInterface(TArray<class AActor*> Actors, class UClass* InterfaceToTest)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ActorFunctionLibrary.FilterActorArrayByInterface"));}

	UActorFunctionLibrary_FilterActorArrayByInterface_Params params;
	params.Actors = Actors;
	params.InterfaceToTest = InterfaceToTest;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ActorFunctionLibrary.ClosestActorToPoint
// (FUNC_BlueprintCosmetic, FUNC_NetServer)
// Parameters:
// TArray<class AActor*>          Actors                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm)
// struct FVector                 Position                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* UActorFunctionLibrary::ClosestActorToPoint(TArray<class AActor*> Actors, const struct FVector& Position)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ActorFunctionLibrary.ClosestActorToPoint"));}

	UActorFunctionLibrary_ClosestActorToPoint_Params params;
	params.Actors = Actors;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ActorRelevancyTestFunctions.WaitForActorToBeAckedForPlayerId
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FLatentActionInfo       LatentInfo                     (CPF_Parm)
// class AActor*                  Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            ClientId                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            SplitScreenIndex               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UActorRelevancyTestFunctions::WaitForActorToBeAckedForPlayerId(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class AActor* Actor, int ClientId, int SplitScreenIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ActorRelevancyTestFunctions.WaitForActorToBeAckedForPlayerId"));}

	UActorRelevancyTestFunctions_WaitForActorToBeAckedForPlayerId_Params params;
	params.WorldContextObject = WorldContextObject;
	params.LatentInfo = LatentInfo;
	params.Actor = Actor;
	params.ClientId = ClientId;
	params.SplitScreenIndex = SplitScreenIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ActorRelevancyTestFunctions.WaitForActorToBeAckedForPlayerController
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FLatentActionInfo       LatentInfo                     (CPF_Parm)
// class AActor*                  Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class APlayerController*       PlayerController               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UActorRelevancyTestFunctions::WaitForActorToBeAckedForPlayerController(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class AActor* Actor, class APlayerController* PlayerController)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ActorRelevancyTestFunctions.WaitForActorToBeAckedForPlayerController"));}

	UActorRelevancyTestFunctions_WaitForActorToBeAckedForPlayerController_Params params;
	params.WorldContextObject = WorldContextObject;
	params.LatentInfo = LatentInfo;
	params.Actor = Actor;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ActorRelevancyTestFunctions.IsActorAckedForPlayer
// (FUNC_Final, FUNC_Delegate)
// Parameters:
// class APlayerController*       PlayerController               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UActorRelevancyTestFunctions::IsActorAckedForPlayer(class APlayerController* PlayerController, class AActor* Actor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ActorRelevancyTestFunctions.IsActorAckedForPlayer"));}

	UActorRelevancyTestFunctions_IsActorAckedForPlayer_Params params;
	params.PlayerController = PlayerController;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AILocomotionCompositeInputHandler.OnSecondaryItemUseReleased
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UAILocomotionCompositeInputHandler::OnSecondaryItemUseReleased()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AILocomotionCompositeInputHandler.OnSecondaryItemUseReleased"));}

	UAILocomotionCompositeInputHandler_OnSecondaryItemUseReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AILocomotionCompositeInputHandler.OnSecondaryItemUsePressed
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UAILocomotionCompositeInputHandler::OnSecondaryItemUsePressed()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AILocomotionCompositeInputHandler.OnSecondaryItemUsePressed"));}

	UAILocomotionCompositeInputHandler_OnSecondaryItemUsePressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AILocomotionCompositeInputHandler.OnQuickSwitchWeapon
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UAILocomotionCompositeInputHandler::OnQuickSwitchWeapon()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AILocomotionCompositeInputHandler.OnQuickSwitchWeapon"));}

	UAILocomotionCompositeInputHandler_OnQuickSwitchWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AILocomotionCompositeInputHandler.OnQuickSwitchSecondaryWeapon
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UAILocomotionCompositeInputHandler::OnQuickSwitchSecondaryWeapon()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AILocomotionCompositeInputHandler.OnQuickSwitchSecondaryWeapon"));}

	UAILocomotionCompositeInputHandler_OnQuickSwitchSecondaryWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AILocomotionCompositeInputHandler.OnQuickSwitchPrimaryWeapon
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UAILocomotionCompositeInputHandler::OnQuickSwitchPrimaryWeapon()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AILocomotionCompositeInputHandler.OnQuickSwitchPrimaryWeapon"));}

	UAILocomotionCompositeInputHandler_OnQuickSwitchPrimaryWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AILocomotionCompositeInputHandler.OnPrimaryItemUseReleased
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UAILocomotionCompositeInputHandler::OnPrimaryItemUseReleased()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AILocomotionCompositeInputHandler.OnPrimaryItemUseReleased"));}

	UAILocomotionCompositeInputHandler_OnPrimaryItemUseReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AILocomotionCompositeInputHandler.OnPrimaryItemUsePressed
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UAILocomotionCompositeInputHandler::OnPrimaryItemUsePressed()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AILocomotionCompositeInputHandler.OnPrimaryItemUsePressed"));}

	UAILocomotionCompositeInputHandler_OnPrimaryItemUsePressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AIPartsRetrievalComponent.RequestNewAIParts
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UAIPartsCategory*        AssignedPartsCategory          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAIPartsRetrievalComponent::RequestNewAIParts(class UAIPartsCategory* AssignedPartsCategory)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AIPartsRetrievalComponent.RequestNewAIParts"));}

	UAIPartsRetrievalComponent_RequestNewAIParts_Params params;
	params.AssignedPartsCategory = AssignedPartsCategory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AIPartsRetrievalComponent.OnRep_ReplicatedAIPartsData
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAIPartsRetrievalComponent::OnRep_ReplicatedAIPartsData()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AIPartsRetrievalComponent.OnRep_ReplicatedAIPartsData"));}

	UAIPartsRetrievalComponent_OnRep_ReplicatedAIPartsData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AISpawnActionStateId.PushCharacterIntoAISpawnActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  InCharacter                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAISpawnActionStateId::PushCharacterIntoAISpawnActionState(class AActor* InCharacter)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AISpawnActionStateId.PushCharacterIntoAISpawnActionState"));}

	UAISpawnActionStateId_PushCharacterIntoAISpawnActionState_Params params;
	params.InCharacter = InCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Anchor.SetAnchorLoweredProportion
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          InLoweredProportion            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AAnchor::SetAnchorLoweredProportion(float InLoweredProportion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Anchor.SetAnchorLoweredProportion"));}

	AAnchor_SetAnchorLoweredProportion_Params params;
	params.InLoweredProportion = InLoweredProportion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AnimatedStepsComponent.StartOpening
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAnimatedStepsComponent::StartOpening()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AnimatedStepsComponent.StartOpening"));}

	UAnimatedStepsComponent_StartOpening_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AnimatedStepsComponent.OpenImmediate
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAnimatedStepsComponent::OpenImmediate()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AnimatedStepsComponent.OpenImmediate"));}

	UAnimatedStepsComponent_OpenImmediate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AnimatedStepsComponent.Close
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAnimatedStepsComponent::Close()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AnimatedStepsComponent.Close"));}

	UAnimatedStepsComponent_Close_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipServiceInterface.GetShipForCrew
// (FUNC_BlueprintCosmetic, FUNC_Delegate)
// Parameters:
// struct FGuid                   CrewId                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// class AShip*                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AShip* UShipServiceInterface::GetShipForCrew(const struct FGuid& CrewId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipServiceInterface.GetShipForCrew"));}

	UShipServiceInterface_GetShipForCrew_Params params;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipServiceInterface.GetCrewFromShip
// (FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AShip*                   Ship                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FGuid                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FGuid UShipServiceInterface::GetCrewFromShip(class AShip* Ship)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipServiceInterface.GetCrewFromShip"));}

	UShipServiceInterface_GetCrewFromShip_Params params;
	params.Ship = Ship;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAIInteractableComponent.GetTriggerRegionRadius
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UAthenaAIInteractableComponent::GetTriggerRegionRadius()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAIInteractableComponent.GetTriggerRegionRadius"));}

	UAthenaAIInteractableComponent_GetTriggerRegionRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAIInteractableComponent.GetTriggerRegionCenterPoint
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector UAthenaAIInteractableComponent::GetTriggerRegionCenterPoint()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAIInteractableComponent.GetTriggerRegionCenterPoint"));}

	UAthenaAIInteractableComponent_GetTriggerRegionCenterPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationCapstanBlueprintFunctions.SetAnimationRemapSpeed
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_NetRequest, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FAthenaAnimationCapstan Capstan                        (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// float                          Speed                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaAnimationCapstanBlueprintFunctions::SetAnimationRemapSpeed(float Speed, struct FAthenaAnimationCapstan* Capstan)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationCapstanBlueprintFunctions.SetAnimationRemapSpeed"));}

	UAthenaAnimationCapstanBlueprintFunctions_SetAnimationRemapSpeed_Params params;
	params.Speed = Speed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Capstan != nullptr)
		*Capstan = params.Capstan;
}


// Function Athena.AthenaAnimationCapstanBlueprintFunctions.GetCapstanState
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_NetRequest, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_NetClient)
// Parameters:
// struct FAthenaAnimationCapstan Capstan                        (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// TEnumAsByte<EAthenaAnimationCapstanState> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EAthenaAnimationCapstanState> UAthenaAnimationCapstanBlueprintFunctions::GetCapstanState(const struct FAthenaAnimationCapstan& Capstan)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationCapstanBlueprintFunctions.GetCapstanState"));}

	UAthenaAnimationCapstanBlueprintFunctions_GetCapstanState_Params params;
	params.Capstan = Capstan;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationCapstanBlueprintFunctions.GetAngularVelocityWanted
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_NetRequest, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_NetClient)
// Parameters:
// struct FAthenaAnimationCapstan Capstan                        (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UAthenaAnimationCapstanBlueprintFunctions::GetAngularVelocityWanted(const struct FAthenaAnimationCapstan& Capstan)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationCapstanBlueprintFunctions.GetAngularVelocityWanted"));}

	UAthenaAnimationCapstanBlueprintFunctions_GetAngularVelocityWanted_Params params;
	params.Capstan = Capstan;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLODInterface.SetIKState
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EIKState>          NewState                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaAnimationLODInterface::SetIKState(TEnumAsByte<EIKState> NewState)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationLODInterface.SetIKState"));}

	UAthenaAnimationLODInterface_SetIKState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaAnimationLODInterface.SetIKSolverType
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EIKSolverType>     NewState                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaAnimationLODInterface::SetIKSolverType(TEnumAsByte<EIKSolverType> NewState)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationLODInterface.SetIKSolverType"));}

	UAthenaAnimationLODInterface_SetIKSolverType_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaAnimationLODInterface.SetIKFootplantState
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EIKFootPlantingState> NewState                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaAnimationLODInterface::SetIKFootplantState(TEnumAsByte<EIKFootPlantingState> NewState)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationLODInterface.SetIKFootplantState"));}

	UAthenaAnimationLODInterface_SetIKFootplantState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CharacterAnimationInterface.UnbindFromCharacter
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaCharacter*        Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCharacterAnimationInterface::UnbindFromCharacter(class AAthenaCharacter* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterAnimationInterface.UnbindFromCharacter"));}

	UCharacterAnimationInterface_UnbindFromCharacter_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CharacterAnimationInterface.OnImpact
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVector                 ImpactLocation                 (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// struct FVector                 ImpactNormal                   (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// struct FVector                 ImpactVelocity                 (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// TEnumAsByte<ECharacterHitReactionAnimType> HitReactionAnimType            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCharacterAnimationInterface::OnImpact(const struct FVector& ImpactLocation, const struct FVector& ImpactNormal, const struct FVector& ImpactVelocity, TEnumAsByte<ECharacterHitReactionAnimType> HitReactionAnimType)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterAnimationInterface.OnImpact"));}

	UCharacterAnimationInterface_OnImpact_Params params;
	params.ImpactLocation = ImpactLocation;
	params.ImpactNormal = ImpactNormal;
	params.ImpactVelocity = ImpactVelocity;
	params.HitReactionAnimType = HitReactionAnimType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CharacterAnimationInterface.LoadCharacterAnimations
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  AnimDataId                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCharacterAnimationInterface::LoadCharacterAnimations(class UClass* AnimDataId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterAnimationInterface.LoadCharacterAnimations"));}

	UCharacterAnimationInterface_LoadCharacterAnimations_Params params;
	params.AnimDataId = AnimDataId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CharacterAnimationInterface.BindThirdPersonToCharacter
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaCharacter*        Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  AnimDataId                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCharacterAnimationInterface::BindThirdPersonToCharacter(class AAthenaCharacter* Character, class UClass* AnimDataId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterAnimationInterface.BindThirdPersonToCharacter"));}

	UCharacterAnimationInterface_BindThirdPersonToCharacter_Params params;
	params.Character = Character;
	params.AnimDataId = AnimDataId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CharacterAnimationInterface.BindFirstPersonToCharacter
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaCharacter*        Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  AnimDataId                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCharacterAnimationInterface::BindFirstPersonToCharacter(class AAthenaCharacter* Character, class UClass* AnimDataId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterAnimationInterface.BindFirstPersonToCharacter"));}

	UCharacterAnimationInterface_BindFirstPersonToCharacter_Params params;
	params.Character = Character;
	params.AnimDataId = AnimDataId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.MarkRunStopComplete
// (FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UAthenaAnimationLocomotionComponentFunctions::MarkRunStopComplete(struct FAthenaAnimationLocomotion* Locomotion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationLocomotionComponentFunctions.MarkRunStopComplete"));}

	UAthenaAnimationLocomotionComponentFunctions_MarkRunStopComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Locomotion != nullptr)
		*Locomotion = params.Locomotion;
}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.GetWantedMovementSpeed
// (FUNC_BlueprintAuthorityOnly, FUNC_Net, FUNC_HasOutParms)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UAthenaAnimationLocomotionComponentFunctions::GetWantedMovementSpeed(const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationLocomotionComponentFunctions.GetWantedMovementSpeed"));}

	UAthenaAnimationLocomotionComponentFunctions_GetWantedMovementSpeed_Params params;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.GetVelocity
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Net, FUNC_HasOutParms)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector UAthenaAnimationLocomotionComponentFunctions::GetVelocity(const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationLocomotionComponentFunctions.GetVelocity"));}

	UAthenaAnimationLocomotionComponentFunctions_GetVelocity_Params params;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.GetTurningLeft
// (FUNC_Final, FUNC_Net, FUNC_HasOutParms)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationLocomotionComponentFunctions::GetTurningLeft(const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationLocomotionComponentFunctions.GetTurningLeft"));}

	UAthenaAnimationLocomotionComponentFunctions_GetTurningLeft_Params params;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.GetTurningActive
// (FUNC_Final, FUNC_Net, FUNC_HasOutParms)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationLocomotionComponentFunctions::GetTurningActive(const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationLocomotionComponentFunctions.GetTurningActive"));}

	UAthenaAnimationLocomotionComponentFunctions_GetTurningActive_Params params;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.GetRunStopWanted
// (FUNC_Final, FUNC_Net, FUNC_HasOutParms)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationLocomotionComponentFunctions::GetRunStopWanted(const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationLocomotionComponentFunctions.GetRunStopWanted"));}

	UAthenaAnimationLocomotionComponentFunctions_GetRunStopWanted_Params params;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.GetIsUnderwaterSwimming
// (FUNC_Final, FUNC_Net, FUNC_HasOutParms)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationLocomotionComponentFunctions::GetIsUnderwaterSwimming(const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationLocomotionComponentFunctions.GetIsUnderwaterSwimming"));}

	UAthenaAnimationLocomotionComponentFunctions_GetIsUnderwaterSwimming_Params params;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.GetIsSwimming
// (FUNC_Final, FUNC_Net, FUNC_HasOutParms)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationLocomotionComponentFunctions::GetIsSwimming(const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationLocomotionComponentFunctions.GetIsSwimming"));}

	UAthenaAnimationLocomotionComponentFunctions_GetIsSwimming_Params params;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.GetCurrentYaw
// (FUNC_BlueprintAuthorityOnly, FUNC_Net, FUNC_HasOutParms)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UAthenaAnimationLocomotionComponentFunctions::GetCurrentYaw(const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationLocomotionComponentFunctions.GetCurrentYaw"));}

	UAthenaAnimationLocomotionComponentFunctions_GetCurrentYaw_Params params;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.GetCurrentDirection
// (FUNC_BlueprintAuthorityOnly, FUNC_Net, FUNC_HasOutParms)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UAthenaAnimationLocomotionComponentFunctions::GetCurrentDirection(const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationLocomotionComponentFunctions.GetCurrentDirection"));}

	UAthenaAnimationLocomotionComponentFunctions_GetCurrentDirection_Params params;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.GetCharacterMoving
// (FUNC_Final, FUNC_Net, FUNC_HasOutParms)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationLocomotionComponentFunctions::GetCharacterMoving(const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationLocomotionComponentFunctions.GetCharacterMoving"));}

	UAthenaAnimationLocomotionComponentFunctions_GetCharacterMoving_Params params;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLocomotionComponentFunctions.GetBlendedTurnRate
// (FUNC_BlueprintAuthorityOnly, FUNC_Net, FUNC_HasOutParms)
// Parameters:
// struct FAthenaAnimationLocomotion Locomotion                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UAthenaAnimationLocomotionComponentFunctions::GetBlendedTurnRate(const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationLocomotionComponentFunctions.GetBlendedTurnRate"));}

	UAthenaAnimationLocomotionComponentFunctions_GetBlendedTurnRate_Params params;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryItemInterface.SetItemType
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EItemType>         InType                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UInventoryItemInterface::SetItemType(TEnumAsByte<EItemType> InType)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryItemInterface.SetItemType"));}

	UInventoryItemInterface_SetItemType_Params params;
	params.InType = InType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryItemInterface.OnAddedToInventory
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UInventoryItemInterface::OnAddedToInventory()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryItemInterface.OnAddedToInventory"));}

	UInventoryItemInterface_OnAddedToInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryItemInterface.GetItemType
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EItemType>         ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EItemType> UInventoryItemInterface::GetItemType()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryItemInterface.GetItemType"));}

	UInventoryItemInterface_GetItemType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryItemInterface.GetIconURL
// ()
// Parameters:
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

struct FString UInventoryItemInterface::GetIconURL()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryItemInterface.GetIconURL"));}

	UInventoryItemInterface_GetIconURL_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryItemInterface.GetIconScale
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UInventoryItemInterface::GetIconScale()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryItemInterface.GetIconScale"));}

	UInventoryItemInterface_GetIconScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryItemInterface.GetIconRotation
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UInventoryItemInterface::GetIconRotation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryItemInterface.GetIconRotation"));}

	UInventoryItemInterface_GetIconRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WielderAnimationInterface.SetItemVisibility
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TScriptInterface<class UWieldableInterface> Item                           (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// bool                           Visibility                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UWielderAnimationInterface::SetItemVisibility(const TScriptInterface<class UWieldableInterface>& Item, bool Visibility)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WielderAnimationInterface.SetItemVisibility"));}

	UWielderAnimationInterface_SetItemVisibility_Params params;
	params.Item = Item;
	params.Visibility = Visibility;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WielderAnimationInterface.ItemWielded
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TScriptInterface<class UWieldableInterface> Item                           (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// struct FWieldAnimationParams   AnimParams                     (CPF_Parm, CPF_OutParm)

void UWielderAnimationInterface::ItemWielded(const TScriptInterface<class UWieldableInterface>& Item, struct FWieldAnimationParams* AnimParams)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WielderAnimationInterface.ItemWielded"));}

	UWielderAnimationInterface_ItemWielded_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (AnimParams != nullptr)
		*AnimParams = params.AnimParams;
}


// Function Athena.WielderAnimationInterface.ItemStowed
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TScriptInterface<class UWieldableInterface> Item                           (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// bool                           FastStow                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UWielderAnimationInterface::ItemStowed(const TScriptInterface<class UWieldableInterface>& Item, bool FastStow)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WielderAnimationInterface.ItemStowed"));}

	UWielderAnimationInterface_ItemStowed_Params params;
	params.Item = Item;
	params.FastStow = FastStow;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WielderAnimationInterface.GetWieldedItemMesh
// (FUNC_BlueprintCosmetic, FUNC_Delegate)
// Parameters:
// TScriptInterface<class UWieldableInterface> Item                           (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// class UPrimitiveComponent*     ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData)

class UPrimitiveComponent* UWielderAnimationInterface::GetWieldedItemMesh(const TScriptInterface<class UWieldableInterface>& Item)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WielderAnimationInterface.GetWieldedItemMesh"));}

	UWielderAnimationInterface_GetWieldedItemMesh_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WielderAnimationInterface.DetachWieldedItem
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TScriptInterface<class UWieldableInterface> Item                           (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UWielderAnimationInterface::DetachWieldedItem(const TScriptInterface<class UWieldableInterface>& Item)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WielderAnimationInterface.DetachWieldedItem"));}

	UWielderAnimationInterface_DetachWieldedItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WielderAnimationInterface.AttachWieldedItem
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TScriptInterface<class UWieldableInterface> Item                           (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// struct FWieldAnimationParams   AnimParams                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UWielderAnimationInterface::AttachWieldedItem(const TScriptInterface<class UWieldableInterface>& Item, const struct FWieldAnimationParams& AnimParams)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WielderAnimationInterface.AttachWieldedItem"));}

	UWielderAnimationInterface_AttachWieldedItem_Params params;
	params.Item = Item;
	params.AnimParams = AnimParams;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaAnimationInstance.SpawnCosmeticItem
// (FUNC_Final, FUNC_RequiredAPI, FUNC_Public, FUNC_Delegate)
// Parameters:
// class AAthenaCharacter*        Owner                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  ObjectToSpawn                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EWieldAnimationLocation> SpawnLocation                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EWieldAnimationGraph> Animgraph                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationInstance::SpawnCosmeticItem(class AAthenaCharacter* Owner, class UClass* ObjectToSpawn, TEnumAsByte<EWieldAnimationLocation> SpawnLocation, TEnumAsByte<EWieldAnimationGraph> Animgraph)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.SpawnCosmeticItem"));}

	UAthenaAnimationInstance_SpawnCosmeticItem_Params params;
	params.Owner = Owner;
	params.ObjectToSpawn = ObjectToSpawn;
	params.SpawnLocation = SpawnLocation;
	params.Animgraph = Animgraph;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.SetWieldedItemContinuousIsAlternate
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           IsAlternate                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaAnimationInstance::SetWieldedItemContinuousIsAlternate(bool IsAlternate)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.SetWieldedItemContinuousIsAlternate"));}

	UAthenaAnimationInstance_SetWieldedItemContinuousIsAlternate_Params params;
	params.IsAlternate = IsAlternate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaAnimationInstance.SetLoadedItemAllAnimations
// (FUNC_Net, FUNC_Event, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FAthenaAnimationCoreObjectAnimations AllAnimationSet                (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UAthenaAnimationInstance::SetLoadedItemAllAnimations(const struct FAthenaAnimationCoreObjectAnimations& AllAnimationSet)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.SetLoadedItemAllAnimations"));}

	UAthenaAnimationInstance_SetLoadedItemAllAnimations_Params params;
	params.AllAnimationSet = AllAnimationSet;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaAnimationInstance.SetControllableSocketGroupCharacterSize
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EAthenaAnimationSocketGroupCharacterSize> InGroup                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaAnimationInstance::SetControllableSocketGroupCharacterSize(TEnumAsByte<EAthenaAnimationSocketGroupCharacterSize> InGroup)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.SetControllableSocketGroupCharacterSize"));}

	UAthenaAnimationInstance_SetControllableSocketGroupCharacterSize_Params params;
	params.InGroup = InGroup;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaAnimationInstance.SetControllableSocketGroup
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EAthenaAnimationSocketGroup> InGroup                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaAnimationInstance::SetControllableSocketGroup(TEnumAsByte<EAthenaAnimationSocketGroup> InGroup)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.SetControllableSocketGroup"));}

	UAthenaAnimationInstance_SetControllableSocketGroup_Params params;
	params.InGroup = InGroup;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaAnimationInstance.PickItemOneShotSequencePitchOverride
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UBlendSpace1D*           ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UBlendSpace1D* UAthenaAnimationInstance::PickItemOneShotSequencePitchOverride()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.PickItemOneShotSequencePitchOverride"));}

	UAthenaAnimationInstance_PickItemOneShotSequencePitchOverride_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.PickItemOneShotSequence
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UAthenaAnimationInstance::PickItemOneShotSequence()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.PickItemOneShotSequence"));}

	UAthenaAnimationInstance_PickItemOneShotSequence_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.NotRunningOnServer
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationInstance::NotRunningOnServer()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.NotRunningOnServer"));}

	UAthenaAnimationInstance_NotRunningOnServer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.LoadAllItemAnimations
// (FUNC_BlueprintCosmetic, FUNC_Protected, FUNC_Delegate)
// Parameters:
// class AAthenaCharacter*        Owner                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UScriptStruct*           DestinationStruct              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  CharacterType                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<struct FAthenaAnimationLoadObjectsWrapper> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<struct FAthenaAnimationLoadObjectsWrapper> UAthenaAnimationInstance::LoadAllItemAnimations(class AAthenaCharacter* Owner, class UScriptStruct* DestinationStruct, class UClass* CharacterType)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.LoadAllItemAnimations"));}

	UAthenaAnimationInstance_LoadAllItemAnimations_Params params;
	params.Owner = Owner;
	params.DestinationStruct = DestinationStruct;
	params.CharacterType = CharacterType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.LeftItemBlockingFeedbackState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaAnimationInstance::LeftItemBlockingFeedbackState()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.LeftItemBlockingFeedbackState"));}

	UAthenaAnimationInstance_LeftItemBlockingFeedbackState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaAnimationInstance.InMeleeBlock
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationInstance::InMeleeBlock()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.InMeleeBlock"));}

	UAthenaAnimationInstance_InMeleeBlock_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.InMeleeAttack
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationInstance::InMeleeAttack()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.InMeleeAttack"));}

	UAthenaAnimationInstance_InMeleeAttack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetWantsToReenterItemBlockingFeedback
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationInstance::GetWantsToReenterItemBlockingFeedback()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetWantsToReenterItemBlockingFeedback"));}

	UAthenaAnimationInstance_GetWantsToReenterItemBlockingFeedback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetMeleeStrikeType
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EWieldableItemComplexOneShotAnimType> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EWieldableItemComplexOneShotAnimType> UAthenaAnimationInstance::GetMeleeStrikeType()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetMeleeStrikeType"));}

	UAthenaAnimationInstance_GetMeleeStrikeType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLocomotion
// (FUNC_Net)
// Parameters:
// struct FAthenaAnimationLocomotion ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FAthenaAnimationLocomotion UAthenaAnimationInstance::GetLocomotion()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetLocomotion"));}

	UAthenaAnimationInstance_GetLocomotion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemWieldedParams
// (FUNC_Final)
// Parameters:
// struct FWieldAnimationParams   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FWieldAnimationParams UAthenaAnimationInstance::GetLoadedItemWieldedParams()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetLoadedItemWieldedParams"));}

	UAthenaAnimationInstance_GetLoadedItemWieldedParams_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemSecondaryPitchOverride
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationInstance::GetLoadedItemSecondaryPitchOverride()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetLoadedItemSecondaryPitchOverride"));}

	UAthenaAnimationInstance_GetLoadedItemSecondaryPitchOverride_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemSecondaryContinuousAnimationsMain
// (FUNC_NetReliable)
// Parameters:
// struct FAthenaAnimationObjectActionContinuousStruct ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FAthenaAnimationObjectActionContinuousStruct UAthenaAnimationInstance::GetLoadedItemSecondaryContinuousAnimationsMain()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetLoadedItemSecondaryContinuousAnimationsMain"));}

	UAthenaAnimationInstance_GetLoadedItemSecondaryContinuousAnimationsMain_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemRightHandOffset
// ()
// Parameters:
// struct FTransform              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_IsPlainOldData)

struct FTransform UAthenaAnimationInstance::GetLoadedItemRightHandOffset()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetLoadedItemRightHandOffset"));}

	UAthenaAnimationInstance_GetLoadedItemRightHandOffset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemPrimaryPitchOverride
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationInstance::GetLoadedItemPrimaryPitchOverride()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetLoadedItemPrimaryPitchOverride"));}

	UAthenaAnimationInstance_GetLoadedItemPrimaryPitchOverride_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemPrimaryContinuousAnimationsMain
// (FUNC_NetReliable)
// Parameters:
// struct FAthenaAnimationObjectActionContinuousStruct ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FAthenaAnimationObjectActionContinuousStruct UAthenaAnimationInstance::GetLoadedItemPrimaryContinuousAnimationsMain()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetLoadedItemPrimaryContinuousAnimationsMain"));}

	UAthenaAnimationInstance_GetLoadedItemPrimaryContinuousAnimationsMain_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemMeleeAnimationsV2
// (FUNC_BlueprintCosmetic, FUNC_NetRequest)
// Parameters:
// struct FAthenaAnimationObjectMeleeV2 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FAthenaAnimationObjectMeleeV2 UAthenaAnimationInstance::GetLoadedItemMeleeAnimationsV2()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetLoadedItemMeleeAnimationsV2"));}

	UAthenaAnimationInstance_GetLoadedItemMeleeAnimationsV2_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemLocomotionAnimations
// (FUNC_BlueprintCosmetic)
// Parameters:
// struct FAthenaAnimationObjectLocomotionAnimations ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FAthenaAnimationObjectLocomotionAnimations UAthenaAnimationInstance::GetLoadedItemLocomotionAnimations()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetLoadedItemLocomotionAnimations"));}

	UAthenaAnimationInstance_GetLoadedItemLocomotionAnimations_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemLeftHandOffset
// ()
// Parameters:
// struct FTransform              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_IsPlainOldData)

struct FTransform UAthenaAnimationInstance::GetLoadedItemLeftHandOffset()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetLoadedItemLeftHandOffset"));}

	UAthenaAnimationInstance_GetLoadedItemLeftHandOffset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemJumpingAnimations
// ()
// Parameters:
// struct FAthenaAnimationObjectJumpingAnimations ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FAthenaAnimationObjectJumpingAnimations UAthenaAnimationInstance::GetLoadedItemJumpingAnimations()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetLoadedItemJumpingAnimations"));}

	UAthenaAnimationInstance_GetLoadedItemJumpingAnimations_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemIsRangedWeapon
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationInstance::GetLoadedItemIsRangedWeapon()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetLoadedItemIsRangedWeapon"));}

	UAthenaAnimationInstance_GetLoadedItemIsRangedWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemIdleAnimations
// (FUNC_BlueprintCosmetic)
// Parameters:
// struct FAthenaAnimationObjectIdleAnimations ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FAthenaAnimationObjectIdleAnimations UAthenaAnimationInstance::GetLoadedItemIdleAnimations()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetLoadedItemIdleAnimations"));}

	UAthenaAnimationInstance_GetLoadedItemIdleAnimations_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemHandAdditiveOverlayAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UAthenaAnimationInstance::GetLoadedItemHandAdditiveOverlayAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetLoadedItemHandAdditiveOverlayAnimation"));}

	UAthenaAnimationInstance_GetLoadedItemHandAdditiveOverlayAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemFacialAnimations
// (FUNC_Net)
// Parameters:
// struct FAthenaAnimationObjectFacial ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FAthenaAnimationObjectFacial UAthenaAnimationInstance::GetLoadedItemFacialAnimations()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetLoadedItemFacialAnimations"));}

	UAthenaAnimationInstance_GetLoadedItemFacialAnimations_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemEquippingAnimations
// (FUNC_BlueprintCosmetic)
// Parameters:
// struct FAthenaAnimationObjectEquipAnimations ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FAthenaAnimationObjectEquipAnimations UAthenaAnimationInstance::GetLoadedItemEquippingAnimations()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetLoadedItemEquippingAnimations"));}

	UAthenaAnimationInstance_GetLoadedItemEquippingAnimations_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetLoadedItemAllAnimations
// (FUNC_Net, FUNC_Event)
// Parameters:
// struct FAthenaAnimationCoreObjectAnimations ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FAthenaAnimationCoreObjectAnimations UAthenaAnimationInstance::GetLoadedItemAllAnimations()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetLoadedItemAllAnimations"));}

	UAthenaAnimationInstance_GetLoadedItemAllAnimations_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemUsePitchOverride
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationInstance::GetItemUsePitchOverride()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetItemUsePitchOverride"));}

	UAthenaAnimationInstance_GetItemUsePitchOverride_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemMeleeDodgeBlendspace
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UBlendSpace*             ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UBlendSpace* UAthenaAnimationInstance::GetItemMeleeDodgeBlendspace()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetItemMeleeDodgeBlendspace"));}

	UAthenaAnimationInstance_GetItemMeleeDodgeBlendspace_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemContinuousStructurePitchOverride
// (FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_Protected)
// Parameters:
// TEnumAsByte<EContinuousUseID>  ContinuousUseID                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EContinuousUseOverride> Override                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FAthenaAnimationObjectActionContinuousStructPitchOverride ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FAthenaAnimationObjectActionContinuousStructPitchOverride UAthenaAnimationInstance::GetItemContinuousStructurePitchOverride(TEnumAsByte<EContinuousUseID> ContinuousUseID, TEnumAsByte<EContinuousUseOverride> Override)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetItemContinuousStructurePitchOverride"));}

	UAthenaAnimationInstance_GetItemContinuousStructurePitchOverride_Params params;
	params.ContinuousUseID = ContinuousUseID;
	params.Override = Override;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemContinuousStructure
// (FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_Protected)
// Parameters:
// TEnumAsByte<EContinuousUseID>  ContinuousUseID                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EContinuousUseOverride> Override                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FAthenaAnimationObjectActionContinuousStruct ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FAthenaAnimationObjectActionContinuousStruct UAthenaAnimationInstance::GetItemContinuousStructure(TEnumAsByte<EContinuousUseID> ContinuousUseID, TEnumAsByte<EContinuousUseOverride> Override)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetItemContinuousStructure"));}

	UAthenaAnimationInstance_GetItemContinuousStructure_Params params;
	params.ContinuousUseID = ContinuousUseID;
	params.Override = Override;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemComplexOneShotSequence
// (FUNC_Protected)
// Parameters:
// TEnumAsByte<EComplexOneShotSubState> ComplexOneShotSubState         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UAnimSequence*           ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UAthenaAnimationInstance::GetItemComplexOneShotSequence(TEnumAsByte<EComplexOneShotSubState> ComplexOneShotSubState)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetItemComplexOneShotSequence"));}

	UAthenaAnimationInstance_GetItemComplexOneShotSequence_Params params;
	params.ComplexOneShotSubState = ComplexOneShotSubState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemComplexOneShotPlaySpeed
// (FUNC_Private, FUNC_Protected)
// Parameters:
// class UAnimSequence*           AnimSequence                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EComplexOneShotSubState> ComplexOneShotSubState         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UAthenaAnimationInstance::GetItemComplexOneShotPlaySpeed(class UAnimSequence* AnimSequence, TEnumAsByte<EComplexOneShotSubState> ComplexOneShotSubState)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetItemComplexOneShotPlaySpeed"));}

	UAthenaAnimationInstance_GetItemComplexOneShotPlaySpeed_Params params;
	params.AnimSequence = AnimSequence;
	params.ComplexOneShotSubState = ComplexOneShotSubState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemBlockingSubState
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EItemBlockingSubState> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EItemBlockingSubState> UAthenaAnimationInstance::GetItemBlockingSubState()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetItemBlockingSubState"));}

	UAthenaAnimationInstance_GetItemBlockingSubState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemBlockingMainOutOfAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UAthenaAnimationInstance::GetItemBlockingMainOutOfAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetItemBlockingMainOutOfAnimation"));}

	UAthenaAnimationInstance_GetItemBlockingMainOutOfAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemBlockingMainIntoAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UAthenaAnimationInstance::GetItemBlockingMainIntoAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetItemBlockingMainIntoAnimation"));}

	UAthenaAnimationInstance_GetItemBlockingMainIntoAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemBlockingMainBlendspace
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UBlendSpace*             ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UBlendSpace* UAthenaAnimationInstance::GetItemBlockingMainBlendspace()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetItemBlockingMainBlendspace"));}

	UAthenaAnimationInstance_GetItemBlockingMainBlendspace_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetItemBlockingFeedbackSequence
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UAthenaAnimationInstance::GetItemBlockingFeedbackSequence()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetItemBlockingFeedbackSequence"));}

	UAthenaAnimationInstance_GetItemBlockingFeedbackSequence_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetInDockingTransition
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationInstance::GetInDockingTransition()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetInDockingTransition"));}

	UAthenaAnimationInstance_GetInDockingTransition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetCurrentEqippedItem
// (FUNC_BlueprintCosmetic)
// Parameters:
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* UAthenaAnimationInstance::GetCurrentEqippedItem()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetCurrentEqippedItem"));}

	UAthenaAnimationInstance_GetCurrentEqippedItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetControllableSocketGroupCharacterSize
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EAthenaAnimationSocketGroupCharacterSize> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EAthenaAnimationSocketGroupCharacterSize> UAthenaAnimationInstance::GetControllableSocketGroupCharacterSize()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetControllableSocketGroupCharacterSize"));}

	UAthenaAnimationInstance_GetControllableSocketGroupCharacterSize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetControllableSocketGroup
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EAthenaAnimationSocketGroup> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EAthenaAnimationSocketGroup> UAthenaAnimationInstance::GetControllableSocketGroup()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetControllableSocketGroup"));}

	UAthenaAnimationInstance_GetControllableSocketGroup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.GetAnimationLength
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UAnimSequence*           Animation                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UAthenaAnimationInstance::GetAnimationLength(class UAnimSequence* Animation)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.GetAnimationLength"));}

	UAthenaAnimationInstance_GetAnimationLength_Params params;
	params.Animation = Animation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstance.EnteredItemBlockingFeedbackState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaAnimationInstance::EnteredItemBlockingFeedbackState()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.EnteredItemBlockingFeedbackState"));}

	UAthenaAnimationInstance_EnteredItemBlockingFeedbackState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaAnimationInstance.DestroyCosmeticItem
// (FUNC_RequiredAPI, FUNC_MulticastDelegate)
// Parameters:
// TEnumAsByte<EWieldAnimationLocation> SpawnLocation                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationInstance::DestroyCosmeticItem(TEnumAsByte<EWieldAnimationLocation> SpawnLocation)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstance.DestroyCosmeticItem"));}

	UAthenaAnimationInstance_DestroyCosmeticItem_Params params;
	params.SpawnLocation = SpawnLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CameraFunctionLib.UpdateCameraAdditiveType
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<ECameraLookatAnimationType> EnumControllableType           (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// float                          CameraAdditiveBlendValue       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          IsCameraAdditive               (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          CameraPitchTime                (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          CameraYawTime                  (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          CameraYawAngle                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          CameraPitchAngle               (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          MinPitchAngle                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          MaxPitchAngle                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          MaxYawAngle                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          MinYawAngle                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCameraFunctionLib::UpdateCameraAdditiveType(TEnumAsByte<ECameraLookatAnimationType> EnumControllableType, float CameraAdditiveBlendValue, float CameraYawAngle, float CameraPitchAngle, float MinPitchAngle, float MaxPitchAngle, float MaxYawAngle, float MinYawAngle, float* IsCameraAdditive, float* CameraPitchTime, float* CameraYawTime)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CameraFunctionLib.UpdateCameraAdditiveType"));}

	UCameraFunctionLib_UpdateCameraAdditiveType_Params params;
	params.EnumControllableType = EnumControllableType;
	params.CameraAdditiveBlendValue = CameraAdditiveBlendValue;
	params.CameraYawAngle = CameraYawAngle;
	params.CameraPitchAngle = CameraPitchAngle;
	params.MinPitchAngle = MinPitchAngle;
	params.MaxPitchAngle = MaxPitchAngle;
	params.MaxYawAngle = MaxYawAngle;
	params.MinYawAngle = MinYawAngle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (IsCameraAdditive != nullptr)
		*IsCameraAdditive = params.IsCameraAdditive;
	if (CameraPitchTime != nullptr)
		*CameraPitchTime = params.CameraPitchTime;
	if (CameraYawTime != nullptr)
		*CameraYawTime = params.CameraYawTime;
}


// Function Athena.FirstPersonAnimationInstance.LoadSpecificItemAnimations
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TArray<struct FAthenaAnimationLoadObjectsWrapper> AllItemData                    (CPF_Parm, CPF_ZeroConstructor)
// class UClass*                  ItemId                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UFirstPersonAnimationInstance::LoadSpecificItemAnimations(TArray<struct FAthenaAnimationLoadObjectsWrapper> AllItemData, class UClass* ItemId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FirstPersonAnimationInstance.LoadSpecificItemAnimations"));}

	UFirstPersonAnimationInstance_LoadSpecificItemAnimations_Params params;
	params.AllItemData = AllItemData;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ThirdPersonAnimationInstance.UpdateSkeletonFleeingAnimations
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  ObjectID                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UThirdPersonAnimationInstance::UpdateSkeletonFleeingAnimations(class UClass* ObjectID)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ThirdPersonAnimationInstance.UpdateSkeletonFleeingAnimations"));}

	UThirdPersonAnimationInstance_UpdateSkeletonFleeingAnimations_Params params;
	params.ObjectID = ObjectID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ThirdPersonAnimationInstance.UpdatePitchOverrideAnimation
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           IsPrimary                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UThirdPersonAnimationInstance::UpdatePitchOverrideAnimation(bool IsPrimary)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ThirdPersonAnimationInstance.UpdatePitchOverrideAnimation"));}

	UThirdPersonAnimationInstance_UpdatePitchOverrideAnimation_Params params;
	params.IsPrimary = IsPrimary;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ThirdPersonAnimationInstance.UpdateAISpawnAnimation
// (FUNC_BlueprintCosmetic, FUNC_Private, FUNC_Delegate)
// Parameters:
// class AAthenaCharacter*        Owner                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  ObjectID                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           OnLand                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           QuickSpawn                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UThirdPersonAnimationInstance::UpdateAISpawnAnimation(class AAthenaCharacter* Owner, class UClass* ObjectID, bool OnLand, bool QuickSpawn)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ThirdPersonAnimationInstance.UpdateAISpawnAnimation"));}

	UThirdPersonAnimationInstance_UpdateAISpawnAnimation_Params params;
	params.Owner = Owner;
	params.ObjectID = ObjectID;
	params.OnLand = OnLand;
	params.QuickSpawn = QuickSpawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ThirdPersonAnimationInstance.TriggerSensingAnimation
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<ESkeletonSensingState> NewSensingState                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UThirdPersonAnimationInstance::TriggerSensingAnimation(TEnumAsByte<ESkeletonSensingState> NewSensingState)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ThirdPersonAnimationInstance.TriggerSensingAnimation"));}

	UThirdPersonAnimationInstance_TriggerSensingAnimation_Params params;
	params.NewSensingState = NewSensingState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ThirdPersonAnimationInstance.StopMeleeStanceChange
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UThirdPersonAnimationInstance::StopMeleeStanceChange()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ThirdPersonAnimationInstance.StopMeleeStanceChange"));}

	UThirdPersonAnimationInstance_StopMeleeStanceChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ThirdPersonAnimationInstance.StartMeleeStanceChange
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UThirdPersonAnimationInstance::StartMeleeStanceChange()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ThirdPersonAnimationInstance.StartMeleeStanceChange"));}

	UThirdPersonAnimationInstance_StartMeleeStanceChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ThirdPersonAnimationInstance.SetLocomotionTypeActive
// (FUNC_RequiredAPI, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<ELocomotionType>   LocomotionType                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           Active                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UThirdPersonAnimationInstance::SetLocomotionTypeActive(TEnumAsByte<ELocomotionType> LocomotionType, bool Active)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ThirdPersonAnimationInstance.SetLocomotionTypeActive"));}

	UThirdPersonAnimationInstance_SetLocomotionTypeActive_Params params;
	params.LocomotionType = LocomotionType;
	params.Active = Active;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ThirdPersonAnimationInstance.SelectSkeletonFleeingVariationAnimation
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UThirdPersonAnimationInstance::SelectSkeletonFleeingVariationAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ThirdPersonAnimationInstance.SelectSkeletonFleeingVariationAnimation"));}

	UThirdPersonAnimationInstance_SelectSkeletonFleeingVariationAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ThirdPersonAnimationInstance.OnEventAllocateShopInteractionAnimations
// (FUNC_RequiredAPI, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaCharacter*        Owner                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           Active                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInteractionObject> Type                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UThirdPersonAnimationInstance::OnEventAllocateShopInteractionAnimations(class AAthenaCharacter* Owner, bool Active, TEnumAsByte<EInteractionObject> Type)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ThirdPersonAnimationInstance.OnEventAllocateShopInteractionAnimations"));}

	UThirdPersonAnimationInstance_OnEventAllocateShopInteractionAnimations_Params params;
	params.Owner = Owner;
	params.Active = Active;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ThirdPersonAnimationInstance.LoadSpecificItemAnimations
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TArray<struct FAthenaAnimationLoadObjectsWrapper> AllItemData                    (CPF_Parm, CPF_ZeroConstructor)
// class UClass*                  ItemId                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UThirdPersonAnimationInstance::LoadSpecificItemAnimations(TArray<struct FAthenaAnimationLoadObjectsWrapper> AllItemData, class UClass* ItemId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ThirdPersonAnimationInstance.LoadSpecificItemAnimations"));}

	UThirdPersonAnimationInstance_LoadSpecificItemAnimations_Params params;
	params.AllItemData = AllItemData;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ThirdPersonAnimationInstance.GetTargetingPitch
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UThirdPersonAnimationInstance::GetTargetingPitch()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ThirdPersonAnimationInstance.GetTargetingPitch"));}

	UThirdPersonAnimationInstance_GetTargetingPitch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ThirdPersonAnimationInstance.GetCurrentLocomotionType
// (FUNC_Final)
// Parameters:
// TEnumAsByte<ELocomotionType>   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<ELocomotionType> UThirdPersonAnimationInstance::GetCurrentLocomotionType()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ThirdPersonAnimationInstance.GetCurrentLocomotionType"));}

	UThirdPersonAnimationInstance_GetCurrentLocomotionType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ThirdPersonAnimationInstance.GetCharacterPitch
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UThirdPersonAnimationInstance::GetCharacterPitch()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ThirdPersonAnimationInstance.GetCharacterPitch"));}

	UThirdPersonAnimationInstance_GetCharacterPitch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ThirdPersonAnimationInstance.GetAIKnockbackAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UThirdPersonAnimationInstance::GetAIKnockbackAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ThirdPersonAnimationInstance.GetAIKnockbackAnimation"));}

	UThirdPersonAnimationInstance_GetAIKnockbackAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ThirdPersonAnimationInstance.AllocateNewRandomContinuousEmote
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           IsSlotA                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UThirdPersonAnimationInstance::AllocateNewRandomContinuousEmote(bool IsSlotA)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ThirdPersonAnimationInstance.AllocateNewRandomContinuousEmote"));}

	UThirdPersonAnimationInstance_AllocateNewRandomContinuousEmote_Params params;
	params.IsSlotA = IsSlotA;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaAnimationInstanceTestFunctions.IsStateActiveOnAnimationInstance
// (FUNC_Final, FUNC_Delegate)
// Parameters:
// class UAthenaAnimationInstance* AnimationInstance              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FName                   InStatePathName                (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationInstanceTestFunctions::IsStateActiveOnAnimationInstance(class UAthenaAnimationInstance* AnimationInstance, const struct FName& InStatePathName)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstanceTestFunctions.IsStateActiveOnAnimationInstance"));}

	UAthenaAnimationInstanceTestFunctions_IsStateActiveOnAnimationInstance_Params params;
	params.AnimationInstance = AnimationInstance;
	params.InStatePathName = InStatePathName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationInstanceTestFunctions.GetActiveStatesOnAnimationInstance
// (FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UAthenaAnimationInstance* AnimationInstance              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<struct FName>           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<struct FName> UAthenaAnimationInstanceTestFunctions::GetActiveStatesOnAnimationInstance(class UAthenaAnimationInstance* AnimationInstance)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationInstanceTestFunctions.GetActiveStatesOnAnimationInstance"));}

	UAthenaAnimationInstanceTestFunctions_GetActiveStatesOnAnimationInstance_Params params;
	params.AnimationInstance = AnimationInstance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationJumpingBlueprintFunctions.SetMaxJumpSequence
// (FUNC_BlueprintAuthorityOnly, FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FAthenaAnimationJumping Jumping                        (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// int                            NewMaxJumpSequence             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaAnimationJumpingBlueprintFunctions::SetMaxJumpSequence(int NewMaxJumpSequence, struct FAthenaAnimationJumping* Jumping)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationJumpingBlueprintFunctions.SetMaxJumpSequence"));}

	UAthenaAnimationJumpingBlueprintFunctions_SetMaxJumpSequence_Params params;
	params.NewMaxJumpSequence = NewMaxJumpSequence;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Jumping != nullptr)
		*Jumping = params.Jumping;
}


// Function Athena.AthenaAnimationJumpingBlueprintFunctions.SetJumpCompleted
// (FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FAthenaAnimationJumping Jumping                        (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UAthenaAnimationJumpingBlueprintFunctions::SetJumpCompleted(struct FAthenaAnimationJumping* Jumping)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationJumpingBlueprintFunctions.SetJumpCompleted"));}

	UAthenaAnimationJumpingBlueprintFunctions_SetJumpCompleted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Jumping != nullptr)
		*Jumping = params.Jumping;
}


// Function Athena.AthenaAnimationJumpingBlueprintFunctions.IsHeavyLanding
// (FUNC_Final, FUNC_NetReliable, FUNC_Delegate, FUNC_NetServer, FUNC_HasDefaults)
// Parameters:
// struct FAthenaAnimationJumping Jumping                        (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationJumpingBlueprintFunctions::IsHeavyLanding(const struct FAthenaAnimationJumping& Jumping)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationJumpingBlueprintFunctions.IsHeavyLanding"));}

	UAthenaAnimationJumpingBlueprintFunctions_IsHeavyLanding_Params params;
	params.Jumping = Jumping;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationJumpingBlueprintFunctions.GetPreImpactTime
// (FUNC_BlueprintAuthorityOnly, FUNC_NetReliable, FUNC_Delegate, FUNC_NetServer, FUNC_HasDefaults)
// Parameters:
// struct FAthenaAnimationJumping Jumping                        (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UAthenaAnimationJumpingBlueprintFunctions::GetPreImpactTime(const struct FAthenaAnimationJumping& Jumping)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationJumpingBlueprintFunctions.GetPreImpactTime"));}

	UAthenaAnimationJumpingBlueprintFunctions_GetPreImpactTime_Params params;
	params.Jumping = Jumping;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationJumpingBlueprintFunctions.GetLandingSequence
// (FUNC_BlueprintAuthorityOnly, FUNC_NetReliable, FUNC_Delegate, FUNC_NetServer, FUNC_HasDefaults)
// Parameters:
// struct FAthenaAnimationJumping Jumping                        (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UAthenaAnimationJumpingBlueprintFunctions::GetLandingSequence(const struct FAthenaAnimationJumping& Jumping)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationJumpingBlueprintFunctions.GetLandingSequence"));}

	UAthenaAnimationJumpingBlueprintFunctions_GetLandingSequence_Params params;
	params.Jumping = Jumping;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationJumpingBlueprintFunctions.GetJumpSequence
// (FUNC_BlueprintAuthorityOnly, FUNC_NetReliable, FUNC_Delegate, FUNC_NetServer, FUNC_HasDefaults)
// Parameters:
// struct FAthenaAnimationJumping Jumping                        (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UAthenaAnimationJumpingBlueprintFunctions::GetJumpSequence(const struct FAthenaAnimationJumping& Jumping)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationJumpingBlueprintFunctions.GetJumpSequence"));}

	UAthenaAnimationJumpingBlueprintFunctions_GetJumpSequence_Params params;
	params.Jumping = Jumping;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationJumpingBlueprintFunctions.GetJumpingState
// (FUNC_Final, FUNC_NetReliable, FUNC_Delegate, FUNC_NetServer, FUNC_HasDefaults)
// Parameters:
// struct FAthenaAnimationJumping Jumping                        (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// TEnumAsByte<EAthenaAnimationJumpingState> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EAthenaAnimationJumpingState> UAthenaAnimationJumpingBlueprintFunctions::GetJumpingState(const struct FAthenaAnimationJumping& Jumping)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationJumpingBlueprintFunctions.GetJumpingState"));}

	UAthenaAnimationJumpingBlueprintFunctions_GetJumpingState_Params params;
	params.Jumping = Jumping;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLadderBlueprintFunctions.SetClimbOnComplete
// (FUNC_Net, FUNC_NetReliable, FUNC_NetRequest, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FAthenaAnimationLadder  Ladder                         (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UAthenaAnimationLadderBlueprintFunctions::SetClimbOnComplete(struct FAthenaAnimationLadder* Ladder)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationLadderBlueprintFunctions.SetClimbOnComplete"));}

	UAthenaAnimationLadderBlueprintFunctions_SetClimbOnComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Ladder != nullptr)
		*Ladder = params.Ladder;
}


// Function Athena.AthenaAnimationLadderBlueprintFunctions.SetClimbOffComplete
// (FUNC_Net, FUNC_NetReliable, FUNC_NetRequest, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FAthenaAnimationLadder  Ladder                         (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UAthenaAnimationLadderBlueprintFunctions::SetClimbOffComplete(struct FAthenaAnimationLadder* Ladder)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationLadderBlueprintFunctions.SetClimbOffComplete"));}

	UAthenaAnimationLadderBlueprintFunctions_SetClimbOffComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Ladder != nullptr)
		*Ladder = params.Ladder;
}


// Function Athena.AthenaAnimationLadderBlueprintFunctions.GetPlayerIntent
// (FUNC_BlueprintAuthorityOnly, FUNC_Net, FUNC_NetReliable, FUNC_NetRequest, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient)
// Parameters:
// struct FAthenaAnimationLadder  Ladder                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UAthenaAnimationLadderBlueprintFunctions::GetPlayerIntent(const struct FAthenaAnimationLadder& Ladder)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationLadderBlueprintFunctions.GetPlayerIntent"));}

	UAthenaAnimationLadderBlueprintFunctions_GetPlayerIntent_Params params;
	params.Ladder = Ladder;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLadderBlueprintFunctions.GetLadderState
// (FUNC_Final, FUNC_Net, FUNC_NetReliable, FUNC_NetRequest, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient)
// Parameters:
// struct FAthenaAnimationLadder  Ladder                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// TEnumAsByte<EAthenaAnimationLadderState> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EAthenaAnimationLadderState> UAthenaAnimationLadderBlueprintFunctions::GetLadderState(const struct FAthenaAnimationLadder& Ladder)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationLadderBlueprintFunctions.GetLadderState"));}

	UAthenaAnimationLadderBlueprintFunctions_GetLadderState_Params params;
	params.Ladder = Ladder;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationLadderBlueprintFunctions.GetClimbDistance
// (FUNC_BlueprintAuthorityOnly, FUNC_Net, FUNC_NetReliable, FUNC_NetRequest, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient)
// Parameters:
// struct FAthenaAnimationLadder  Ladder                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UAthenaAnimationLadderBlueprintFunctions::GetClimbDistance(const struct FAthenaAnimationLadder& Ladder)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationLadderBlueprintFunctions.GetClimbDistance"));}

	UAthenaAnimationLadderBlueprintFunctions_GetClimbDistance_Params params;
	params.Ladder = Ladder;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationMountedWeaponBlueprintFunctions.SetFireFinished
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FAthenaAnimationMountedWeapon MountedWeapon                  (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UAthenaAnimationMountedWeaponBlueprintFunctions::SetFireFinished(struct FAthenaAnimationMountedWeapon* MountedWeapon)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationMountedWeaponBlueprintFunctions.SetFireFinished"));}

	UAthenaAnimationMountedWeaponBlueprintFunctions_SetFireFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (MountedWeapon != nullptr)
		*MountedWeapon = params.MountedWeapon;
}


// Function Athena.AthenaAnimationWheelBlueprintFunctions.GetWheelTime
// (FUNC_BlueprintAuthorityOnly, FUNC_NetReliable, FUNC_NetRequest, FUNC_Delegate, FUNC_NetServer, FUNC_HasDefaults, FUNC_NetClient)
// Parameters:
// struct FAthenaAnimationWheel   Wheel                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UAthenaAnimationWheelBlueprintFunctions::GetWheelTime(const struct FAthenaAnimationWheel& Wheel)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationWheelBlueprintFunctions.GetWheelTime"));}

	UAthenaAnimationWheelBlueprintFunctions_GetWheelTime_Params params;
	params.Wheel = Wheel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWheelBlueprintFunctions.GetWheelDirection
// (FUNC_BlueprintAuthorityOnly, FUNC_NetReliable, FUNC_NetRequest, FUNC_Delegate, FUNC_NetServer, FUNC_HasDefaults, FUNC_NetClient)
// Parameters:
// struct FAthenaAnimationWheel   Wheel                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UAthenaAnimationWheelBlueprintFunctions::GetWheelDirection(const struct FAthenaAnimationWheel& Wheel)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationWheelBlueprintFunctions.GetWheelDirection"));}

	UAthenaAnimationWheelBlueprintFunctions_GetWheelDirection_Params params;
	params.Wheel = Wheel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWheelBlueprintFunctions.GetWheelAnimationType
// (FUNC_Final, FUNC_NetReliable, FUNC_NetRequest, FUNC_Delegate, FUNC_NetServer, FUNC_HasDefaults, FUNC_NetClient)
// Parameters:
// struct FAthenaAnimationWheel   Wheel                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// TEnumAsByte<EWheelAnimationType> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EWheelAnimationType> UAthenaAnimationWheelBlueprintFunctions::GetWheelAnimationType(const struct FAthenaAnimationWheel& Wheel)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationWheelBlueprintFunctions.GetWheelAnimationType"));}

	UAthenaAnimationWheelBlueprintFunctions_GetWheelAnimationType_Params params;
	params.Wheel = Wheel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWheelBlueprintFunctions.GetRightWheelArmDown
// (FUNC_Final, FUNC_NetReliable, FUNC_NetRequest, FUNC_Delegate, FUNC_NetServer, FUNC_HasDefaults, FUNC_NetClient)
// Parameters:
// struct FAthenaAnimationWheel   Wheel                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationWheelBlueprintFunctions::GetRightWheelArmDown(const struct FAthenaAnimationWheel& Wheel)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationWheelBlueprintFunctions.GetRightWheelArmDown"));}

	UAthenaAnimationWheelBlueprintFunctions_GetRightWheelArmDown_Params params;
	params.Wheel = Wheel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWheelBlueprintFunctions.GetRightHandSocket
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_NetReliable, FUNC_NetRequest, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasDefaults, FUNC_NetClient)
// Parameters:
// struct FAthenaAnimationWheel   Wheel                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// class UAthenaAnimationInstance* Owner                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FSocketId               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FSocketId UAthenaAnimationWheelBlueprintFunctions::GetRightHandSocket(const struct FAthenaAnimationWheel& Wheel, class UAthenaAnimationInstance* Owner)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationWheelBlueprintFunctions.GetRightHandSocket"));}

	UAthenaAnimationWheelBlueprintFunctions_GetRightHandSocket_Params params;
	params.Wheel = Wheel;
	params.Owner = Owner;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWheelBlueprintFunctions.GetRightFingerAlpha
// (FUNC_BlueprintAuthorityOnly, FUNC_NetReliable, FUNC_NetRequest, FUNC_Delegate, FUNC_NetServer, FUNC_HasDefaults, FUNC_NetClient)
// Parameters:
// struct FAthenaAnimationWheel   Wheel                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UAthenaAnimationWheelBlueprintFunctions::GetRightFingerAlpha(const struct FAthenaAnimationWheel& Wheel)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationWheelBlueprintFunctions.GetRightFingerAlpha"));}

	UAthenaAnimationWheelBlueprintFunctions_GetRightFingerAlpha_Params params;
	params.Wheel = Wheel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWheelBlueprintFunctions.GetLeftWheelArmDown
// (FUNC_Final, FUNC_NetReliable, FUNC_NetRequest, FUNC_Delegate, FUNC_NetServer, FUNC_HasDefaults, FUNC_NetClient)
// Parameters:
// struct FAthenaAnimationWheel   Wheel                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationWheelBlueprintFunctions::GetLeftWheelArmDown(const struct FAthenaAnimationWheel& Wheel)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationWheelBlueprintFunctions.GetLeftWheelArmDown"));}

	UAthenaAnimationWheelBlueprintFunctions_GetLeftWheelArmDown_Params params;
	params.Wheel = Wheel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWheelBlueprintFunctions.GetLeftHandSocket
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_NetReliable, FUNC_NetRequest, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasDefaults, FUNC_NetClient)
// Parameters:
// struct FAthenaAnimationWheel   Wheel                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// class UAthenaAnimationInstance* Owner                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FSocketId               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FSocketId UAthenaAnimationWheelBlueprintFunctions::GetLeftHandSocket(const struct FAthenaAnimationWheel& Wheel, class UAthenaAnimationInstance* Owner)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationWheelBlueprintFunctions.GetLeftHandSocket"));}

	UAthenaAnimationWheelBlueprintFunctions_GetLeftHandSocket_Params params;
	params.Wheel = Wheel;
	params.Owner = Owner;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWheelBlueprintFunctions.GetLeftFingerAlpha
// (FUNC_BlueprintAuthorityOnly, FUNC_NetReliable, FUNC_NetRequest, FUNC_Delegate, FUNC_NetServer, FUNC_HasDefaults, FUNC_NetClient)
// Parameters:
// struct FAthenaAnimationWheel   Wheel                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UAthenaAnimationWheelBlueprintFunctions::GetLeftFingerAlpha(const struct FAthenaAnimationWheel& Wheel)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationWheelBlueprintFunctions.GetLeftFingerAlpha"));}

	UAthenaAnimationWheelBlueprintFunctions_GetLeftFingerAlpha_Params params;
	params.Wheel = Wheel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWheelBlueprintFunctions.GetFullBodyAlpha
// (FUNC_BlueprintAuthorityOnly, FUNC_NetReliable, FUNC_NetRequest, FUNC_Delegate, FUNC_NetServer, FUNC_HasDefaults, FUNC_NetClient)
// Parameters:
// struct FAthenaAnimationWheel   Wheel                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UAthenaAnimationWheelBlueprintFunctions::GetFullBodyAlpha(const struct FAthenaAnimationWheel& Wheel)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationWheelBlueprintFunctions.GetFullBodyAlpha"));}

	UAthenaAnimationWheelBlueprintFunctions_GetFullBodyAlpha_Params params;
	params.Wheel = Wheel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.UpdateThirdPersonArmOverlayFlags
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UAthenaAnimationInstance* Owner                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FString                 SourceString                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor)
// struct FAthenaAnimationLocomotion Locomotion                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UAthenaAnimationWieldedItemAnimationOverlayFunctions::UpdateThirdPersonArmOverlayFlags(class UAthenaAnimationInstance* Owner, const struct FString& SourceString, const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.UpdateThirdPersonArmOverlayFlags"));}

	UAthenaAnimationWieldedItemAnimationOverlayFunctions_UpdateThirdPersonArmOverlayFlags_Params params;
	params.Owner = Owner;
	params.SourceString = SourceString;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.UpdateFirstPersonArmOverlayFlags
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UAthenaAnimationInstance* Owner                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FString                 SourceString                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor)
// struct FAthenaAnimationLocomotion Locomotion                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UAthenaAnimationWieldedItemAnimationOverlayFunctions::UpdateFirstPersonArmOverlayFlags(class UAthenaAnimationInstance* Owner, const struct FString& SourceString, const struct FAthenaAnimationLocomotion& Locomotion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.UpdateFirstPersonArmOverlayFlags"));}

	UAthenaAnimationWieldedItemAnimationOverlayFunctions_UpdateFirstPersonArmOverlayFlags_Params params;
	params.Owner = Owner;
	params.SourceString = SourceString;
	params.Locomotion = Locomotion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.UpdateAnimOverlayParameters
// (FUNC_RequiredAPI, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UAthenaAnimationInstance* Owner                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EArmOverlayState>  ArmOverlayState                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ThirdPersonAnimgraph           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaAnimationWieldedItemAnimationOverlayFunctions::UpdateAnimOverlayParameters(class UAthenaAnimationInstance* Owner, TEnumAsByte<EArmOverlayState> ArmOverlayState, bool ThirdPersonAnimgraph)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.UpdateAnimOverlayParameters"));}

	UAthenaAnimationWieldedItemAnimationOverlayFunctions_UpdateAnimOverlayParameters_Params params;
	params.Owner = Owner;
	params.ArmOverlayState = ArmOverlayState;
	params.ThirdPersonAnimgraph = ThirdPersonAnimgraph;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.StopFacialAnimationMontage
// (FUNC_RequiredAPI, FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Private, FUNC_Delegate)
// Parameters:
// class UAthenaAnimationInstance* Owner                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UAnimMontage*            MontageToStop                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          BlendTime                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EFacialPriority>   Priority                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationWieldedItemAnimationOverlayFunctions::StopFacialAnimationMontage(class UAthenaAnimationInstance* Owner, class UAnimMontage* MontageToStop, float BlendTime, TEnumAsByte<EFacialPriority> Priority)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.StopFacialAnimationMontage"));}

	UAthenaAnimationWieldedItemAnimationOverlayFunctions_StopFacialAnimationMontage_Params params;
	params.Owner = Owner;
	params.MontageToStop = MontageToStop;
	params.BlendTime = BlendTime;
	params.Priority = Priority;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.PlayNewFacialAnimation
// (FUNC_RequiredAPI, FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Private, FUNC_Delegate)
// Parameters:
// class UAthenaAnimationInstance* Owner                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UAnimMontage*            MontageToPlay                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          MontagePlayRate                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EFacialPriority>   Priority                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationWieldedItemAnimationOverlayFunctions::PlayNewFacialAnimation(class UAthenaAnimationInstance* Owner, class UAnimMontage* MontageToPlay, float MontagePlayRate, TEnumAsByte<EFacialPriority> Priority)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.PlayNewFacialAnimation"));}

	UAthenaAnimationWieldedItemAnimationOverlayFunctions_PlayNewFacialAnimation_Params params;
	params.Owner = Owner;
	params.MontageToPlay = MontageToPlay;
	params.MontagePlayRate = MontagePlayRate;
	params.Priority = Priority;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.JumpToFacialAnimationMontageSection
// (FUNC_RequiredAPI, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Protected, FUNC_Delegate)
// Parameters:
// class UAthenaAnimationInstance* Owner                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UAnimMontage*            PlayingMontage                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FName                   MontageSection                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EFacialPriority>   Priority                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaAnimationWieldedItemAnimationOverlayFunctions::JumpToFacialAnimationMontageSection(class UAthenaAnimationInstance* Owner, class UAnimMontage* PlayingMontage, const struct FName& MontageSection, TEnumAsByte<EFacialPriority> Priority)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationWieldedItemAnimationOverlayFunctions.JumpToFacialAnimationMontageSection"));}

	UAthenaAnimationWieldedItemAnimationOverlayFunctions_JumpToFacialAnimationMontageSection_Params params;
	params.Owner = Owner;
	params.PlayingMontage = PlayingMontage;
	params.MontageSection = MontageSection;
	params.Priority = Priority;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWieldedItemFunctions.GetIntoContinuousUseSwimmingAnimationBlendSpace
// (FUNC_BlueprintCosmetic, FUNC_Delegate)
// Parameters:
// class UAthenaAnimationInstance* AnimInstance                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EContinuousUseOverride> Override                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UBlendSpace*             ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UBlendSpace* UAthenaAnimationWieldedItemFunctions::GetIntoContinuousUseSwimmingAnimationBlendSpace(class UAthenaAnimationInstance* AnimInstance, TEnumAsByte<EContinuousUseOverride> Override)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationWieldedItemFunctions.GetIntoContinuousUseSwimmingAnimationBlendSpace"));}

	UAthenaAnimationWieldedItemFunctions_GetIntoContinuousUseSwimmingAnimationBlendSpace_Params params;
	params.AnimInstance = AnimInstance;
	params.Override = Override;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAnimationWieldedItemFunctions.GetIntoContinuousUseAnimationSequence
// (FUNC_BlueprintCosmetic, FUNC_Delegate)
// Parameters:
// class UAthenaAnimationInstance* AnimInstance                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EContinuousUseOverride> Override                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UAnimSequenceBase*       ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequenceBase* UAthenaAnimationWieldedItemFunctions::GetIntoContinuousUseAnimationSequence(class UAthenaAnimationInstance* AnimInstance, TEnumAsByte<EContinuousUseOverride> Override)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAnimationWieldedItemFunctions.GetIntoContinuousUseAnimationSequence"));}

	UAthenaAnimationWieldedItemFunctions_GetIntoContinuousUseAnimationSequence_Params params;
	params.AnimInstance = AnimInstance;
	params.Override = Override;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCameraComponent.GetIsUnderwater
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaCameraComponent::GetIsUnderwater()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCameraComponent.GetIsUnderwater"));}

	UAthenaCameraComponent_GetIsUnderwater_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCameraComponent.Activate
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           bReset                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCameraComponent::Activate(bool bReset)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCameraComponent.Activate"));}

	UAthenaCameraComponent_Activate_Params params;
	params.bReset = bReset;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LookAtOffsetComponent.GetLookAtOffset
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_NetReliable)
// Parameters:
// struct FLookAtOffset           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FLookAtOffset ULookAtOffsetComponent::GetLookAtOffset()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LookAtOffsetComponent.GetLookAtOffset"));}

	ULookAtOffsetComponent_GetLookAtOffset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CharacterInterface.GetMouthPosition
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector UCharacterInterface::GetMouthPosition()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterInterface.GetMouthPosition"));}

	UCharacterInterface_GetMouthPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CharacterFootImpactMeshInterface.GetFootImpactSkeletonMeshComponent
// (FUNC_BlueprintCosmetic)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData)

class USkeletalMeshComponent* UCharacterFootImpactMeshInterface::GetFootImpactSkeletonMeshComponent()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterFootImpactMeshInterface.GetFootImpactSkeletonMeshComponent"));}

	UCharacterFootImpactMeshInterface_GetFootImpactSkeletonMeshComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CharacterInertInterface.SetInert
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCharacterInertInterface::SetInert()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterInertInterface.SetInert"));}

	UCharacterInertInterface_SetInert_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CharacterInertInterface.IsInert
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCharacterInertInterface::IsInert()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterInertInterface.IsInert"));}

	UCharacterInertInterface_IsInert_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CharacterInertInterface.ClearInert
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCharacterInertInterface::ClearInert()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterInertInterface.ClearInert"));}

	UCharacterInertInterface_ClearInert_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ControllerInterface.EndControl
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UControllerInterface::EndControl()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControllerInterface.EndControl"));}

	UControllerInterface_EndControl_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LoadableItemInterface.CanBeUnloaded
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ULoadableItemInterface::CanBeUnloaded()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LoadableItemInterface.CanBeUnloaded"));}

	ULoadableItemInterface_CanBeUnloaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LoadableItemInterface.CanBeLoaded
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ULoadableItemInterface::CanBeLoaded()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LoadableItemInterface.CanBeLoaded"));}

	ULoadableItemInterface_CanBeLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.WieldItemByActor
// (FUNC_RequiredAPI, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Protected)
// Parameters:
// class AActor*                  Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           UnwieldFast                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EWieldItemReturnCode> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EWieldItemReturnCode> UInventoryManipulatorInterface::WieldItemByActor(class AActor* Item, bool UnwieldFast)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorInterface.WieldItemByActor"));}

	UInventoryManipulatorInterface_WieldItemByActor_Params params;
	params.Item = Item;
	params.UnwieldFast = UnwieldFast;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.ToggleWieldItem
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UInventoryManipulatorInterface::ToggleWieldItem()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorInterface.ToggleWieldItem"));}

	UInventoryManipulatorInterface_ToggleWieldItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryManipulatorInterface.RemoveItem
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AItemInfo*               Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UInventoryManipulatorInterface::RemoveItem(class AItemInfo* Item)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorInterface.RemoveItem"));}

	UInventoryManipulatorInterface_RemoveItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.QuickSelectItemOfType
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EItemType>         ItemType                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            TypedItemIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UInventoryManipulatorInterface::QuickSelectItemOfType(TEnumAsByte<EItemType> ItemType, int TypedItemIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorInterface.QuickSelectItemOfType"));}

	UInventoryManipulatorInterface_QuickSelectItemOfType_Params params;
	params.ItemType = ItemType;
	params.TypedItemIndex = TypedItemIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryManipulatorInterface.QuickSelectItemOfCategory
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  Category                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            IndexIntoCategory              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UInventoryManipulatorInterface::QuickSelectItemOfCategory(class UClass* Category, int IndexIntoCategory)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorInterface.QuickSelectItemOfCategory"));}

	UInventoryManipulatorInterface_QuickSelectItemOfCategory_Params params;
	params.Category = Category;
	params.IndexIntoCategory = IndexIntoCategory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryManipulatorInterface.QuickSelectItem
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            ItemIndex                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UInventoryManipulatorInterface::QuickSelectItem(int ItemIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorInterface.QuickSelectItem"));}

	UInventoryManipulatorInterface_QuickSelectItem_Params params;
	params.ItemIndex = ItemIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryManipulatorInterface.PickUpItem
// (FUNC_RequiredAPI, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Protected)
// Parameters:
// class AItemInfo*               Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           AndWield                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UInventoryManipulatorInterface::PickUpItem(class AItemInfo* Item, bool AndWield)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorInterface.PickUpItem"));}

	UInventoryManipulatorInterface_PickUpItem_Params params;
	params.Item = Item;
	params.AndWield = AndWield;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.GetNumberOfItemsOfItemCategory
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  ItemSlot                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UInventoryManipulatorInterface::GetNumberOfItemsOfItemCategory(class UClass* ItemSlot)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorInterface.GetNumberOfItemsOfItemCategory"));}

	UInventoryManipulatorInterface_GetNumberOfItemsOfItemCategory_Params params;
	params.ItemSlot = ItemSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.GetItems
// ()
// Parameters:
// TArray<class UClass*>          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class UClass*> UInventoryManipulatorInterface::GetItems()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorInterface.GetItems"));}

	UInventoryManipulatorInterface_GetItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.GetCurrentItemIndex
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UInventoryManipulatorInterface::GetCurrentItemIndex()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorInterface.GetCurrentItemIndex"));}

	UInventoryManipulatorInterface_GetCurrentItemIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.DropWieldedItem
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EDropItemReturnCode> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EDropItemReturnCode> UInventoryManipulatorInterface::DropWieldedItem()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorInterface.DropWieldedItem"));}

	UInventoryManipulatorInterface_DropWieldedItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.CycleItemUp
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UInventoryManipulatorInterface::CycleItemUp()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorInterface.CycleItemUp"));}

	UInventoryManipulatorInterface_CycleItemUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryManipulatorInterface.CycleItemType
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EItemType>         ItemType                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UInventoryManipulatorInterface::CycleItemType(TEnumAsByte<EItemType> ItemType)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorInterface.CycleItemType"));}

	UInventoryManipulatorInterface_CycleItemType_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryManipulatorInterface.CycleItemDown
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UInventoryManipulatorInterface::CycleItemDown()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorInterface.CycleItemDown"));}

	UInventoryManipulatorInterface_CycleItemDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryManipulatorInterface.CycleItemCategory
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  Category                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UInventoryManipulatorInterface::CycleItemCategory(class UClass* Category)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorInterface.CycleItemCategory"));}

	UInventoryManipulatorInterface_CycleItemCategory_Params params;
	params.Category = Category;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryManipulatorInterface.ConsumeItem
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AItemInfo*               Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UInventoryManipulatorInterface::ConsumeItem(class AItemInfo* Item)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorInterface.ConsumeItem"));}

	UInventoryManipulatorInterface_ConsumeItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.CanDropWieldedItem
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EDropItemReturnCode> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EDropItemReturnCode> UInventoryManipulatorInterface::CanDropWieldedItem()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorInterface.CanDropWieldedItem"));}

	UInventoryManipulatorInterface_CanDropWieldedItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.CanAddItemOfItemCategory
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  ItemSlot                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<ECanAddItemQueryResult> ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<ECanAddItemQueryResult> UInventoryManipulatorInterface::CanAddItemOfItemCategory(class UClass* ItemSlot)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorInterface.CanAddItemOfItemCategory"));}

	UInventoryManipulatorInterface_CanAddItemOfItemCategory_Params params;
	params.ItemSlot = ItemSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.AddItemOfSubclass
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  InItem                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UInventoryManipulatorInterface::AddItemOfSubclass(class UClass* InItem)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorInterface.AddItemOfSubclass"));}

	UInventoryManipulatorInterface_AddItemOfSubclass_Params params;
	params.InItem = InItem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorInterface.AddItem
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AItemInfo*               Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UInventoryManipulatorInterface::AddItem(class AItemInfo* Item)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorInterface.AddItem"));}

	UInventoryManipulatorInterface_AddItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldedItemInterface.WieldItem
// (FUNC_RequiredAPI, FUNC_MulticastDelegate, FUNC_Delegate)
// Parameters:
// TScriptInterface<class UWieldableInterface> Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           Fast                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EWieldItemReturnCode> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EWieldItemReturnCode> UWieldedItemInterface::WieldItem(const TScriptInterface<class UWieldableInterface>& Item, bool Fast)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldedItemInterface.WieldItem"));}

	UWieldedItemInterface_WieldItem_Params params;
	params.Item = Item;
	params.Fast = Fast;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldedItemInterface.UnstashItem
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EStashReason>      Reason                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UWieldedItemInterface::UnstashItem(TEnumAsByte<EStashReason> Reason)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldedItemInterface.UnstashItem"));}

	UWieldedItemInterface_UnstashItem_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldedItemInterface.StashItem
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EStashReason>      Reason                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UWieldedItemInterface::StashItem(TEnumAsByte<EStashReason> Reason)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldedItemInterface.StashItem"));}

	UWieldedItemInterface_StashItem_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldedItemInterface.SlowStashItem
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EStashReason>      Reason                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UWieldedItemInterface::SlowStashItem(TEnumAsByte<EStashReason> Reason)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldedItemInterface.SlowStashItem"));}

	UWieldedItemInterface_SlowStashItem_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldedItemInterface.GetWieldedItemIfNotStashed
// ()
// Parameters:
// TScriptInterface<class UWieldableInterface> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TScriptInterface<class UWieldableInterface> UWieldedItemInterface::GetWieldedItemIfNotStashed()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldedItemInterface.GetWieldedItemIfNotStashed"));}

	UWieldedItemInterface_GetWieldedItemIfNotStashed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldedItemInterface.GetWieldedItem
// ()
// Parameters:
// TScriptInterface<class UWieldableInterface> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TScriptInterface<class UWieldableInterface> UWieldedItemInterface::GetWieldedItem()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldedItemInterface.GetWieldedItem"));}

	UWieldedItemInterface_GetWieldedItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CloudDomeInterface.UpdateCloudMeshes
// (FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FCloudVisualParameters  CloudVisualParametersIn        (CPF_Parm, CPF_OutParm)
// TArray<struct FTiledCloudProperties> CloudTileIn                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor)
// TArray<struct FRenderedCloudProperties> RenderedCloudsIn               (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor)
// TArray<struct FCloudTypeDefinition> CloudMeshesIn                  (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor)
// TArray<struct FCloudTypeNormalizedWeight> NormalizedCloudWeightsIn       (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor)

void UCloudDomeInterface::UpdateCloudMeshes(struct FCloudVisualParameters* CloudVisualParametersIn, TArray<struct FTiledCloudProperties>* CloudTileIn, TArray<struct FRenderedCloudProperties>* RenderedCloudsIn, TArray<struct FCloudTypeDefinition>* CloudMeshesIn, TArray<struct FCloudTypeNormalizedWeight>* NormalizedCloudWeightsIn)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CloudDomeInterface.UpdateCloudMeshes"));}

	UCloudDomeInterface_UpdateCloudMeshes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (CloudVisualParametersIn != nullptr)
		*CloudVisualParametersIn = params.CloudVisualParametersIn;
	if (CloudTileIn != nullptr)
		*CloudTileIn = params.CloudTileIn;
	if (RenderedCloudsIn != nullptr)
		*RenderedCloudsIn = params.RenderedCloudsIn;
	if (CloudMeshesIn != nullptr)
		*CloudMeshesIn = params.CloudMeshesIn;
	if (NormalizedCloudWeightsIn != nullptr)
		*NormalizedCloudWeightsIn = params.NormalizedCloudWeightsIn;
}


// Function Athena.CloudDomeInterface.GetCloudDomePosition
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector UCloudDomeInterface::GetCloudDomePosition()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CloudDomeInterface.GetCloudDomePosition"));}

	UCloudDomeInterface_GetCloudDomePosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.WieldItem
// (FUNC_RequiredAPI, FUNC_MulticastDelegate, FUNC_Delegate)
// Parameters:
// TScriptInterface<class UWieldableInterface> Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           Fast                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EWieldItemReturnCode> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EWieldItemReturnCode> AAthenaCharacter::WieldItem(const TScriptInterface<class UWieldableInterface>& Item, bool Fast)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.WieldItem"));}

	AAthenaCharacter_WieldItem_Params params;
	params.Item = Item;
	params.Fast = Fast;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.UseItem
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  NotificationInputId            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AAthenaCharacter::UseItem(class UClass* NotificationInputId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.UseItem"));}

	AAthenaCharacter_UseItem_Params params;
	params.NotificationInputId = NotificationInputId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.UnforceWaterHeight
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaCharacter::UnforceWaterHeight()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.UnforceWaterHeight"));}

	AAthenaCharacter_UnforceWaterHeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacter.SetIgnoreReplicationRotationOnly
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           InIgnoreReplicationRotationOnly (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AAthenaCharacter::SetIgnoreReplicationRotationOnly(bool InIgnoreReplicationRotationOnly)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.SetIgnoreReplicationRotationOnly"));}

	AAthenaCharacter_SetIgnoreReplicationRotationOnly_Params params;
	params.InIgnoreReplicationRotationOnly = InIgnoreReplicationRotationOnly;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacter.ReceiveRestart
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaCharacter::ReceiveRestart()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.ReceiveRestart"));}

	AAthenaCharacter_ReceiveRestart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacter.PickUpItem
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AItemInfo*               ItemInfo                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           AndWield                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AAthenaCharacter::PickUpItem(class AItemInfo* ItemInfo, bool AndWield)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.PickUpItem"));}

	AAthenaCharacter_PickUpItem_Params params;
	params.ItemInfo = ItemInfo;
	params.AndWield = AndWield;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacter.Kill
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<ECharacterDeathType> DeathType                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AAthenaCharacter::Kill(TEnumAsByte<ECharacterDeathType> DeathType)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.Kill"));}

	AAthenaCharacter_Kill_Params params;
	params.DeathType = DeathType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacter.IsInWater
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AAthenaCharacter::IsInWater()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.IsInWater"));}

	AAthenaCharacter_IsInWater_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.IsInteractionValid
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  InInteractable                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AAthenaCharacter::IsInteractionValid(class AActor* InInteractable)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.IsInteractionValid"));}

	AAthenaCharacter_IsInteractionValid_Params params;
	params.InInteractable = InInteractable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.IsDead
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AAthenaCharacter::IsDead()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.IsDead"));}

	AAthenaCharacter_IsDead_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.IsCurrentItemReadyForAI
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  NotificationInputId            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AAthenaCharacter::IsCurrentItemReadyForAI(class UClass* NotificationInputId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.IsCurrentItemReadyForAI"));}

	AAthenaCharacter_IsCurrentItemReadyForAI_Params params;
	params.NotificationInputId = NotificationInputId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.InteractWith
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  InInteractable                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  NotificationInputId            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AAthenaCharacter::InteractWith(class AActor* InInteractable, class UClass* NotificationInputId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.InteractWith"));}

	AAthenaCharacter_InteractWith_Params params;
	params.InInteractable = InInteractable;
	params.NotificationInputId = NotificationInputId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacter.Interact
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  InInteractable                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AAthenaCharacter::Interact(class AActor* InInteractable)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.Interact"));}

	AAthenaCharacter_Interact_Params params;
	params.InInteractable = InInteractable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacter.HasValidWaterHeight
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AAthenaCharacter::HasValidWaterHeight()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.HasValidWaterHeight"));}

	AAthenaCharacter_HasValidWaterHeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.HandleCharacterMovementUpdated
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          DeltaSeconds                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 OldLocation                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 OldVelocity                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AAthenaCharacter::HandleCharacterMovementUpdated(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.HandleCharacterMovementUpdated"));}

	AAthenaCharacter_HandleCharacterMovementUpdated_Params params;
	params.DeltaSeconds = DeltaSeconds;
	params.OldLocation = OldLocation;
	params.OldVelocity = OldVelocity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacter.GetYawOnMovingBase
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float AAthenaCharacter::GetYawOnMovingBase()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.GetYawOnMovingBase"));}

	AAthenaCharacter_GetYawOnMovingBase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetWaterLevelRelativeToCharacterBasePosition
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float AAthenaCharacter::GetWaterLevelRelativeToCharacterBasePosition()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.GetWaterLevelRelativeToCharacterBasePosition"));}

	AAthenaCharacter_GetWaterLevelRelativeToCharacterBasePosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetWaterInformation
// ()
// Parameters:
// struct FWaterInformation       ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FWaterInformation AAthenaCharacter::GetWaterInformation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.GetWaterInformation"));}

	AAthenaCharacter_GetWaterInformation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetWaterHeight
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float AAthenaCharacter::GetWaterHeight()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.GetWaterHeight"));}

	AAthenaCharacter_GetWaterHeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetViewPitch
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float AAthenaCharacter::GetViewPitch()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.GetViewPitch"));}

	AAthenaCharacter_GetViewPitch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetValidWaterHeightAtomic
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          OutWaterHeight                 (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AAthenaCharacter::GetValidWaterHeightAtomic(float* OutWaterHeight)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.GetValidWaterHeightAtomic"));}

	AAthenaCharacter_GetValidWaterHeightAtomic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutWaterHeight != nullptr)
		*OutWaterHeight = params.OutWaterHeight;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetThirdPersonMeshComponent
// (FUNC_BlueprintCosmetic)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData)

class USkeletalMeshComponent* AAthenaCharacter::GetThirdPersonMeshComponent()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.GetThirdPersonMeshComponent"));}

	AAthenaCharacter_GetThirdPersonMeshComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetInputBinder
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UCharacterInputBinder*   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UCharacterInputBinder* AAthenaCharacter::GetInputBinder()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.GetInputBinder"));}

	AAthenaCharacter_GetInputBinder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetIgnoreReplicationRotationOnly
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AAthenaCharacter::GetIgnoreReplicationRotationOnly()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.GetIgnoreReplicationRotationOnly"));}

	AAthenaCharacter_GetIgnoreReplicationRotationOnly_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetFocusedInteractable
// (FUNC_BlueprintCosmetic)
// Parameters:
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* AAthenaCharacter::GetFocusedInteractable()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.GetFocusedInteractable"));}

	AAthenaCharacter_GetFocusedInteractable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetFloorSweepCollisionResponseContainer
// ()
// Parameters:
// struct FCollisionResponseContainer ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FCollisionResponseContainer AAthenaCharacter::GetFloorSweepCollisionResponseContainer()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.GetFloorSweepCollisionResponseContainer"));}

	AAthenaCharacter_GetFloorSweepCollisionResponseContainer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetFirstPersonMeshComponent
// (FUNC_BlueprintCosmetic)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData)

class USkeletalMeshComponent* AAthenaCharacter::GetFirstPersonMeshComponent()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.GetFirstPersonMeshComponent"));}

	AAthenaCharacter_GetFirstPersonMeshComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetCurrentShipAsActor
// (FUNC_BlueprintCosmetic)
// Parameters:
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* AAthenaCharacter::GetCurrentShipAsActor()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.GetCurrentShipAsActor"));}

	AAthenaCharacter_GetCurrentShipAsActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetCurrentShip
// (FUNC_BlueprintCosmetic)
// Parameters:
// class AShip*                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AShip* AAthenaCharacter::GetCurrentShip()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.GetCurrentShip"));}

	AAthenaCharacter_GetCurrentShip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetCharacterTransform
// ()
// Parameters:
// struct FTransform              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_IsPlainOldData)

struct FTransform AAthenaCharacter::GetCharacterTransform()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.GetCharacterTransform"));}

	AAthenaCharacter_GetCharacterTransform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GetCharacterRotation
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic)
// Parameters:
// struct FRotator                ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FRotator AAthenaCharacter::GetCharacterRotation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.GetCharacterRotation"));}

	AAthenaCharacter_GetCharacterRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.GenerateNewRandomAnimationSeed
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaCharacter::GenerateNewRandomAnimationSeed()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.GenerateNewRandomAnimationSeed"));}

	AAthenaCharacter_GenerateNewRandomAnimationSeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacter.ForceWaterHeight
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          WaterHeight                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  WaterId                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AAthenaCharacter::ForceWaterHeight(float WaterHeight, class UClass* WaterId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.ForceWaterHeight"));}

	AAthenaCharacter_ForceWaterHeight_Params params;
	params.WaterHeight = WaterHeight;
	params.WaterId = WaterId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacter.CureAllAilings
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaCharacter::CureAllAilings()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.CureAllAilings"));}

	AAthenaCharacter_CureAllAilings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacter.CreateProjectileTraceHitVolume
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaCharacter::CreateProjectileTraceHitVolume()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.CreateProjectileTraceHitVolume"));}

	AAthenaCharacter_CreateProjectileTraceHitVolume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacter.CanInteractWith
// (FUNC_Final, FUNC_Delegate)
// Parameters:
// class AActor*                  InInteractable                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  NotificationInputId            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AAthenaCharacter::CanInteractWith(class AActor* InInteractable, class UClass* NotificationInputId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.CanInteractWith"));}

	AAthenaCharacter_CanInteractWith_Params params;
	params.InInteractable = InInteractable;
	params.NotificationInputId = NotificationInputId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacter.CalculateWaterHeight
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaCharacter::CalculateWaterHeight()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.CalculateWaterHeight"));}

	AAthenaCharacter_CalculateWaterHeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacter.AllAnimationsLoaded
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AAthenaCharacter::AllAnimationsLoaded()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacter.AllAnimationsLoaded"));}

	AAthenaCharacter_AllAnimationsLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DamageInstigatorInterface.CanDamageActor
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  DamageRecipient                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UDamageInstigatorInterface::CanDamageActor(class AActor* DamageRecipient)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageInstigatorInterface.CanDamageActor"));}

	UDamageInstigatorInterface_CanDamageActor_Params params;
	params.DamageRecipient = DamageRecipient;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.NamedObjectInterface.GetObjectDisplayName
// (FUNC_BlueprintCosmetic)
// Parameters:
// struct FText                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FText UNamedObjectInterface::GetObjectDisplayName()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.NamedObjectInterface.GetObjectDisplayName"));}

	UNamedObjectInterface_GetObjectDisplayName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemInfo.GetItemType
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UClass*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UClass* AItemInfo::GetItemType()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemInfo.GetItemType"));}

	AItemInfo_GetItemType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemInfo.GetItemCategory
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UClass*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UClass* AItemInfo::GetItemCategory()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemInfo.GetItemCategory"));}

	AItemInfo_GetItemCategory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemInfo.GetItem
// (FUNC_BlueprintCosmetic)
// Parameters:
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* AItemInfo::GetItem()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemInfo.GetItem"));}

	AItemInfo_GetItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemInfo.GetAsWieldable
// (FUNC_BlueprintCosmetic)
// Parameters:
// class AWieldableItem*          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AWieldableItem* AItemInfo::GetAsWieldable()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemInfo.GetAsWieldable"));}

	AItemInfo_GetAsWieldable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemInfo.CreateWieldableItem
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_HasOutParms)
// Parameters:
// class AActor*                  InNewOwner                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FTransform              InTransform                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData)
// class AWieldableItem*          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AWieldableItem* AItemInfo::CreateWieldableItem(class AActor* InNewOwner, const struct FTransform& InTransform)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemInfo.CreateWieldableItem"));}

	AItemInfo_CreateWieldableItem_Params params;
	params.InNewOwner = InNewOwner;
	params.InTransform = InTransform;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemInfo.CreateProxyItem
// (FUNC_Net, FUNC_Protected, FUNC_Delegate, FUNC_NetServer)
// Parameters:
// struct FTransform              InTransform                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData)
// TEnumAsByte<EItemLifetimeManagement> LifetimeManagement             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AItemProxy*              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AItemProxy* AItemInfo::CreateProxyItem(const struct FTransform& InTransform, TEnumAsByte<EItemLifetimeManagement> LifetimeManagement)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemInfo.CreateProxyItem"));}

	AItemInfo_CreateProxyItem_Params params;
	params.InTransform = InTransform;
	params.LifetimeManagement = LifetimeManagement;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAICharacter.SetTargetActorToFace
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  InActor                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AAthenaAICharacter::SetTargetActorToFace(class AActor* InActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAICharacter.SetTargetActorToFace"));}

	AAthenaAICharacter_SetTargetActorToFace_Params params;
	params.InActor = InActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaAICharacter.SetRegion
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FName                   InRegion                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void AAthenaAICharacter::SetRegion(const struct FName& InRegion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAICharacter.SetRegion"));}

	AAthenaAICharacter_SetRegion_Params params;
	params.InRegion = InRegion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaAICharacter.SetOverrideShotHitChance
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           Enabled                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          HitChance                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AAthenaAICharacter::SetOverrideShotHitChance(bool Enabled, float HitChance)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAICharacter.SetOverrideShotHitChance"));}

	AAthenaAICharacter_SetOverrideShotHitChance_Params params;
	params.Enabled = Enabled;
	params.HitChance = HitChance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaAICharacter.SetOverrideCannonShotHitChance
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           Enabled                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          HitChance                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AAthenaAICharacter::SetOverrideCannonShotHitChance(bool Enabled, float HitChance)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAICharacter.SetOverrideCannonShotHitChance"));}

	AAthenaAICharacter_SetOverrideCannonShotHitChance_Params params;
	params.Enabled = Enabled;
	params.HitChance = HitChance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaAICharacter.SetLoadout
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TAssetPtr<class ULoadoutAsset> InLoadout                      (CPF_Parm)

void AAthenaAICharacter::SetLoadout(TAssetPtr<class ULoadoutAsset> InLoadout)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAICharacter.SetLoadout"));}

	AAthenaAICharacter_SetLoadout_Params params;
	params.InLoadout = InLoadout;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaAICharacter.SetAIStrategy
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  InStrategy                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AAthenaAICharacter::SetAIStrategy(class UClass* InStrategy)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAICharacter.SetAIStrategy"));}

	AAthenaAICharacter_SetAIStrategy_Params params;
	params.InStrategy = InStrategy;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaAICharacter.OnRep_CurrentAIStrategy
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  OldAIStrategy                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AAthenaAICharacter::OnRep_CurrentAIStrategy(class UClass* OldAIStrategy)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAICharacter.OnRep_CurrentAIStrategy"));}

	AAthenaAICharacter_OnRep_CurrentAIStrategy_Params params;
	params.OldAIStrategy = OldAIStrategy;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaAICharacter.GetRegion
// (FUNC_BlueprintCosmetic)
// Parameters:
// struct FName                   ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm, CPF_IsPlainOldData)

struct FName AAthenaAICharacter::GetRegion()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAICharacter.GetRegion"));}

	AAthenaAICharacter_GetRegion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaAICharacter.GetAIStrategy
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UClass*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UClass* AAthenaAICharacter::GetAIStrategy()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaAICharacter.GetAIStrategy"));}

	AAthenaAICharacter_GetAIStrategy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PlayerCharacterInterface.GetFirstPersonWwiseEmitterOwner
// (FUNC_BlueprintCosmetic)
// Parameters:
// class USceneComponent*         ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData)

class USceneComponent* UPlayerCharacterInterface::GetFirstPersonWwiseEmitterOwner()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerCharacterInterface.GetFirstPersonWwiseEmitterOwner"));}

	UPlayerCharacterInterface_GetFirstPersonWwiseEmitterOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PlayerCharacterInterface.ExecuteRumbleProfile
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FName                   RumbleTag                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UPlayerCharacterInterface::ExecuteRumbleProfile(const struct FName& RumbleTag)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerCharacterInterface.ExecuteRumbleProfile"));}

	UPlayerCharacterInterface_ExecuteRumbleProfile_Params params;
	params.RumbleTag = RumbleTag;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PlayerManagerServiceInterface.GetPlayerCharacterFromPlayerState
// (FUNC_Protected)
// Parameters:
// class AAthenaPlayerState*      PlayerState                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AAthenaPlayerCharacter*  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AAthenaPlayerCharacter* UPlayerManagerServiceInterface::GetPlayerCharacterFromPlayerState(class AAthenaPlayerState* PlayerState)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerManagerServiceInterface.GetPlayerCharacterFromPlayerState"));}

	UPlayerManagerServiceInterface_GetPlayerCharacterFromPlayerState_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PlayerManagerServiceInterface.GetNumPlayers
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UPlayerManagerServiceInterface::GetNumPlayers()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerManagerServiceInterface.GetNumPlayers"));}

	UPlayerManagerServiceInterface_GetNumPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PlayerManagerServiceInterface.GetNumActiveLocalPlayers
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UPlayerManagerServiceInterface::GetNumActiveLocalPlayers()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerManagerServiceInterface.GetNumActiveLocalPlayers"));}

	UPlayerManagerServiceInterface_GetNumActiveLocalPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PlayerManagerServiceInterface.GetFirstLocalPlayer
// (FUNC_BlueprintCosmetic)
// Parameters:
// class AAthenaPlayerCharacter*  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AAthenaPlayerCharacter* UPlayerManagerServiceInterface::GetFirstLocalPlayer()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerManagerServiceInterface.GetFirstLocalPlayer"));}

	UPlayerManagerServiceInterface_GetFirstLocalPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PlayerManagerServiceInterface.GetAllPlayerControllersWeakActorHandle
// ()
// Parameters:
// TArray<struct FWeakActorHandle> ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm)

TArray<struct FWeakActorHandle> UPlayerManagerServiceInterface::GetAllPlayerControllersWeakActorHandle()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerManagerServiceInterface.GetAllPlayerControllersWeakActorHandle"));}

	UPlayerManagerServiceInterface_GetAllPlayerControllersWeakActorHandle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PlayerManagerServiceInterface.GetAllActivePlayers
// ()
// Parameters:
// TArray<class AAthenaPlayerCharacter*> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class AAthenaPlayerCharacter*> UPlayerManagerServiceInterface::GetAllActivePlayers()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerManagerServiceInterface.GetAllActivePlayers"));}

	UPlayerManagerServiceInterface_GetAllActivePlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PlayerManagerServiceInterface.GetActiveLocalPlayers
// ()
// Parameters:
// TArray<class AAthenaPlayerCharacter*> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class AAthenaPlayerCharacter*> UPlayerManagerServiceInterface::GetActiveLocalPlayers()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerManagerServiceInterface.GetActiveLocalPlayers"));}

	UPlayerManagerServiceInterface_GetActiveLocalPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableInterface.GetItemInfo
// (FUNC_BlueprintCosmetic)
// Parameters:
// class AItemInfo*               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AItemInfo* UWieldableInterface::GetItemInfo()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableInterface.GetItemInfo"));}

	UWieldableInterface_GetItemInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableInterface.GetAnimationKey
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UClass*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UClass* UWieldableInterface::GetAnimationKey()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableInterface.GetAnimationKey"));}

	UWieldableInterface_GetAnimationKey_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableInterface.GetActor
// (FUNC_BlueprintCosmetic)
// Parameters:
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* UWieldableInterface::GetActor()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableInterface.GetActor"));}

	UWieldableInterface_GetActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemLoadoutViewInterface.HasCapacity
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  InItemCategory                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UItemLoadoutViewInterface::HasCapacity(class UClass* InItemCategory)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemLoadoutViewInterface.HasCapacity"));}

	UItemLoadoutViewInterface_HasCapacity_Params params;
	params.InItemCategory = InItemCategory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemLoadoutViewInterface.GetWeaponsLoadout
// ()
// Parameters:
// TArray<struct FWeaponSlot>     ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm)

TArray<struct FWeaponSlot> UItemLoadoutViewInterface::GetWeaponsLoadout()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemLoadoutViewInterface.GetWeaponsLoadout"));}

	UItemLoadoutViewInterface_GetWeaponsLoadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemLoadoutViewInterface.GetNumItems
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  InItemCategory                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UItemLoadoutViewInterface::GetNumItems(class UClass* InItemCategory)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemLoadoutViewInterface.GetNumItems"));}

	UItemLoadoutViewInterface_GetNumItems_Params params;
	params.InItemCategory = InItemCategory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemLoadoutViewInterface.GetNumCategories
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UItemLoadoutViewInterface::GetNumCategories()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemLoadoutViewInterface.GetNumCategories"));}

	UItemLoadoutViewInterface_GetNumCategories_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemLoadoutViewInterface.GetItems
// (FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  InItemCategory                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<class AItemInfo*>       ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class AItemInfo*> UItemLoadoutViewInterface::GetItems(class UClass* InItemCategory)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemLoadoutViewInterface.GetItems"));}

	UItemLoadoutViewInterface_GetItems_Params params;
	params.InItemCategory = InItemCategory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemLoadoutViewInterface.GetItemLoadout
// ()
// Parameters:
// struct FItemLoadout            ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm)

struct FItemLoadout UItemLoadoutViewInterface::GetItemLoadout()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemLoadoutViewInterface.GetItemLoadout"));}

	UItemLoadoutViewInterface_GetItemLoadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemLoadoutViewInterface.GetItemByIndex
// (FUNC_BlueprintCosmetic, FUNC_Delegate)
// Parameters:
// class UClass*                  InItemCategory                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Index                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AItemInfo*               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AItemInfo* UItemLoadoutViewInterface::GetItemByIndex(class UClass* InItemCategory, int Index)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemLoadoutViewInterface.GetItemByIndex"));}

	UItemLoadoutViewInterface_GetItemByIndex_Params params;
	params.InItemCategory = InItemCategory;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemLoadoutViewInterface.GetItem
// (FUNC_Protected)
// Parameters:
// class UClass*                  InItemCategory                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AItemInfo*               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AItemInfo* UItemLoadoutViewInterface::GetItem(class UClass* InItemCategory)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemLoadoutViewInterface.GetItem"));}

	UItemLoadoutViewInterface_GetItem_Params params;
	params.InItemCategory = InItemCategory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemLoadoutViewInterface.GetCategories
// ()
// Parameters:
// TArray<class UClass*>          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class UClass*> UItemLoadoutViewInterface::GetCategories()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemLoadoutViewInterface.GetCategories"));}

	UItemLoadoutViewInterface_GetCategories_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemLoadoutViewInterface.GetCapacity
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  InItemCategory                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UItemLoadoutViewInterface::GetCapacity(class UClass* InItemCategory)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemLoadoutViewInterface.GetCapacity"));}

	UItemLoadoutViewInterface_GetCapacity_Params params;
	params.InItemCategory = InItemCategory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemLoadoutViewInterface.GetAllItems
// ()
// Parameters:
// TArray<class AItemInfo*>       ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class AItemInfo*> UItemLoadoutViewInterface::GetAllItems()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemLoadoutViewInterface.GetAllItems"));}

	UItemLoadoutViewInterface_GetAllItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialInventoryInterface.ResetRadialInventory
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void URadialInventoryInterface::ResetRadialInventory()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryInterface.ResetRadialInventory"));}

	URadialInventoryInterface_ResetRadialInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RadialInventoryInterface.OnRadialInventoryInput
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVector2D               InputVector                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void URadialInventoryInterface::OnRadialInventoryInput(const struct FVector2D& InputVector)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryInterface.OnRadialInventoryInput"));}

	URadialInventoryInterface_OnRadialInventoryInput_Params params;
	params.InputVector = InputVector;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RadialInventoryInterface.IsFullyOpened
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool URadialInventoryInterface::IsFullyOpened()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryInterface.IsFullyOpened"));}

	URadialInventoryInterface_IsFullyOpened_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialInventoryInterface.GetNumSlots
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int URadialInventoryInterface::GetNumSlots()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryInterface.GetNumSlots"));}

	URadialInventoryInterface_GetNumSlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialInventoryInterface.GetMaxNumOfPages
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int URadialInventoryInterface::GetMaxNumOfPages()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryInterface.GetMaxNumOfPages"));}

	URadialInventoryInterface_GetMaxNumOfPages_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialInventoryInterface.GetLastSelectedItem
// (FUNC_BlueprintCosmetic)
// Parameters:
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* URadialInventoryInterface::GetLastSelectedItem()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryInterface.GetLastSelectedItem"));}

	URadialInventoryInterface_GetLastSelectedItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialInventoryInterface.DeactivateRadialInventory
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void URadialInventoryInterface::DeactivateRadialInventory()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryInterface.DeactivateRadialInventory"));}

	URadialInventoryInterface_DeactivateRadialInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RadialInventoryInterface.ConfirmRadialFullyOpened
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void URadialInventoryInterface::ConfirmRadialFullyOpened()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryInterface.ConfirmRadialFullyOpened"));}

	URadialInventoryInterface_ConfirmRadialFullyOpened_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RadialInventoryInterface.ActivateRadialInventory
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<ERadialMenuInputModality> InputModality                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void URadialInventoryInterface::ActivateRadialInventory(TEnumAsByte<ERadialMenuInputModality> InputModality)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryInterface.ActivateRadialInventory"));}

	URadialInventoryInterface_ActivateRadialInventory_Params params;
	params.InputModality = InputModality;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldableItemSetInterface.RemoveItem
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UWieldableItemSetInterface::RemoveItem(class AActor* Item)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetInterface.RemoveItem"));}

	UWieldableItemSetInterface_RemoveItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.GetSlotForItem
// (FUNC_Protected)
// Parameters:
// int                            Index                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UClass* UWieldableItemSetInterface::GetSlotForItem(int Index)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetInterface.GetSlotForItem"));}

	UWieldableItemSetInterface_GetSlotForItem_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.GetNumItemsOfType
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  Type                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UWieldableItemSetInterface::GetNumItemsOfType(class UClass* Type)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetInterface.GetNumItemsOfType"));}

	UWieldableItemSetInterface_GetNumItemsOfType_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.GetNumItems
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UWieldableItemSetInterface::GetNumItems()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetInterface.GetNumItems"));}

	UWieldableItemSetInterface_GetNumItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.GetItemsOfCategory
// (FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  ItemCategory                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<class AActor*>          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class AActor*> UWieldableItemSetInterface::GetItemsOfCategory(class UClass* ItemCategory)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetInterface.GetItemsOfCategory"));}

	UWieldableItemSetInterface_GetItemsOfCategory_Params params;
	params.ItemCategory = ItemCategory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.GetItemIndexInCategorySet
// (FUNC_BlueprintAuthorityOnly, FUNC_Delegate)
// Parameters:
// class AActor*                  Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  ItemCategory                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UWieldableItemSetInterface::GetItemIndexInCategorySet(class AActor* Item, class UClass* ItemCategory)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetInterface.GetItemIndexInCategorySet"));}

	UWieldableItemSetInterface_GetItemIndexInCategorySet_Params params;
	params.Item = Item;
	params.ItemCategory = ItemCategory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.GetItemIndex
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UWieldableItemSetInterface::GetItemIndex(class AActor* Item)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetInterface.GetItemIndex"));}

	UWieldableItemSetInterface_GetItemIndex_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.GetItemFromSlot
// (FUNC_Protected)
// Parameters:
// class UClass*                  ItemCategory                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* UWieldableItemSetInterface::GetItemFromSlot(class UClass* ItemCategory)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetInterface.GetItemFromSlot"));}

	UWieldableItemSetInterface_GetItemFromSlot_Params params;
	params.ItemCategory = ItemCategory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.GetItem
// (FUNC_Protected)
// Parameters:
// int                            Index                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* UWieldableItemSetInterface::GetItem(int Index)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetInterface.GetItem"));}

	UWieldableItemSetInterface_GetItem_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.ContainsItemOfType
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  ItemType                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UWieldableItemSetInterface::ContainsItemOfType(class UClass* ItemType)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetInterface.ContainsItemOfType"));}

	UWieldableItemSetInterface_ContainsItemOfType_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.Contains
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UWieldableItemSetInterface::Contains(class AActor* Item)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetInterface.Contains"));}

	UWieldableItemSetInterface_Contains_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.AddItemToSlot
// (FUNC_Final, FUNC_Delegate)
// Parameters:
// class AActor*                  Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  ItemCategory                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UWieldableItemSetInterface::AddItemToSlot(class AActor* Item, class UClass* ItemCategory)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetInterface.AddItemToSlot"));}

	UWieldableItemSetInterface_AddItemToSlot_Params params;
	params.Item = Item;
	params.ItemCategory = ItemCategory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetInterface.AddItem
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UWieldableItemSetInterface::AddItem(class AActor* Item)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetInterface.AddItem"));}

	UWieldableItemSetInterface_AddItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialInventoryComponent.SetDefaultRemappingPolicy
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void URadialInventoryComponent::SetDefaultRemappingPolicy()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryComponent.SetDefaultRemappingPolicy"));}

	URadialInventoryComponent_SetDefaultRemappingPolicy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RadialInventoryComponent.ResetRadialInventory
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void URadialInventoryComponent::ResetRadialInventory()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryComponent.ResetRadialInventory"));}

	URadialInventoryComponent_ResetRadialInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RadialInventoryComponent.OnRadialInventoryInput
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVector2D               InputVector                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void URadialInventoryComponent::OnRadialInventoryInput(const struct FVector2D& InputVector)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryComponent.OnRadialInventoryInput"));}

	URadialInventoryComponent_OnRadialInventoryInput_Params params;
	params.InputVector = InputVector;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RadialInventoryComponent.IsHUDScriptingReady
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool URadialInventoryComponent::IsHUDScriptingReady()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryComponent.IsHUDScriptingReady"));}

	URadialInventoryComponent_IsHUDScriptingReady_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialInventoryComponent.IsFullyOpened
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool URadialInventoryComponent::IsFullyOpened()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryComponent.IsFullyOpened"));}

	URadialInventoryComponent_IsFullyOpened_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialInventoryComponent.GetSelectedRadialInventorySlot
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int URadialInventoryComponent::GetSelectedRadialInventorySlot()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryComponent.GetSelectedRadialInventorySlot"));}

	URadialInventoryComponent_GetSelectedRadialInventorySlot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialInventoryComponent.GetNumSlots
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int URadialInventoryComponent::GetNumSlots()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryComponent.GetNumSlots"));}

	URadialInventoryComponent_GetNumSlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialInventoryComponent.GetMaxNumOfPages
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int URadialInventoryComponent::GetMaxNumOfPages()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryComponent.GetMaxNumOfPages"));}

	URadialInventoryComponent_GetMaxNumOfPages_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialInventoryComponent.GetLastSelectedItem
// (FUNC_BlueprintCosmetic)
// Parameters:
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* URadialInventoryComponent::GetLastSelectedItem()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryComponent.GetLastSelectedItem"));}

	URadialInventoryComponent_GetLastSelectedItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialInventoryComponent.GetInputModality
// (FUNC_Final)
// Parameters:
// TEnumAsByte<ERadialMenuInputModality> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<ERadialMenuInputModality> URadialInventoryComponent::GetInputModality()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryComponent.GetInputModality"));}

	URadialInventoryComponent_GetInputModality_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialInventoryComponent.DeactivateRadialInventory
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void URadialInventoryComponent::DeactivateRadialInventory()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryComponent.DeactivateRadialInventory"));}

	URadialInventoryComponent_DeactivateRadialInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RadialInventoryComponent.ConfirmRadialFullyOpened
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void URadialInventoryComponent::ConfirmRadialFullyOpened()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryComponent.ConfirmRadialFullyOpened"));}

	URadialInventoryComponent_ConfirmRadialFullyOpened_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RadialInventoryComponent.ActivateRadialInventory
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<ERadialMenuInputModality> InputModality                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void URadialInventoryComponent::ActivateRadialInventory(TEnumAsByte<ERadialMenuInputModality> InputModality)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryComponent.ActivateRadialInventory"));}

	URadialInventoryComponent_ActivateRadialInventory_Params params;
	params.InputModality = InputModality;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PhrasesRadialComponent.GetNumSlots
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UPhrasesRadialComponent::GetNumSlots()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PhrasesRadialComponent.GetNumSlots"));}

	UPhrasesRadialComponent_GetNumSlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PhrasesRadialComponent.GetLastSelectedItem
// (FUNC_BlueprintCosmetic)
// Parameters:
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* UPhrasesRadialComponent::GetLastSelectedItem()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PhrasesRadialComponent.GetLastSelectedItem"));}

	UPhrasesRadialComponent_GetLastSelectedItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PhrasesRadialComponent.DeactivateRadialInventory
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UPhrasesRadialComponent::DeactivateRadialInventory()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PhrasesRadialComponent.DeactivateRadialInventory"));}

	UPhrasesRadialComponent_DeactivateRadialInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RadialPhrasesAdjusterInterface.GetRadialPhrases
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UPhrasesRadialDataAsset* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UPhrasesRadialDataAsset* URadialPhrasesAdjusterInterface::GetRadialPhrases()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialPhrasesAdjusterInterface.GetRadialPhrases"));}

	URadialPhrasesAdjusterInterface_GetRadialPhrases_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItem.SetItemWwiseSwitch
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FName                   SwitchGroup                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// struct FName                   SwitchOption                   (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void AWieldableItem::SetItemWwiseSwitch(const struct FName& SwitchGroup, const struct FName& SwitchOption)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItem.SetItemWwiseSwitch"));}

	AWieldableItem_SetItemWwiseSwitch_Params params;
	params.SwitchGroup = SwitchGroup;
	params.SwitchOption = SwitchOption;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldableItem.SetItemWwiseRTPC
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FName                   RTPCName                       (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Value                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AWieldableItem::SetItemWwiseRTPC(float Value, struct FName* RTPCName)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItem.SetItemWwiseRTPC"));}

	AWieldableItem_SetItemWwiseRTPC_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (RTPCName != nullptr)
		*RTPCName = params.RTPCName;
}


// Function Athena.WieldableItem.PostItemWwiseEvent
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UWwiseEvent*             Event                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AWieldableItem::PostItemWwiseEvent(class UWwiseEvent* Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItem.PostItemWwiseEvent"));}

	AWieldableItem_PostItemWwiseEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldableItem.OnWielderHasLandedFromJumpBPImpl
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AWieldableItem::OnWielderHasLandedFromJumpBPImpl()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItem.OnWielderHasLandedFromJumpBPImpl"));}

	AWieldableItem_OnWielderHasLandedFromJumpBPImpl_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldableItem.IsUnderwater
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AWieldableItem::IsUnderwater()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItem.IsUnderwater"));}

	AWieldableItem_IsUnderwater_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItem.GetWielderCharacter
// (FUNC_BlueprintCosmetic)
// Parameters:
// class AAthenaCharacter*        ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AAthenaCharacter* AWieldableItem::GetWielderCharacter()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItem.GetWielderCharacter"));}

	AWieldableItem_GetWielderCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItem.GetWielder
// (FUNC_BlueprintCosmetic)
// Parameters:
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* AWieldableItem::GetWielder()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItem.GetWielder"));}

	AWieldableItem_GetWielder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItem.GetWieldableItemSize
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EWieldableItemSize> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EWieldableItemSize> AWieldableItem::GetWieldableItemSize()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItem.GetWieldableItemSize"));}

	AWieldableItem_GetWieldableItemSize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItem.GetLastKnownWielder
// (FUNC_BlueprintCosmetic)
// Parameters:
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* AWieldableItem::GetLastKnownWielder()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItem.GetLastKnownWielder"));}

	AWieldableItem_GetLastKnownWielder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItem.GetItemSfxEmitter
// (FUNC_BlueprintCosmetic)
// Parameters:
// struct FWwiseEmitter           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FWwiseEmitter AWieldableItem::GetItemSfxEmitter()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItem.GetItemSfxEmitter"));}

	AWieldableItem_GetItemSfxEmitter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItem.GetIsFirstPerson
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AWieldableItem::GetIsFirstPerson()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItem.GetIsFirstPerson"));}

	AWieldableItem_GetIsFirstPerson_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialCompositeInputHandler.OnRadialY
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> URadialCompositeInputHandler::OnRadialY(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialCompositeInputHandler.OnRadialY"));}

	URadialCompositeInputHandler_OnRadialY_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialCompositeInputHandler.OnRadialX
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> URadialCompositeInputHandler::OnRadialX(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialCompositeInputHandler.OnRadialX"));}

	URadialCompositeInputHandler_OnRadialX_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialCompositeInputHandler.HandleAxisChange
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void URadialCompositeInputHandler::HandleAxisChange(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialCompositeInputHandler.HandleAxisChange"));}

	URadialCompositeInputHandler_HandleAxisChange_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RadialCompositeInputHandler.HandleAnalogInputsIfBlocking
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> URadialCompositeInputHandler::HandleAnalogInputsIfBlocking(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialCompositeInputHandler.HandleAnalogInputsIfBlocking"));}

	URadialCompositeInputHandler_HandleAnalogInputsIfBlocking_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CloudDomeServiceInterface.UnregisterCloudDomeFromService
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TScriptInterface<class UCloudDomeInterface> CloudDome                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCloudDomeServiceInterface::UnregisterCloudDomeFromService(const TScriptInterface<class UCloudDomeInterface>& CloudDome)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CloudDomeServiceInterface.UnregisterCloudDomeFromService"));}

	UCloudDomeServiceInterface_UnregisterCloudDomeFromService_Params params;
	params.CloudDome = CloudDome;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CloudDomeServiceInterface.RegisterCloudDomeWithService
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TScriptInterface<class UCloudDomeInterface> CloudDome                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCloudDomeServiceInterface::RegisterCloudDomeWithService(const TScriptInterface<class UCloudDomeInterface>& CloudDome)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CloudDomeServiceInterface.RegisterCloudDomeWithService"));}

	UCloudDomeServiceInterface_RegisterCloudDomeWithService_Params params;
	params.CloudDome = CloudDome;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CloudDomeServiceInterface.GetNumberOfCloudDomes
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UCloudDomeServiceInterface::GetNumberOfCloudDomes()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CloudDomeServiceInterface.GetNumberOfCloudDomes"));}

	UCloudDomeServiceInterface_GetNumberOfCloudDomes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CloudDomeServiceInterface.GetCloudDome
// (FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// int                            CloudDomeIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TScriptInterface<class UCloudDomeInterface> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TScriptInterface<class UCloudDomeInterface> UCloudDomeServiceInterface::GetCloudDome(int CloudDomeIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CloudDomeServiceInterface.GetCloudDome"));}

	UCloudDomeServiceInterface_GetCloudDome_Params params;
	params.CloudDomeIndex = CloudDomeIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CloudDomeServiceInterface.GetActualCloudDome
// (FUNC_Protected)
// Parameters:
// int                            CloudDomeIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class ACloudDome*              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class ACloudDome* UCloudDomeServiceInterface::GetActualCloudDome(int CloudDomeIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CloudDomeServiceInterface.GetActualCloudDome"));}

	UCloudDomeServiceInterface_GetActualCloudDome_Params params;
	params.CloudDomeIndex = CloudDomeIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.WalkActivate
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaPlayerCharacter::WalkActivate()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacter.WalkActivate"));}

	AAthenaPlayerCharacter_WalkActivate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaPlayerCharacter.UseItem
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  NotificationInputId            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AAthenaPlayerCharacter::UseItem(class UClass* NotificationInputId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacter.UseItem"));}

	AAthenaPlayerCharacter_UseItem_Params params;
	params.NotificationInputId = NotificationInputId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.SprintActivate
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaPlayerCharacter::SprintActivate()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacter.SprintActivate"));}

	AAthenaPlayerCharacter_SprintActivate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaPlayerCharacter.OnWieldedItem
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaPlayerCharacter::OnWieldedItem()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacter.OnWieldedItem"));}

	AAthenaPlayerCharacter_OnWieldedItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaPlayerCharacter.OnRep_ReplicatedIsSprinting
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaPlayerCharacter::OnRep_ReplicatedIsSprinting()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacter.OnRep_ReplicatedIsSprinting"));}

	AAthenaPlayerCharacter_OnRep_ReplicatedIsSprinting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaPlayerCharacter.OnRep_OverridePirateDescSeed
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaPlayerCharacter::OnRep_OverridePirateDescSeed()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacter.OnRep_OverridePirateDescSeed"));}

	AAthenaPlayerCharacter_OnRep_OverridePirateDescSeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaPlayerCharacter.OnMeshSet
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaPlayerCharacter::OnMeshSet()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacter.OnMeshSet"));}

	AAthenaPlayerCharacter_OnMeshSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaPlayerCharacter.Multicast_OnKrakenTentacleDeath
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            RemainingTentacles             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AAthenaPlayerCharacter::Multicast_OnKrakenTentacleDeath(int RemainingTentacles)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacter.Multicast_OnKrakenTentacleDeath"));}

	AAthenaPlayerCharacter_Multicast_OnKrakenTentacleDeath_Params params;
	params.RemainingTentacles = RemainingTentacles;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaPlayerCharacter.IsSprintEnabled
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AAthenaPlayerCharacter::IsSprintEnabled()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacter.IsSprintEnabled"));}

	AAthenaPlayerCharacter_IsSprintEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.IsInteractionValid
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  InInteractable                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AAthenaPlayerCharacter::IsInteractionValid(class AActor* InInteractable)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacter.IsInteractionValid"));}

	AAthenaPlayerCharacter_IsInteractionValid_Params params;
	params.InInteractable = InInteractable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.HasMeshSet
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AAthenaPlayerCharacter::HasMeshSet()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacter.HasMeshSet"));}

	AAthenaPlayerCharacter_HasMeshSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.HasFinishedSpawning
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AAthenaPlayerCharacter::HasFinishedSpawning()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacter.HasFinishedSpawning"));}

	AAthenaPlayerCharacter_HasFinishedSpawning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.GetPawnViewLocation
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector AAthenaPlayerCharacter::GetPawnViewLocation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacter.GetPawnViewLocation"));}

	AAthenaPlayerCharacter_GetPawnViewLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.GetLocalPlayerWorldRegionName
// (FUNC_BlueprintCosmetic)
// Parameters:
// struct FName                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FName AAthenaPlayerCharacter::GetLocalPlayerWorldRegionName()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacter.GetLocalPlayerWorldRegionName"));}

	AAthenaPlayerCharacter_GetLocalPlayerWorldRegionName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.GetIsSprinting
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AAthenaPlayerCharacter::GetIsSprinting()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacter.GetIsSprinting"));}

	AAthenaPlayerCharacter_GetIsSprinting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.GetIsDigitallyWalking
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AAthenaPlayerCharacter::GetIsDigitallyWalking()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacter.GetIsDigitallyWalking"));}

	AAthenaPlayerCharacter_GetIsDigitallyWalking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.GetFocusedInteractable
// (FUNC_BlueprintCosmetic)
// Parameters:
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* AAthenaPlayerCharacter::GetFocusedInteractable()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacter.GetFocusedInteractable"));}

	AAthenaPlayerCharacter_GetFocusedInteractable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.GetFirstPersonMeshOffset
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector AAthenaPlayerCharacter::GetFirstPersonMeshOffset()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacter.GetFirstPersonMeshOffset"));}

	AAthenaPlayerCharacter_GetFirstPersonMeshOffset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.GetCurrentShipRegion
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EShipRegion>       ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EShipRegion> AAthenaPlayerCharacter::GetCurrentShipRegion()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacter.GetCurrentShipRegion"));}

	AAthenaPlayerCharacter_GetCurrentShipRegion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacter.ClientAddPlayerAsFriend
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaPlayerCharacter*  PlayerToAddAsFriend            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AAthenaPlayerCharacter::ClientAddPlayerAsFriend(class AAthenaPlayerCharacter* PlayerToAddAsFriend)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacter.ClientAddPlayerAsFriend"));}

	AAthenaPlayerCharacter_ClientAddPlayerAsFriend_Params params;
	params.PlayerToAddAsFriend = PlayerToAddAsFriend;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaPlayerCharacter.AllAnimationsLoaded
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AAthenaPlayerCharacter::AllAnimationsLoaded()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacter.AllAnimationsLoaded"));}

	AAthenaPlayerCharacter_AllAnimationsLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VoyageParticipantComponent.OnRep_View
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UVoyageParticipantComponent::OnRep_View()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VoyageParticipantComponent.OnRep_View"));}

	UVoyageParticipantComponent_OnRep_View_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacterDockingFunctions.StartDockingCharacterWithActor
// (FUNC_BlueprintAuthorityOnly, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FDocker                 Docker                         (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// class AAthenaCharacter*        Owner                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Target                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          DockDuration                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCharacterDockingFunctions::StartDockingCharacterWithActor(class AAthenaCharacter* Owner, class AActor* Target, float DockDuration, struct FDocker* Docker)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterDockingFunctions.StartDockingCharacterWithActor"));}

	UAthenaCharacterDockingFunctions_StartDockingCharacterWithActor_Params params;
	params.Owner = Owner;
	params.Target = Target;
	params.DockDuration = DockDuration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Docker != nullptr)
		*Docker = params.Docker;
}


// Function Athena.AthenaCharacterDodgeComponent.Server_RequestDodge
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVector                 Direction                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UAthenaCharacterDodgeComponent::Server_RequestDodge(const struct FVector& Direction)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterDodgeComponent.Server_RequestDodge"));}

	UAthenaCharacterDodgeComponent_Server_RequestDodge_Params params;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacterDodgeComponent.Multicast_CharacterDodge
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVector                 Direction                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UAthenaCharacterDodgeComponent::Multicast_CharacterDodge(const struct FVector& Direction)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterDodgeComponent.Multicast_CharacterDodge"));}

	UAthenaCharacterDodgeComponent_Multicast_CharacterDodge_Params params;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacterFunctions.TeleportPlayerToLocation
// (FUNC_Final, FUNC_Delegate, FUNC_NetServer)
// Parameters:
// class AAthenaCharacter*        Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FTeleportLocation       Where                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaCharacterFunctions::TeleportPlayerToLocation(class AAthenaCharacter* Character, const struct FTeleportLocation& Where)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterFunctions.TeleportPlayerToLocation"));}

	UAthenaCharacterFunctions_TeleportPlayerToLocation_Params params;
	params.Character = Character;
	params.Where = Where;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacterFunctions.GetTeleportLocationForPlayer
// (FUNC_Protected)
// Parameters:
// class AAthenaCharacter*        Player                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FTeleportLocation       ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FTeleportLocation UAthenaCharacterFunctions::GetTeleportLocationForPlayer(class AAthenaCharacter* Player)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterFunctions.GetTeleportLocationForPlayer"));}

	UAthenaCharacterFunctions_GetTeleportLocationForPlayer_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacterFunctions.AllAnimationsLoadedForCharacter
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AAthenaCharacter*        Character                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaCharacterFunctions::AllAnimationsLoadedForCharacter(class AAthenaCharacter* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterFunctions.AllAnimationsLoadedForCharacter"));}

	UAthenaCharacterFunctions_AllAnimationsLoadedForCharacter_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacterKnockbackComponent.SetDisabled
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           IsDisabled                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCharacterKnockbackComponent::SetDisabled(bool IsDisabled)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterKnockbackComponent.SetDisabled"));}

	UAthenaCharacterKnockbackComponent_SetDisabled_Params params;
	params.IsDisabled = IsDisabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacterKnockbackComponent.KnockBack
// (FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FKnockBackInfo          KnockBackInfo                  (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// struct FVector                 Direction                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// float                          NoWaterDragDuration            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  DamagerType                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCharacterKnockbackComponent::KnockBack(const struct FKnockBackInfo& KnockBackInfo, const struct FVector& Direction, float NoWaterDragDuration, class UClass* DamagerType)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterKnockbackComponent.KnockBack"));}

	UAthenaCharacterKnockbackComponent_KnockBack_Params params;
	params.KnockBackInfo = KnockBackInfo;
	params.Direction = Direction;
	params.NoWaterDragDuration = NoWaterDragDuration;
	params.DamagerType = DamagerType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacterKnockbackComponent.Client_PlayerKnockBackRPC
// (FUNC_BlueprintAuthorityOnly, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FKnockBackInfo          KnockBackInfo                  (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm)
// struct FVector                 Direction                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// float                          NoWaterDragDuration            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCharacterKnockbackComponent::Client_PlayerKnockBackRPC(const struct FKnockBackInfo& KnockBackInfo, const struct FVector& Direction, float NoWaterDragDuration)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterKnockbackComponent.Client_PlayerKnockBackRPC"));}

	UAthenaCharacterKnockbackComponent_Client_PlayerKnockBackRPC_Params params;
	params.KnockBackInfo = KnockBackInfo;
	params.Direction = Direction;
	params.NoWaterDragDuration = NoWaterDragDuration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LocalDisturbanceFunctionLibrary.SetWindowSize
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector2D               WindowSize                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ULocalDisturbanceFunctionLibrary::SetWindowSize(class UObject* WorldContextObject, const struct FVector2D& WindowSize)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocalDisturbanceFunctionLibrary.SetWindowSize"));}

	ULocalDisturbanceFunctionLibrary_SetWindowSize_Params params;
	params.WorldContextObject = WorldContextObject;
	params.WindowSize = WindowSize;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LocalDisturbanceFunctionLibrary.SetBlendValues
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector4                BlendValues                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ULocalDisturbanceFunctionLibrary::SetBlendValues(class UObject* WorldContextObject, const struct FVector4& BlendValues)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocalDisturbanceFunctionLibrary.SetBlendValues"));}

	ULocalDisturbanceFunctionLibrary_SetBlendValues_Params params;
	params.WorldContextObject = WorldContextObject;
	params.BlendValues = BlendValues;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LocalDisturbanceFunctionLibrary.AddDisturbance
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 Position                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 Velocity                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Size                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          GrassCutScale                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ULocalDisturbanceFunctionLibrary::AddDisturbance(class UObject* WorldContextObject, const struct FVector& Position, const struct FVector& Velocity, float Size, float GrassCutScale)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocalDisturbanceFunctionLibrary.AddDisturbance"));}

	ULocalDisturbanceFunctionLibrary_AddDisturbance_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Position = Position;
	params.Velocity = Velocity;
	params.Size = Size;
	params.GrassCutScale = GrassCutScale;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacterMovementComponent.SetMovementMode
// (FUNC_RequiredAPI, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EMovementMode>     NewMovementMode                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// unsigned char                  NewCustomMode                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCharacterMovementComponent::SetMovementMode(TEnumAsByte<EMovementMode> NewMovementMode, unsigned char NewCustomMode)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterMovementComponent.SetMovementMode"));}

	UAthenaCharacterMovementComponent_SetMovementMode_Params params;
	params.NewMovementMode = NewMovementMode;
	params.NewCustomMode = NewCustomMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacterMovementComponent.SetErrorOnResolvePenetration
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           ErrorOnResolve                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCharacterMovementComponent::SetErrorOnResolvePenetration(bool ErrorOnResolve)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterMovementComponent.SetErrorOnResolvePenetration"));}

	UAthenaCharacterMovementComponent_SetErrorOnResolvePenetration_Params params;
	params.ErrorOnResolve = ErrorOnResolve;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacterMovementComponent.HasValidAckedMoveClientOnly
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaCharacterMovementComponent::HasValidAckedMoveClientOnly()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterMovementComponent.HasValidAckedMoveClientOnly"));}

	UAthenaCharacterMovementComponent_HasValidAckedMoveClientOnly_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacterMovementComponent.GetTimestampOfMostRecentPredictedMoveClientOnly
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UAthenaCharacterMovementComponent::GetTimestampOfMostRecentPredictedMoveClientOnly()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterMovementComponent.GetTimestampOfMostRecentPredictedMoveClientOnly"));}

	UAthenaCharacterMovementComponent_GetTimestampOfMostRecentPredictedMoveClientOnly_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacterMovementComponent.GetTimestampOfLastAckedMoveClientOnly
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UAthenaCharacterMovementComponent::GetTimestampOfLastAckedMoveClientOnly()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterMovementComponent.GetTimestampOfLastAckedMoveClientOnly"));}

	UAthenaCharacterMovementComponent_GetTimestampOfLastAckedMoveClientOnly_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacterMovementComponent.GetTerminalVelocity
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UAthenaCharacterMovementComponent::GetTerminalVelocity()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterMovementComponent.GetTerminalVelocity"));}

	UAthenaCharacterMovementComponent_GetTerminalVelocity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacterMovementComponent.GetMovementMode
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EMovementMode>     ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EMovementMode> UAthenaCharacterMovementComponent::GetMovementMode()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterMovementComponent.GetMovementMode"));}

	UAthenaCharacterMovementComponent_GetMovementMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacterMovementComponent.GetMaxSprintSpeed
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UAthenaCharacterMovementComponent::GetMaxSprintSpeed()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterMovementComponent.GetMaxSprintSpeed"));}

	UAthenaCharacterMovementComponent_GetMaxSprintSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacterMovementComponent.GetMaxMoveSpeedScalar
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UAthenaCharacterMovementComponent::GetMaxMoveSpeedScalar()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterMovementComponent.GetMaxMoveSpeedScalar"));}

	UAthenaCharacterMovementComponent_GetMaxMoveSpeedScalar_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacterMovementComponent.FindCurrentFloor
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCharacterMovementComponent::FindCurrentFloor()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterMovementComponent.FindCurrentFloor"));}

	UAthenaCharacterMovementComponent_FindCurrentFloor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaPlayerCharacterMovementComponent.RestoreAudioStateAfterFallDamage
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaPlayerCharacterMovementComponent::RestoreAudioStateAfterFallDamage()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacterMovementComponent.RestoreAudioStateAfterFallDamage"));}

	UAthenaPlayerCharacterMovementComponent_RestoreAudioStateAfterFallDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacterTestFunctions.WaitUntilFullySpawned
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaCharacter*        Target                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FLatentActionInfo       LatentInfo                     (CPF_Parm)

void UAthenaCharacterTestFunctions::WaitUntilFullySpawned(class AAthenaCharacter* Target, const struct FLatentActionInfo& LatentInfo)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterTestFunctions.WaitUntilFullySpawned"));}

	UAthenaCharacterTestFunctions_WaitUntilFullySpawned_Params params;
	params.Target = Target;
	params.LatentInfo = LatentInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacterTestFunctions.WaitUntilDocked
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FLatentActionInfo       LatentInfo                     (CPF_Parm)
// class AAthenaCharacter*        AthenaCharacter                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCharacterTestFunctions::WaitUntilDocked(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class AAthenaCharacter* AthenaCharacter)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterTestFunctions.WaitUntilDocked"));}

	UAthenaCharacterTestFunctions_WaitUntilDocked_Params params;
	params.WorldContextObject = WorldContextObject;
	params.LatentInfo = LatentInfo;
	params.AthenaCharacter = AthenaCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacterTestFunctions.WaitForTeleport
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AAthenaCharacter*        AthenaCharacter                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FLatentActionInfo       LatentInfo                     (CPF_Parm)

void UAthenaCharacterTestFunctions::WaitForTeleport(class UObject* WorldContextObject, class AAthenaCharacter* AthenaCharacter, const struct FLatentActionInfo& LatentInfo)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterTestFunctions.WaitForTeleport"));}

	UAthenaCharacterTestFunctions_WaitForTeleport_Params params;
	params.WorldContextObject = WorldContextObject;
	params.AthenaCharacter = AthenaCharacter;
	params.LatentInfo = LatentInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacterTestFunctions.WaitForMovementMode
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FLatentActionInfo       LatentInfo                     (CPF_Parm)
// class AAthenaCharacter*        AthenaCharacter                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EMovementMode>     WantedMovementMode             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            NumFramesInMovementMode        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCharacterTestFunctions::WaitForMovementMode(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class AAthenaCharacter* AthenaCharacter, TEnumAsByte<EMovementMode> WantedMovementMode, int NumFramesInMovementMode)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterTestFunctions.WaitForMovementMode"));}

	UAthenaCharacterTestFunctions_WaitForMovementMode_Params params;
	params.WorldContextObject = WorldContextObject;
	params.LatentInfo = LatentInfo;
	params.AthenaCharacter = AthenaCharacter;
	params.WantedMovementMode = WantedMovementMode;
	params.NumFramesInMovementMode = NumFramesInMovementMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacterTestFunctions.WaitForCustomMovementMode
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FLatentActionInfo       LatentInfo                     (CPF_Parm)
// class AAthenaCharacter*        AthenaCharacter                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// unsigned char                  CustomMovementMode             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            NumFramesInMovementMode        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCharacterTestFunctions::WaitForCustomMovementMode(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class AAthenaCharacter* AthenaCharacter, unsigned char CustomMovementMode, int NumFramesInMovementMode)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterTestFunctions.WaitForCustomMovementMode"));}

	UAthenaCharacterTestFunctions_WaitForCustomMovementMode_Params params;
	params.WorldContextObject = WorldContextObject;
	params.LatentInfo = LatentInfo;
	params.AthenaCharacter = AthenaCharacter;
	params.CustomMovementMode = CustomMovementMode;
	params.NumFramesInMovementMode = NumFramesInMovementMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacterTestFunctions.TestAthenaCharacterHandleNotificationInput
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaCharacter*        AthenaCharacter                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  Id                             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCharacterTestFunctions::TestAthenaCharacterHandleNotificationInput(class AAthenaCharacter* AthenaCharacter, class UClass* Id)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterTestFunctions.TestAthenaCharacterHandleNotificationInput"));}

	UAthenaCharacterTestFunctions_TestAthenaCharacterHandleNotificationInput_Params params;
	params.AthenaCharacter = AthenaCharacter;
	params.Id = Id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacterTestFunctions.TestAthenaCharacterHandleAnalogInput
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaCharacter*        AthenaCharacter                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  Id                             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Value                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCharacterTestFunctions::TestAthenaCharacterHandleAnalogInput(class AAthenaCharacter* AthenaCharacter, class UClass* Id, float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterTestFunctions.TestAthenaCharacterHandleAnalogInput"));}

	UAthenaCharacterTestFunctions_TestAthenaCharacterHandleAnalogInput_Params params;
	params.AthenaCharacter = AthenaCharacter;
	params.Id = Id;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacterTestFunctions.TeleportToPosition
// (FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FLatentActionInfo       LatentInfo                     (CPF_Parm)
// class AAthenaCharacter*        AthenaCharacter                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class USceneComponent*         TeleportBase                   (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// struct FVector                 Position                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FRotator                Rotation                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            StreamOutLevel                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            StreamInLevel                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCharacterTestFunctions::TeleportToPosition(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class AAthenaCharacter* AthenaCharacter, class USceneComponent* TeleportBase, const struct FVector& Position, const struct FRotator& Rotation, int StreamOutLevel, int StreamInLevel)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterTestFunctions.TeleportToPosition"));}

	UAthenaCharacterTestFunctions_TeleportToPosition_Params params;
	params.WorldContextObject = WorldContextObject;
	params.LatentInfo = LatentInfo;
	params.AthenaCharacter = AthenaCharacter;
	params.TeleportBase = TeleportBase;
	params.Position = Position;
	params.Rotation = Rotation;
	params.StreamOutLevel = StreamOutLevel;
	params.StreamInLevel = StreamInLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacterTestFunctions.SimulateButtonPress
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class APlayerController*       PlayerController               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FKey                    Button                         (CPF_Parm)

void UAthenaCharacterTestFunctions::SimulateButtonPress(class APlayerController* PlayerController, const struct FKey& Button)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterTestFunctions.SimulateButtonPress"));}

	UAthenaCharacterTestFunctions_SimulateButtonPress_Params params;
	params.PlayerController = PlayerController;
	params.Button = Button;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacterTestFunctions.SetupInputBinder
// (FUNC_Protected)
// Parameters:
// class AAthenaCharacter*        Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UCharacterInputBinder*   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UCharacterInputBinder* UAthenaCharacterTestFunctions::SetupInputBinder(class AAthenaCharacter* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterTestFunctions.SetupInputBinder"));}

	UAthenaCharacterTestFunctions_SetupInputBinder_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacterTestFunctions.SetupCharacterForMPTesting
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AAthenaCharacter*        AthenaCharacter                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCharacterTestFunctions::SetupCharacterForMPTesting(class UObject* WorldContextObject, class AAthenaCharacter* AthenaCharacter)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterTestFunctions.SetupCharacterForMPTesting"));}

	UAthenaCharacterTestFunctions_SetupCharacterForMPTesting_Params params;
	params.WorldContextObject = WorldContextObject;
	params.AthenaCharacter = AthenaCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacterTestFunctions.SetupAthenaCharacterForInteractionTestByIndex
// (FUNC_BlueprintCosmetic, FUNC_Delegate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            PlayerIndex                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AAthenaCharacter*        ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AAthenaCharacter* UAthenaCharacterTestFunctions::SetupAthenaCharacterForInteractionTestByIndex(class UObject* WorldContextObject, int PlayerIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterTestFunctions.SetupAthenaCharacterForInteractionTestByIndex"));}

	UAthenaCharacterTestFunctions_SetupAthenaCharacterForInteractionTestByIndex_Params params;
	params.WorldContextObject = WorldContextObject;
	params.PlayerIndex = PlayerIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacterTestFunctions.SetupAthenaCharacterForInteractionTest
// (FUNC_BlueprintCosmetic, FUNC_Delegate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AAthenaCharacter*        AthenaCharacter                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AAthenaCharacter*        ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AAthenaCharacter* UAthenaCharacterTestFunctions::SetupAthenaCharacterForInteractionTest(class UObject* WorldContextObject, class AAthenaCharacter* AthenaCharacter)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterTestFunctions.SetupAthenaCharacterForInteractionTest"));}

	UAthenaCharacterTestFunctions_SetupAthenaCharacterForInteractionTest_Params params;
	params.WorldContextObject = WorldContextObject;
	params.AthenaCharacter = AthenaCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacterTestFunctions.SendCharacterMoveInput
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaCharacter*        Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector2D               Movement                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCharacterTestFunctions::SendCharacterMoveInput(class AAthenaCharacter* Character, const struct FVector2D& Movement)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterTestFunctions.SendCharacterMoveInput"));}

	UAthenaCharacterTestFunctions_SendCharacterMoveInput_Params params;
	params.Character = Character;
	params.Movement = Movement;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacterTestFunctions.HasAnyoneGotInputBindings
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UAthenaCharacterTestFunctions::HasAnyoneGotInputBindings(class UObject* WorldContextObject)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterTestFunctions.HasAnyoneGotInputBindings"));}

	UAthenaCharacterTestFunctions_HasAnyoneGotInputBindings_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacterTestFunctions.GetLocalAthenaCharacter
// (FUNC_BlueprintCosmetic, FUNC_Delegate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            PlayerIndex                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AAthenaPlayerCharacter*  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AAthenaPlayerCharacter* UAthenaCharacterTestFunctions::GetLocalAthenaCharacter(class UObject* WorldContextObject, int PlayerIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterTestFunctions.GetLocalAthenaCharacter"));}

	UAthenaCharacterTestFunctions_GetLocalAthenaCharacter_Params params;
	params.WorldContextObject = WorldContextObject;
	params.PlayerIndex = PlayerIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacterTestFunctions.GetClientPlayerCharacter
// (FUNC_BlueprintCosmetic, FUNC_Delegate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            ClientId                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            SplitScreenIndex               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AAthenaPlayerCharacter*  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AAthenaPlayerCharacter* UAthenaCharacterTestFunctions::GetClientPlayerCharacter(class UObject* WorldContextObject, int ClientId, int SplitScreenIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterTestFunctions.GetClientPlayerCharacter"));}

	UAthenaCharacterTestFunctions_GetClientPlayerCharacter_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ClientId = ClientId;
	params.SplitScreenIndex = SplitScreenIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacterTestFunctions.GetClientCharacter
// (FUNC_BlueprintCosmetic, FUNC_Delegate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            ClientId                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            SplitScreenIndex               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AAthenaCharacter*        ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AAthenaCharacter* UAthenaCharacterTestFunctions::GetClientCharacter(class UObject* WorldContextObject, int ClientId, int SplitScreenIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterTestFunctions.GetClientCharacter"));}

	UAthenaCharacterTestFunctions_GetClientCharacter_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ClientId = ClientId;
	params.SplitScreenIndex = SplitScreenIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacterTestFunctions.ForceInteract
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FLatentActionInfo       LatentInfo                     (CPF_Parm)
// class AAthenaCharacter*        AthenaCharacter                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Interactable                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           WaitUntilFullyDocked           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCharacterTestFunctions::ForceInteract(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class AAthenaCharacter* AthenaCharacter, class AActor* Interactable, bool WaitUntilFullyDocked)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterTestFunctions.ForceInteract"));}

	UAthenaCharacterTestFunctions_ForceInteract_Params params;
	params.WorldContextObject = WorldContextObject;
	params.LatentInfo = LatentInfo;
	params.AthenaCharacter = AthenaCharacter;
	params.Interactable = Interactable;
	params.WaitUntilFullyDocked = WaitUntilFullyDocked;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacterTestFunctions.CreateAndEquipItemDesc
// (FUNC_BlueprintCosmetic, FUNC_Delegate)
// Parameters:
// class AAthenaCharacter*        Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  ItemDesc                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AItemInfo*               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AItemInfo* UAthenaCharacterTestFunctions::CreateAndEquipItemDesc(class AAthenaCharacter* Character, class UClass* ItemDesc)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterTestFunctions.CreateAndEquipItemDesc"));}

	UAthenaCharacterTestFunctions_CreateAndEquipItemDesc_Params params;
	params.Character = Character;
	params.ItemDesc = ItemDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacterTestFunctions.CreateAndAddItemDescToInventory
// (FUNC_BlueprintCosmetic, FUNC_Delegate)
// Parameters:
// class AAthenaCharacter*        Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  ItemDesc                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AItemInfo*               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AItemInfo* UAthenaCharacterTestFunctions::CreateAndAddItemDescToInventory(class AAthenaCharacter* Character, class UClass* ItemDesc)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterTestFunctions.CreateAndAddItemDescToInventory"));}

	UAthenaCharacterTestFunctions_CreateAndAddItemDescToInventory_Params params;
	params.Character = Character;
	params.ItemDesc = ItemDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaCharacterTestFunctions.ClearInputBindings
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCharacterTestFunctions::ClearInputBindings(class UObject* WorldContextObject)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterTestFunctions.ClearInputBindings"));}

	UAthenaCharacterTestFunctions_ClearInputBindings_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCharacterTestFunctions.ClearCharacterInteractionPolicies
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCharacterTestFunctions::ClearCharacterInteractionPolicies(class UObject* WorldContextObject)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCharacterTestFunctions.ClearCharacterInteractionPolicies"));}

	UAthenaCharacterTestFunctions_ClearCharacterInteractionPolicies_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.WindTriggerChange
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            ChangeInstantly                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::WindTriggerChange(int ChangeInstantly)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.WindTriggerChange"));}

	UAthenaCheatManager_WindTriggerChange_Params params;
	params.ChangeInstantly = ChangeInstantly;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.WindSetVector
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          X                              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Y                              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::WindSetVector(float X, float Y)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.WindSetVector"));}

	UAthenaCheatManager_WindSetVector_Params params;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.WindSetMagnitude
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Magnitude                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::WindSetMagnitude(float Magnitude)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.WindSetMagnitude"));}

	UAthenaCheatManager_WindSetMagnitude_Params params;
	params.Magnitude = Magnitude;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.WindSetDirection
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          X                              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Y                              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::WindSetDirection(float X, float Y)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.WindSetDirection"));}

	UAthenaCheatManager_WindSetDirection_Params params;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.WindReloadParams
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::WindReloadParams()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.WindReloadParams"));}

	UAthenaCheatManager_WindReloadParams_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.WindPrintDirection
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::WindPrintDirection()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.WindPrintDirection"));}

	UAthenaCheatManager_WindPrintDirection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.WindEnableDebug
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::WindEnableDebug()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.WindEnableDebug"));}

	UAthenaCheatManager_WindEnableDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.WindDisableDebug
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::WindDisableDebug()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.WindDisableDebug"));}

	UAthenaCheatManager_WindDisableDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.WindAlignWithCamera
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::WindAlignWithCamera()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.WindAlignWithCamera"));}

	UAthenaCheatManager_WindAlignWithCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.Walk
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::Walk()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.Walk"));}

	UAthenaCheatManager_Walk_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.VomitWithType
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FName                   VomitType                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// float                          Duration                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::VomitWithType(const struct FName& VomitType, float Duration)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.VomitWithType"));}

	UAthenaCheatManager_VomitWithType_Params params;
	params.VomitType = VomitType;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.Vomit
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::Vomit()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.Vomit"));}

	UAthenaCheatManager_Vomit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.UnlockAllEntitlements
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            TrueFalse                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::UnlockAllEntitlements(int TrueFalse)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.UnlockAllEntitlements"));}

	UAthenaCheatManager_UnlockAllEntitlements_Params params;
	params.TrueFalse = TrueFalse;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TriggerRewardNotification
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FName                   Identifier                     (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::TriggerRewardNotification(struct FName* Identifier)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TriggerRewardNotification"));}

	UAthenaCheatManager_TriggerRewardNotification_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Identifier != nullptr)
		*Identifier = params.Identifier;
}


// Function Athena.AthenaCheatManager.TriggerLandmarkReaction
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            ActionType                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::TriggerLandmarkReaction(int ActionType)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TriggerLandmarkReaction"));}

	UAthenaCheatManager_TriggerLandmarkReaction_Params params;
	params.ActionType = ActionType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TriggerEmblemUnlockedMessage
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 EmblemFriendlyName             (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::TriggerEmblemUnlockedMessage(const struct FString& EmblemFriendlyName)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TriggerEmblemUnlockedMessage"));}

	UAthenaCheatManager_TriggerEmblemUnlockedMessage_Params params;
	params.EmblemFriendlyName = EmblemFriendlyName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TriggerControllerConnectionChange
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           IsConnect                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            UserId                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            ControllerId                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::TriggerControllerConnectionChange(bool IsConnect, int UserId, int ControllerId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TriggerControllerConnectionChange"));}

	UAthenaCheatManager_TriggerControllerConnectionChange_Params params;
	params.IsConnect = IsConnect;
	params.UserId = UserId;
	params.ControllerId = ControllerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ToggleVideprinter
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 Id                             (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::ToggleVideprinter(const struct FString& Id)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ToggleVideprinter"));}

	UAthenaCheatManager_ToggleVideprinter_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ToggleThirdPerson
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::ToggleThirdPerson()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ToggleThirdPerson"));}

	UAthenaCheatManager_ToggleThirdPerson_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ToggleFastShipControls
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::ToggleFastShipControls()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ToggleFastShipControls"));}

	UAthenaCheatManager_ToggleFastShipControls_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ToggleDrawShipSpeed
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::ToggleDrawShipSpeed()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ToggleDrawShipSpeed"));}

	UAthenaCheatManager_ToggleDrawShipSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ToggleDisplayCannonAISpawnerZones
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::ToggleDisplayCannonAISpawnerZones()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ToggleDisplayCannonAISpawnerZones"));}

	UAthenaCheatManager_ToggleDisplayCannonAISpawnerZones_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ToggleDebugFlying
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::ToggleDebugFlying()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ToggleDebugFlying"));}

	UAthenaCheatManager_ToggleDebugFlying_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ToggleDeathCamera
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::ToggleDeathCamera()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ToggleDeathCamera"));}

	UAthenaCheatManager_ToggleDeathCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ToggleCinematicCamera
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::ToggleCinematicCamera()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ToggleCinematicCamera"));}

	UAthenaCheatManager_ToggleCinematicCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ToggleAttributeOverride
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::ToggleAttributeOverride()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ToggleAttributeOverride"));}

	UAthenaCheatManager_ToggleAttributeOverride_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TestCrashDumpCreationOnRunnableThread
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::TestCrashDumpCreationOnRunnableThread()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TestCrashDumpCreationOnRunnableThread"));}

	UAthenaCheatManager_TestCrashDumpCreationOnRunnableThread_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TestCrashDumpCreationOnMainThread
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::TestCrashDumpCreationOnMainThread()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TestCrashDumpCreationOnMainThread"));}

	UAthenaCheatManager_TestCrashDumpCreationOnMainThread_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TeleportToShip
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::TeleportToShip()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TeleportToShip"));}

	UAthenaCheatManager_TeleportToShip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TeleportToPlayerStart
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::TeleportToPlayerStart()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TeleportToPlayerStart"));}

	UAthenaCheatManager_TeleportToPlayerStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TeleportToNearestTreasureLocation
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::TeleportToNearestTreasureLocation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TeleportToNearestTreasureLocation"));}

	UAthenaCheatManager_TeleportToNearestTreasureLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TeleportToLocation
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          LocationX                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          LocationY                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          LocationZ                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::TeleportToLocation(float LocationX, float LocationY, float LocationZ)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TeleportToLocation"));}

	UAthenaCheatManager_TeleportToLocation_Params params;
	params.LocationX = LocationX;
	params.LocationY = LocationY;
	params.LocationZ = LocationZ;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TeleportToHideout
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::TeleportToHideout()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TeleportToHideout"));}

	UAthenaCheatManager_TeleportToHideout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TeleportShip
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          X                              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Y                              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Z                              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::TeleportShip(float X, float Y, float Z)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TeleportShip"));}

	UAthenaCheatManager_TeleportShip_Params params;
	params.X = X;
	params.Y = Y;
	params.Z = Z;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TeleportPlayerToSafety
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::TeleportPlayerToSafety()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TeleportPlayerToSafety"));}

	UAthenaCheatManager_TeleportPlayerToSafety_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TeleportPlayerToKraken
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::TeleportPlayerToKraken()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TeleportPlayerToKraken"));}

	UAthenaCheatManager_TeleportPlayerToKraken_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TeleportOutOfHideout
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::TeleportOutOfHideout()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TeleportOutOfHideout"));}

	UAthenaCheatManager_TeleportOutOfHideout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TeleportCrewToShip
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 CrewId                         (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::TeleportCrewToShip(const struct FString& CrewId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TeleportCrewToShip"));}

	UAthenaCheatManager_TeleportCrewToShip_Params params;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TeleportCrewToSafeSpawnLocationFromRemoteActor
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 ActorIdString                  (CPF_Parm, CPF_ZeroConstructor)
// struct FString                 CrewId                         (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::TeleportCrewToSafeSpawnLocationFromRemoteActor(const struct FString& ActorIdString, const struct FString& CrewId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TeleportCrewToSafeSpawnLocationFromRemoteActor"));}

	UAthenaCheatManager_TeleportCrewToSafeSpawnLocationFromRemoteActor_Params params;
	params.ActorIdString = ActorIdString;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TeleportCrewToSafeSpawnLocation
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 CrewId                         (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::TeleportCrewToSafeSpawnLocation(const struct FString& CrewId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TeleportCrewToSafeSpawnLocation"));}

	UAthenaCheatManager_TeleportCrewToSafeSpawnLocation_Params params;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TeleportCrewMemberToShip
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 ActorIdString                  (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::TeleportCrewMemberToShip(const struct FString& ActorIdString)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TeleportCrewMemberToShip"));}

	UAthenaCheatManager_TeleportCrewMemberToShip_Params params;
	params.ActorIdString = ActorIdString;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TeleportAllPlayersToShip
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::TeleportAllPlayersToShip()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TeleportAllPlayersToShip"));}

	UAthenaCheatManager_TeleportAllPlayersToShip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TeleportAllPlayersToPlayerStart
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::TeleportAllPlayersToPlayerStart()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TeleportAllPlayersToPlayerStart"));}

	UAthenaCheatManager_TeleportAllPlayersToPlayerStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TeleportAllCrewsToCrewSpawnLocations
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::TeleportAllCrewsToCrewSpawnLocations()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TeleportAllCrewsToCrewSpawnLocations"));}

	UAthenaCheatManager_TeleportAllCrewsToCrewSpawnLocations_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TeleportActorToTeleportLocationActor
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 ControllerActorIdString        (CPF_Parm, CPF_ZeroConstructor)
// struct FString                 TeleportLocationActorIdString  (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::TeleportActorToTeleportLocationActor(const struct FString& ControllerActorIdString, const struct FString& TeleportLocationActorIdString)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TeleportActorToTeleportLocationActor"));}

	UAthenaCheatManager_TeleportActorToTeleportLocationActor_Params params;
	params.ControllerActorIdString = ControllerActorIdString;
	params.TeleportLocationActorIdString = TeleportLocationActorIdString;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TeleportActorToLocation
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 ActorIdString                  (CPF_Parm, CPF_ZeroConstructor)
// float                          LocationX                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          LocationY                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          LocationZ                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Yaw                            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::TeleportActorToLocation(const struct FString& ActorIdString, float LocationX, float LocationY, float LocationZ, float Yaw)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TeleportActorToLocation"));}

	UAthenaCheatManager_TeleportActorToLocation_Params params;
	params.ActorIdString = ActorIdString;
	params.LocationX = LocationX;
	params.LocationY = LocationY;
	params.LocationZ = LocationZ;
	params.Yaw = Yaw;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TeleportActorToIsland
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 ActorIdString                  (CPF_Parm, CPF_ZeroConstructor)
// struct FString                 IslandName                     (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::TeleportActorToIsland(const struct FString& ActorIdString, const struct FString& IslandName)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TeleportActorToIsland"));}

	UAthenaCheatManager_TeleportActorToIsland_Params params;
	params.ActorIdString = ActorIdString;
	params.IslandName = IslandName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.TeleportActorToActorWithOffset
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 ActorIdString                  (CPF_Parm, CPF_ZeroConstructor)
// struct FString                 DestinationActorIdString       (CPF_Parm, CPF_ZeroConstructor)
// float                          OffsetX                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          OffsetY                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          OffsetZ                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::TeleportActorToActorWithOffset(const struct FString& ActorIdString, const struct FString& DestinationActorIdString, float OffsetX, float OffsetY, float OffsetZ)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.TeleportActorToActorWithOffset"));}

	UAthenaCheatManager_TeleportActorToActorWithOffset_Params params;
	params.ActorIdString = ActorIdString;
	params.DestinationActorIdString = DestinationActorIdString;
	params.OffsetX = OffsetX;
	params.OffsetY = OffsetY;
	params.OffsetZ = OffsetZ;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SuperSailor
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::SuperSailor()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SuperSailor"));}

	UAthenaCheatManager_SuperSailor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.StartVoyage
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 SourceAssetName                (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::StartVoyage(const struct FString& SourceAssetName)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.StartVoyage"));}

	UAthenaCheatManager_StartVoyage_Params params;
	params.SourceAssetName = SourceAssetName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.StartDemoSession
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::StartDemoSession()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.StartDemoSession"));}

	UAthenaCheatManager_StartDemoSession_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.StartAllCrewVoyages
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::StartAllCrewVoyages()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.StartAllCrewVoyages"));}

	UAthenaCheatManager_StartAllCrewVoyages_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpinShip
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          YawSpdInDegreesPerSecond       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SpinShip(float YawSpdInDegreesPerSecond)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpinShip"));}

	UAthenaCheatManager_SpinShip_Params params;
	params.YawSpdInDegreesPerSecond = YawSpdInDegreesPerSecond;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnTreasureChestOfType
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 ChestTypeString                (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor)

void UAthenaCheatManager::SpawnTreasureChestOfType(struct FString* ChestTypeString)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnTreasureChestOfType"));}

	UAthenaCheatManager_SpawnTreasureChestOfType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ChestTypeString != nullptr)
		*ChestTypeString = params.ChestTypeString;
}


// Function Athena.AthenaCheatManager.SpawnTreasureArtifact
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 TypeString                     (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::SpawnTreasureArtifact(const struct FString& TypeString)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnTreasureArtifact"));}

	UAthenaCheatManager_SpawnTreasureArtifact_Params params;
	params.TypeString = TypeString;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnStrongholdKey
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::SpawnStrongholdKey()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnStrongholdKey"));}

	UAthenaCheatManager_SpawnStrongholdKey_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnSmallShipAtIsland
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 IslandName                     (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::SpawnSmallShipAtIsland(const struct FString& IslandName)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnSmallShipAtIsland"));}

	UAthenaCheatManager_SpawnSmallShipAtIsland_Params params;
	params.IslandName = IslandName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnSmallShip
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          SpawnLocationX                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          SpawnLocationY                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          SpawnLocationZ                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          SpawnYaw                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SpawnSmallShip(float SpawnLocationX, float SpawnLocationY, float SpawnLocationZ, float SpawnYaw)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnSmallShip"));}

	UAthenaCheatManager_SpawnSmallShip_Params params;
	params.SpawnLocationX = SpawnLocationX;
	params.SpawnLocationY = SpawnLocationY;
	params.SpawnLocationZ = SpawnLocationZ;
	params.SpawnYaw = SpawnYaw;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnShipwreck
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          SpawnLocationX                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          SpawnLocationY                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          SpawnLocationZ                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SpawnShipwreck(float SpawnLocationX, float SpawnLocationY, float SpawnLocationZ)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnShipwreck"));}

	UAthenaCheatManager_SpawnShipwreck_Params params;
	params.SpawnLocationX = SpawnLocationX;
	params.SpawnLocationY = SpawnLocationY;
	params.SpawnLocationZ = SpawnLocationZ;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnShipInFrontOfNearestAIInteractable
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          XProportion                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          YProportion                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Yaw                            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SpawnShipInFrontOfNearestAIInteractable(float XProportion, float YProportion, float Yaw)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnShipInFrontOfNearestAIInteractable"));}

	UAthenaCheatManager_SpawnShipInFrontOfNearestAIInteractable_Params params;
	params.XProportion = XProportion;
	params.YProportion = YProportion;
	params.Yaw = Yaw;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnShipFromDesc
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 InShipDescAssetString          (CPF_Parm, CPF_ZeroConstructor)
// float                          SpawnLocationX                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          SpawnLocationY                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          SpawnLocationZ                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          SpawnYaw                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SpawnShipFromDesc(const struct FString& InShipDescAssetString, float SpawnLocationX, float SpawnLocationY, float SpawnLocationZ, float SpawnYaw)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnShipFromDesc"));}

	UAthenaCheatManager_SpawnShipFromDesc_Params params;
	params.InShipDescAssetString = InShipDescAssetString;
	params.SpawnLocationX = SpawnLocationX;
	params.SpawnLocationY = SpawnLocationY;
	params.SpawnLocationZ = SpawnLocationZ;
	params.SpawnYaw = SpawnYaw;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnShipAtIsland
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 IslandName                     (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::SpawnShipAtIsland(const struct FString& IslandName)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnShipAtIsland"));}

	UAthenaCheatManager_SpawnShipAtIsland_Params params;
	params.IslandName = IslandName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnShip
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          SpawnLocationX                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          SpawnLocationY                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          SpawnLocationZ                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          SpawnYaw                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SpawnShip(float SpawnLocationX, float SpawnLocationY, float SpawnLocationZ, float SpawnYaw)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnShip"));}

	UAthenaCheatManager_SpawnShip_Params params;
	params.SpawnLocationX = SpawnLocationX;
	params.SpawnLocationY = SpawnLocationY;
	params.SpawnLocationZ = SpawnLocationZ;
	params.SpawnYaw = SpawnYaw;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnNumberOfAI
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 AITypeString                   (CPF_Parm, CPF_ZeroConstructor)
// int                            NumToSpawn                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SpawnNumberOfAI(const struct FString& AITypeString, int NumToSpawn)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnNumberOfAI"));}

	UAthenaCheatManager_SpawnNumberOfAI_Params params;
	params.AITypeString = AITypeString;
	params.NumToSpawn = NumToSpawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnMessageInABottle
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 MessageInABottleTypeString     (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::SpawnMessageInABottle(const struct FString& MessageInABottleTypeString)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnMessageInABottle"));}

	UAthenaCheatManager_SpawnMessageInABottle_Params params;
	params.MessageInABottleTypeString = MessageInABottleTypeString;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnMermaid
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::SpawnMermaid()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnMermaid"));}

	UAthenaCheatManager_SpawnMermaid_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnMerchantFauna
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 FaunaTypeString                (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::SpawnMerchantFauna(const struct FString& FaunaTypeString)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnMerchantFauna"));}

	UAthenaCheatManager_SpawnMerchantFauna_Params params;
	params.FaunaTypeString = FaunaTypeString;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnMerchantCrate
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 MerchantCrateTypeString        (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::SpawnMerchantCrate(const struct FString& MerchantCrateTypeString)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnMerchantCrate"));}

	UAthenaCheatManager_SpawnMerchantCrate_Params params;
	params.MerchantCrateTypeString = MerchantCrateTypeString;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnMerchantCargo
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 MerchantCargoTypeString        (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::SpawnMerchantCargo(const struct FString& MerchantCargoTypeString)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnMerchantCargo"));}

	UAthenaCheatManager_SpawnMerchantCargo_Params params;
	params.MerchantCargoTypeString = MerchantCargoTypeString;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnKrakenAtCurrentLocationWithNumTentacles
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// uint32_t                       NumTentacles                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SpawnKrakenAtCurrentLocationWithNumTentacles(uint32_t NumTentacles)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnKrakenAtCurrentLocationWithNumTentacles"));}

	UAthenaCheatManager_SpawnKrakenAtCurrentLocationWithNumTentacles_Params params;
	params.NumTentacles = NumTentacles;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnKrakenAtCurrentLocation
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::SpawnKrakenAtCurrentLocation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnKrakenAtCurrentLocation"));}

	UAthenaCheatManager_SpawnKrakenAtCurrentLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnKraken
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::SpawnKraken()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnKraken"));}

	UAthenaCheatManager_SpawnKraken_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnBountyReward
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 BountyTypeString               (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::SpawnBountyReward(const struct FString& BountyTypeString)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnBountyReward"));}

	UAthenaCheatManager_SpawnBountyReward_Params params;
	params.BountyTypeString = BountyTypeString;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnBarrelGroup
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::SpawnBarrelGroup()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnBarrelGroup"));}

	UAthenaCheatManager_SpawnBarrelGroup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnAINoTrigger
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 AIDescString                   (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::SpawnAINoTrigger(const struct FString& AIDescString)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnAINoTrigger"));}

	UAthenaCheatManager_SpawnAINoTrigger_Params params;
	params.AIDescString = AIDescString;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnAIBySpawner
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::SpawnAIBySpawner()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnAIBySpawner"));}

	UAthenaCheatManager_SpawnAIBySpawner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnAIAtLocationDelayed
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 AITypeString                   (CPF_Parm, CPF_ZeroConstructor)
// float                          LocationX                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          LocationY                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          LocationZ                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Yaw                            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Delay                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SpawnAIAtLocationDelayed(const struct FString& AITypeString, float LocationX, float LocationY, float LocationZ, float Yaw, float Delay)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnAIAtLocationDelayed"));}

	UAthenaCheatManager_SpawnAIAtLocationDelayed_Params params;
	params.AITypeString = AITypeString;
	params.LocationX = LocationX;
	params.LocationY = LocationY;
	params.LocationZ = LocationZ;
	params.Yaw = Yaw;
	params.Delay = Delay;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnAIAtCurrentLocationDelayed
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 AITypeString                   (CPF_Parm, CPF_ZeroConstructor)
// float                          Delay                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SpawnAIAtCurrentLocationDelayed(const struct FString& AITypeString, float Delay)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnAIAtCurrentLocationDelayed"));}

	UAthenaCheatManager_SpawnAIAtCurrentLocationDelayed_Params params;
	params.AITypeString = AITypeString;
	params.Delay = Delay;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SpawnAI
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 AIDescString                   (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::SpawnAI(const struct FString& AIDescString)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SpawnAI"));}

	UAthenaCheatManager_SpawnAI_Params params;
	params.AIDescString = AIDescString;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SlowMotionOverride
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           InValue                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SlowMotionOverride(bool InValue)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SlowMotionOverride"));}

	UAthenaCheatManager_SlowMotionOverride_Params params;
	params.InValue = InValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SinkShipWithKeelOverIndex
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            KeelOverConfigIndex            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SinkShipWithKeelOverIndex(int KeelOverConfigIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SinkShipWithKeelOverIndex"));}

	UAthenaCheatManager_SinkShipWithKeelOverIndex_Params params;
	params.KeelOverConfigIndex = KeelOverConfigIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SinkShipByActorId
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 ShipActorIdString              (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::SinkShipByActorId(const struct FString& ShipActorIdString)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SinkShipByActorId"));}

	UAthenaCheatManager_SinkShipByActorId_Params params;
	params.ShipActorIdString = ShipActorIdString;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SinkShip
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::SinkShip()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SinkShip"));}

	UAthenaCheatManager_SinkShip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SinkAllBarrels
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::SinkAllBarrels()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SinkAllBarrels"));}

	UAthenaCheatManager_SinkAllBarrels_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ShowRandomCrewMemberGamerCard
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::ShowRandomCrewMemberGamerCard()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ShowRandomCrewMemberGamerCard"));}

	UAthenaCheatManager_ShowRandomCrewMemberGamerCard_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ShowAllItemsInRadialInventory
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::ShowAllItemsInRadialInventory()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ShowAllItemsInRadialInventory"));}

	UAthenaCheatManager_ShowAllItemsInRadialInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ShipUpdateMassProperies
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::ShipUpdateMassProperies()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ShipUpdateMassProperies"));}

	UAthenaCheatManager_ShipUpdateMassProperies_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetWheelAngle
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Angle                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SetWheelAngle(float Angle)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetWheelAngle"));}

	UAthenaCheatManager_SetWheelAngle_Params params;
	params.Angle = Angle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetWeaponsLockedOut
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           WeaponsLockedOut               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SetWeaponsLockedOut(bool WeaponsLockedOut)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetWeaponsLockedOut"));}

	UAthenaCheatManager_SetWeaponsLockedOut_Params params;
	params.WeaponsLockedOut = WeaponsLockedOut;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetWaveFlag
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            InFlag                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SetWaveFlag(int InFlag)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetWaveFlag"));}

	UAthenaCheatManager_SetWaveFlag_Params params;
	params.InFlag = InFlag;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetWaterWaveParams
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Amplitude                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          WaveLength                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          PropagationSpeed               (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SetWaterWaveParams(float Amplitude, float WaveLength, float PropagationSpeed)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetWaterWaveParams"));}

	UAthenaCheatManager_SetWaterWaveParams_Params params;
	params.Amplitude = Amplitude;
	params.WaveLength = WaveLength;
	params.PropagationSpeed = PropagationSpeed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetVoiceChatEndpointXAudio2
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::SetVoiceChatEndpointXAudio2()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetVoiceChatEndpointXAudio2"));}

	UAthenaCheatManager_SetVoiceChatEndpointXAudio2_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetVoiceChatEndpointWwise
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::SetVoiceChatEndpointWwise()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetVoiceChatEndpointWwise"));}

	UAthenaCheatManager_SetVoiceChatEndpointWwise_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetUnattenuatedChatMixingMethodToUseWwise
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::SetUnattenuatedChatMixingMethodToUseWwise()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetUnattenuatedChatMixingMethodToUseWwise"));}

	UAthenaCheatManager_SetUnattenuatedChatMixingMethodToUseWwise_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetUnattenuatedChatMixingMethodToUsePlatform
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::SetUnattenuatedChatMixingMethodToUsePlatform()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetUnattenuatedChatMixingMethodToUsePlatform"));}

	UAthenaCheatManager_SetUnattenuatedChatMixingMethodToUsePlatform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetTimeScalar
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          TimeScalar                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SetTimeScalar(float TimeScalar)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetTimeScalar"));}

	UAthenaCheatManager_SetTimeScalar_Params params;
	params.TimeScalar = TimeScalar;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetTimeHoursAndMinutes
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            Hours                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Minutes                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SetTimeHoursAndMinutes(int Hours, int Minutes)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetTimeHoursAndMinutes"));}

	UAthenaCheatManager_SetTimeHoursAndMinutes_Params params;
	params.Hours = Hours;
	params.Minutes = Minutes;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetTime
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            Hours                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SetTime(int Hours)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetTime"));}

	UAthenaCheatManager_SetTime_Params params;
	params.Hours = Hours;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetShipYaw
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Yaw                            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SetShipYaw(float Yaw)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetShipYaw"));}

	UAthenaCheatManager_SetShipYaw_Params params;
	params.Yaw = Yaw;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetShipBuoyancyBlend
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          UnaryBlend                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SetShipBuoyancyBlend(float UnaryBlend)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetShipBuoyancyBlend"));}

	UAthenaCheatManager_SetShipBuoyancyBlend_Params params;
	params.UnaryBlend = UnaryBlend;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetSailLoweredProportions
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Proportion                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SetSailLoweredProportions(float Proportion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetSailLoweredProportions"));}

	UAthenaCheatManager_SetSailLoweredProportions_Params params;
	params.Proportion = Proportion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetSailAngles
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Angle                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SetSailAngles(float Angle)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetSailAngles"));}

	UAthenaCheatManager_SetSailAngles_Params params;
	params.Angle = Angle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetPreventLeakingOnAllDamageZones
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           PreventLeaking                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SetPreventLeakingOnAllDamageZones(bool PreventLeaking)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetPreventLeakingOnAllDamageZones"));}

	UAthenaCheatManager_SetPreventLeakingOnAllDamageZones_Params params;
	params.PreventLeaking = PreventLeaking;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetPlayerVisibleToAI
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::SetPlayerVisibleToAI()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetPlayerVisibleToAI"));}

	UAthenaCheatManager_SetPlayerVisibleToAI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetPlayerInvisibleToAI
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::SetPlayerInvisibleToAI()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetPlayerInvisibleToAI"));}

	UAthenaCheatManager_SetPlayerInvisibleToAI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetPhotoMode
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           Enabled                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SetPhotoMode(bool Enabled)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetPhotoMode"));}

	UAthenaCheatManager_SetPhotoMode_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetNonCrewChatSpatialisation
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           Enabled                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SetNonCrewChatSpatialisation(bool Enabled)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetNonCrewChatSpatialisation"));}

	UAthenaCheatManager_SetNonCrewChatSpatialisation_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetIdleDisconnectEnabled
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           Enabled                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SetIdleDisconnectEnabled(bool Enabled)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetIdleDisconnectEnabled"));}

	UAthenaCheatManager_SetIdleDisconnectEnabled_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetGrogSecondary
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           InValue                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SetGrogSecondary(bool InValue)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetGrogSecondary"));}

	UAthenaCheatManager_SetGrogSecondary_Params params;
	params.InValue = InValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetFOV
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          InNewFOV                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SetFOV(float InNewFOV)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetFOV"));}

	UAthenaCheatManager_SetFOV_Params params;
	params.InNewFOV = InNewFOV;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetDebugCameraUseProjectileCollisionChannel
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           bUseProjectileChannel          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SetDebugCameraUseProjectileCollisionChannel(bool bUseProjectileChannel)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetDebugCameraUseProjectileCollisionChannel"));}

	UAthenaCheatManager_SetDebugCameraUseProjectileCollisionChannel_Params params;
	params.bUseProjectileChannel = bUseProjectileChannel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetDeathPenaltyRespawnTimer
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          InSpawnTimer                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SetDeathPenaltyRespawnTimer(float InSpawnTimer)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetDeathPenaltyRespawnTimer"));}

	UAthenaCheatManager_SetDeathPenaltyRespawnTimer_Params params;
	params.InSpawnTimer = InSpawnTimer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetCapstanPosition
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Position                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SetCapstanPosition(float Position)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetCapstanPosition"));}

	UAthenaCheatManager_SetCapstanPosition_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SetAITeamAttitude
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 TeamAString                    (CPF_Parm, CPF_ZeroConstructor)
// struct FString                 TeamBString                    (CPF_Parm, CPF_ZeroConstructor)
// struct FString                 AttitudeString                 (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::SetAITeamAttitude(const struct FString& TeamAString, const struct FString& TeamBString, const struct FString& AttitudeString)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SetAITeamAttitude"));}

	UAthenaCheatManager_SetAITeamAttitude_Params params;
	params.TeamAString = TeamAString;
	params.TeamBString = TeamBString;
	params.AttitudeString = AttitudeString;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SendStatEvent
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 StatName                       (CPF_Parm, CPF_ZeroConstructor)
// uint64_t                       StatValue                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::SendStatEvent(const struct FString& StatName, uint64_t StatValue)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SendStatEvent"));}

	UAthenaCheatManager_SendStatEvent_Params params;
	params.StatName = StatName;
	params.StatValue = StatValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SendRewardRequestEvent
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 CompanyNameAndRewardIdSeparatedByColon (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::SendRewardRequestEvent(const struct FString& CompanyNameAndRewardIdSeparatedByColon)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SendRewardRequestEvent"));}

	UAthenaCheatManager_SendRewardRequestEvent_Params params;
	params.CompanyNameAndRewardIdSeparatedByColon = CompanyNameAndRewardIdSeparatedByColon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.SailShip
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::SailShip()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.SailShip"));}

	UAthenaCheatManager_SailShip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.RewindPhysicsSceneBy
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          SecondsToRewindBy              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::RewindPhysicsSceneBy(float SecondsToRewindBy)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.RewindPhysicsSceneBy"));}

	UAthenaCheatManager_RewindPhysicsSceneBy_Params params;
	params.SecondsToRewindBy = SecondsToRewindBy;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.RestockIslandBarrels
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::RestockIslandBarrels()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.RestockIslandBarrels"));}

	UAthenaCheatManager_RestockIslandBarrels_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.RestockAllReplenishables
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::RestockAllReplenishables()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.RestockAllReplenishables"));}

	UAthenaCheatManager_RestockAllReplenishables_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.RespawnAllIslandItemSpawners
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::RespawnAllIslandItemSpawners()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.RespawnAllIslandItemSpawners"));}

	UAthenaCheatManager_RespawnAllIslandItemSpawners_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ResetStats
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::ResetStats()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ResetStats"));}

	UAthenaCheatManager_ResetStats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ResetMouseDelta
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::ResetMouseDelta()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ResetMouseDelta"));}

	UAthenaCheatManager_ResetMouseDelta_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ResetDemoSession
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           StartNewSession                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::ResetDemoSession(bool StartNewSession)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ResetDemoSession"));}

	UAthenaCheatManager_ResetDemoSession_Params params;
	params.StartNewSession = StartNewSession;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ResetAITeamAttitudes
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::ResetAITeamAttitudes()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ResetAITeamAttitudes"));}

	UAthenaCheatManager_ResetAITeamAttitudes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ReplenishShip
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::ReplenishShip()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ReplenishShip"));}

	UAthenaCheatManager_ReplenishShip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ReplaceShipWithSmallShip
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 ShipActorIdConsoleString       (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::ReplaceShipWithSmallShip(const struct FString& ShipActorIdConsoleString)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ReplaceShipWithSmallShip"));}

	UAthenaCheatManager_ReplaceShipWithSmallShip_Params params;
	params.ShipActorIdConsoleString = ShipActorIdConsoleString;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.RenameTreasure
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 InVendorName                   (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::RenameTreasure(const struct FString& InVendorName)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.RenameTreasure"));}

	UAthenaCheatManager_RenameTreasure_Params params;
	params.InVendorName = InVendorName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.RemoveItemInSlot
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            SlotIndex                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::RemoveItemInSlot(int SlotIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.RemoveItemInSlot"));}

	UAthenaCheatManager_RemoveItemInSlot_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.PushShip
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          FwdSpdInMetersPerSecond        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::PushShip(float FwdSpdInMetersPerSecond)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.PushShip"));}

	UAthenaCheatManager_PushShip_Params params;
	params.FwdSpdInMetersPerSecond = FwdSpdInMetersPerSecond;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.PullLatestEmblemProgress
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::PullLatestEmblemProgress()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.PullLatestEmblemProgress"));}

	UAthenaCheatManager_PullLatestEmblemProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.PrintTime
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::PrintTime()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.PrintTime"));}

	UAthenaCheatManager_PrintTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.PrintAllNetworkActors
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::PrintAllNetworkActors()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.PrintAllNetworkActors"));}

	UAthenaCheatManager_PrintAllNetworkActors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.OverrideShipPartFromCatalogue
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 InShipActorIdConsoleString     (CPF_Parm, CPF_ZeroConstructor)
// int                            InCataloguePartIndex           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            InCataloguePartCustomisationIndex (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::OverrideShipPartFromCatalogue(const struct FString& InShipActorIdConsoleString, int InCataloguePartIndex, int InCataloguePartCustomisationIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.OverrideShipPartFromCatalogue"));}

	UAthenaCheatManager_OverrideShipPartFromCatalogue_Params params;
	params.InShipActorIdConsoleString = InShipActorIdConsoleString;
	params.InCataloguePartIndex = InCataloguePartIndex;
	params.InCataloguePartCustomisationIndex = InCataloguePartCustomisationIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.OpenSkeletonFortDoor
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::OpenSkeletonFortDoor()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.OpenSkeletonFortDoor"));}

	UAthenaCheatManager_OpenSkeletonFortDoor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.MessageBoxOnGraphicsThreadTest
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::MessageBoxOnGraphicsThreadTest()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.MessageBoxOnGraphicsThreadTest"));}

	UAthenaCheatManager_MessageBoxOnGraphicsThreadTest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.MakeSharksBrainDead
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::MakeSharksBrainDead()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.MakeSharksBrainDead"));}

	UAthenaCheatManager_MakeSharksBrainDead_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.LogShipHierarchy
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::LogShipHierarchy()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.LogShipHierarchy"));}

	UAthenaCheatManager_LogShipHierarchy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.LogServerShipHierarchy
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::LogServerShipHierarchy()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.LogServerShipHierarchy"));}

	UAthenaCheatManager_LogServerShipHierarchy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.LogAITeamAttitudes
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::LogAITeamAttitudes()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.LogAITeamAttitudes"));}

	UAthenaCheatManager_LogAITeamAttitudes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.LocallyUnBreakLeg
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::LocallyUnBreakLeg()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.LocallyUnBreakLeg"));}

	UAthenaCheatManager_LocallyUnBreakLeg_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.LaunchPlayer
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Velocity                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Angle                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::LaunchPlayer(float Velocity, float Angle)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.LaunchPlayer"));}

	UAthenaCheatManager_LaunchPlayer_Params params;
	params.Velocity = Velocity;
	params.Angle = Angle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.KrakenAnimatedTentacleThrowPlayer
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::KrakenAnimatedTentacleThrowPlayer()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.KrakenAnimatedTentacleThrowPlayer"));}

	UAthenaCheatManager_KrakenAnimatedTentacleThrowPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.KrakenAnimatedTentacleTakeDamage
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Damage                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::KrakenAnimatedTentacleTakeDamage(float Damage)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.KrakenAnimatedTentacleTakeDamage"));}

	UAthenaCheatManager_KrakenAnimatedTentacleTakeDamage_Params params;
	params.Damage = Damage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.KrakenAnimatedTentacleSwallowPlayer
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::KrakenAnimatedTentacleSwallowPlayer()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.KrakenAnimatedTentacleSwallowPlayer"));}

	UAthenaCheatManager_KrakenAnimatedTentacleSwallowPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.KrakenAnimatedTentacleSuckPlayer
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::KrakenAnimatedTentacleSuckPlayer()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.KrakenAnimatedTentacleSuckPlayer"));}

	UAthenaCheatManager_KrakenAnimatedTentacleSuckPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.KrakenAnimatedTentaclePowerSlamPlayer
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::KrakenAnimatedTentaclePowerSlamPlayer()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.KrakenAnimatedTentaclePowerSlamPlayer"));}

	UAthenaCheatManager_KrakenAnimatedTentaclePowerSlamPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.KrakenAnimatedTentacleKill
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::KrakenAnimatedTentacleKill()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.KrakenAnimatedTentacleKill"));}

	UAthenaCheatManager_KrakenAnimatedTentacleKill_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.KrakenAnimatedTentacleIngestPlayer
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::KrakenAnimatedTentacleIngestPlayer()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.KrakenAnimatedTentacleIngestPlayer"));}

	UAthenaCheatManager_KrakenAnimatedTentacleIngestPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.KrakenAnimatedTentacleDropPlayer
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::KrakenAnimatedTentacleDropPlayer()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.KrakenAnimatedTentacleDropPlayer"));}

	UAthenaCheatManager_KrakenAnimatedTentacleDropPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.KrakenAnimatedTentacleDespawn
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::KrakenAnimatedTentacleDespawn()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.KrakenAnimatedTentacleDespawn"));}

	UAthenaCheatManager_KrakenAnimatedTentacleDespawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.KrakenAnimatedTentacleDefeat
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::KrakenAnimatedTentacleDefeat()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.KrakenAnimatedTentacleDefeat"));}

	UAthenaCheatManager_KrakenAnimatedTentacleDefeat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.KrakenAnimatedTentacleChangePlayerHoldState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 HoldState                      (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::KrakenAnimatedTentacleChangePlayerHoldState(const struct FString& HoldState)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.KrakenAnimatedTentacleChangePlayerHoldState"));}

	UAthenaCheatManager_KrakenAnimatedTentacleChangePlayerHoldState_Params params;
	params.HoldState = HoldState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.KillPlayer
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::KillPlayer()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.KillPlayer"));}

	UAthenaCheatManager_KillPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.KillCrew
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 CrewId                         (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::KillCrew(const struct FString& CrewId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.KillCrew"));}

	UAthenaCheatManager_KillCrew_Params params;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.KillAllPlayers
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::KillAllPlayers()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.KillAllPlayers"));}

	UAthenaCheatManager_KillAllPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.KillAllCrews
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::KillAllCrews()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.KillAllCrews"));}

	UAthenaCheatManager_KillAllCrews_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.IPGOverride
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FName                   BodyShape                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// float                          Distance                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::IPGOverride(const struct FName& BodyShape, float Distance)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.IPGOverride"));}

	UAthenaCheatManager_IPGOverride_Params params;
	params.BodyShape = BodyShape;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.IPGLoad
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 path                           (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::IPGLoad(const struct FString& path)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.IPGLoad"));}

	UAthenaCheatManager_IPGLoad_Params params;
	params.path = path;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.InfiniteGunAmmo
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           Enabled                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::InfiniteGunAmmo(bool Enabled)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.InfiniteGunAmmo"));}

	UAthenaCheatManager_InfiniteGunAmmo_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.IncrementTime
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            Hours                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Minutes                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::IncrementTime(int Hours, int Minutes)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.IncrementTime"));}

	UAthenaCheatManager_IncrementTime_Params params;
	params.Hours = Hours;
	params.Minutes = Minutes;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.HealthReset
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::HealthReset()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.HealthReset"));}

	UAthenaCheatManager_HealthReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.HealthAdjust
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Amount                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::HealthAdjust(float Amount)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.HealthAdjust"));}

	UAthenaCheatManager_HealthAdjust_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.God
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::God()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.God"));}

	UAthenaCheatManager_God_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.GenerateShipwrecks
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::GenerateShipwrecks()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.GenerateShipwrecks"));}

	UAthenaCheatManager_GenerateShipwrecks_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ForceOpenShop
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::ForceOpenShop()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ForceOpenShop"));}

	UAthenaCheatManager_ForceOpenShop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ForceCloseShop
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::ForceCloseShop()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ForceCloseShop"));}

	UAthenaCheatManager_ForceCloseShop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.Fly
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::Fly()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.Fly"));}

	UAthenaCheatManager_Fly_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.FloodShipWithKeelOverIndex
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          NormalisedWaterAmount          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            KeelOverConfigIndex            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::FloodShipWithKeelOverIndex(float NormalisedWaterAmount, int KeelOverConfigIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.FloodShipWithKeelOverIndex"));}

	UAthenaCheatManager_FloodShipWithKeelOverIndex_Params params;
	params.NormalisedWaterAmount = NormalisedWaterAmount;
	params.KeelOverConfigIndex = KeelOverConfigIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.FloodShip
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          NormalisedWaterAmount          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::FloodShip(float NormalisedWaterAmount)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.FloodShip"));}

	UAthenaCheatManager_FloodShip_Params params;
	params.NormalisedWaterAmount = NormalisedWaterAmount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.EquipPirateTitle
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 PirateTitleType                (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::EquipPirateTitle(const struct FString& PirateTitleType)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.EquipPirateTitle"));}

	UAthenaCheatManager_EquipPirateTitle_Params params;
	params.PirateTitleType = PirateTitleType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.EquipCompassInLoadout
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::EquipCompassInLoadout()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.EquipCompassInLoadout"));}

	UAthenaCheatManager_EquipCompassInLoadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.EndDemoSession
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::EndDemoSession()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.EndDemoSession"));}

	UAthenaCheatManager_EndDemoSession_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.EnableVoiceChatMeteringForOutgoingSignals
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           Enabled                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::EnableVoiceChatMeteringForOutgoingSignals(bool Enabled)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.EnableVoiceChatMeteringForOutgoingSignals"));}

	UAthenaCheatManager_EnableVoiceChatMeteringForOutgoingSignals_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.EnableVoiceChatMeteringForIncomingSignals
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           Enabled                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::EnableVoiceChatMeteringForIncomingSignals(bool Enabled)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.EnableVoiceChatMeteringForIncomingSignals"));}

	UAthenaCheatManager_EnableVoiceChatMeteringForIncomingSignals_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.EnableNTP
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           Enable                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::EnableNTP(bool Enable)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.EnableNTP"));}

	UAthenaCheatManager_EnableNTP_Params params;
	params.Enable = Enable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.EnableMermaidSpawning
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            Enable                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::EnableMermaidSpawning(int Enable)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.EnableMermaidSpawning"));}

	UAthenaCheatManager_EnableMermaidSpawning_Params params;
	params.Enable = Enable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.EnableMermaidDeletion
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            Enable                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::EnableMermaidDeletion(int Enable)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.EnableMermaidDeletion"));}

	UAthenaCheatManager_EnableMermaidDeletion_Params params;
	params.Enable = Enable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.EnableHeadphoneMixing
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           Enabled                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::EnableHeadphoneMixing(bool Enabled)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.EnableHeadphoneMixing"));}

	UAthenaCheatManager_EnableHeadphoneMixing_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.EnableCinematicCamera
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::EnableCinematicCamera()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.EnableCinematicCamera"));}

	UAthenaCheatManager_EnableCinematicCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.EnableBeaconOnAllMermaids
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            Enable                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::EnableBeaconOnAllMermaids(int Enable)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.EnableBeaconOnAllMermaids"));}

	UAthenaCheatManager_EnableBeaconOnAllMermaids_Params params;
	params.Enable = Enable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DrawVideprinter
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 Id                             (CPF_Parm, CPF_ZeroConstructor)
// bool                           Active                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::DrawVideprinter(const struct FString& Id, bool Active)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DrawVideprinter"));}

	UAthenaCheatManager_DrawVideprinter_Params params;
	params.Id = Id;
	params.Active = Active;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DrawTreasureDebug
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            Enabled                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::DrawTreasureDebug(int Enabled)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DrawTreasureDebug"));}

	UAthenaCheatManager_DrawTreasureDebug_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DrawTemporaryLandmarkDebug
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           Enabled                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::DrawTemporaryLandmarkDebug(bool Enabled)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DrawTemporaryLandmarkDebug"));}

	UAthenaCheatManager_DrawTemporaryLandmarkDebug_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DrawShipwreckDebugBeacons
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           bEnabled                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::DrawShipwreckDebugBeacons(bool bEnabled)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DrawShipwreckDebugBeacons"));}

	UAthenaCheatManager_DrawShipwreckDebugBeacons_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DrawNearbyAISpawnPointsRanged
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Range                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::DrawNearbyAISpawnPointsRanged(float Range)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DrawNearbyAISpawnPointsRanged"));}

	UAthenaCheatManager_DrawNearbyAISpawnPointsRanged_Params params;
	params.Range = Range;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DrawNearbyAISpawnPoints
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::DrawNearbyAISpawnPoints()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DrawNearbyAISpawnPoints"));}

	UAthenaCheatManager_DrawNearbyAISpawnPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DisplaySingleEmblemProgress
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 StatName                       (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::DisplaySingleEmblemProgress(const struct FString& StatName)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DisplaySingleEmblemProgress"));}

	UAthenaCheatManager_DisplaySingleEmblemProgress_Params params;
	params.StatName = StatName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DisplayServersideHitsAtPlayerPosWithDefaults
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::DisplayServersideHitsAtPlayerPosWithDefaults()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DisplayServersideHitsAtPlayerPosWithDefaults"));}

	UAthenaCheatManager_DisplayServersideHitsAtPlayerPosWithDefaults_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DisplayServersideHitsAtPlayerPos
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// uint32_t                       NumSamplesPerDimension         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          DistanceBetweenSamples         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          TestHeight                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::DisplayServersideHitsAtPlayerPos(uint32_t NumSamplesPerDimension, float DistanceBetweenSamples, float TestHeight)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DisplayServersideHitsAtPlayerPos"));}

	UAthenaCheatManager_DisplayServersideHitsAtPlayerPos_Params params;
	params.NumSamplesPerDimension = NumSamplesPerDimension;
	params.DistanceBetweenSamples = DistanceBetweenSamples;
	params.TestHeight = TestHeight;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DisplayNonVagueNonUniqueLandmarksForIsland
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           Enabled                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::DisplayNonVagueNonUniqueLandmarksForIsland(bool Enabled)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DisplayNonVagueNonUniqueLandmarksForIsland"));}

	UAthenaCheatManager_DisplayNonVagueNonUniqueLandmarksForIsland_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DisplayLandmarkValidTreasureLocationsForPlayer
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::DisplayLandmarkValidTreasureLocationsForPlayer()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DisplayLandmarkValidTreasureLocationsForPlayer"));}

	UAthenaCheatManager_DisplayLandmarkValidTreasureLocationsForPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DisplayLandmarkRegions
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::DisplayLandmarkRegions()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DisplayLandmarkRegions"));}

	UAthenaCheatManager_DisplayLandmarkRegions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DisplayLandmarkNames
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::DisplayLandmarkNames()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DisplayLandmarkNames"));}

	UAthenaCheatManager_DisplayLandmarkNames_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DisplayFallDamageDebug
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            Enable                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::DisplayFallDamageDebug(int Enable)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DisplayFallDamageDebug"));}

	UAthenaCheatManager_DisplayFallDamageDebug_Params params;
	params.Enable = Enable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DisplayDrunkenness
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           Flag                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::DisplayDrunkenness(bool Flag)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DisplayDrunkenness"));}

	UAthenaCheatManager_DisplayDrunkenness_Params params;
	params.Flag = Flag;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DisableCinematicCamera
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::DisableCinematicCamera()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DisableCinematicCamera"));}

	UAthenaCheatManager_DisableCinematicCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DestroyShip
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 ShipActorIdConsoleString       (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::DestroyShip(const struct FString& ShipActorIdConsoleString)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DestroyShip"));}

	UAthenaCheatManager_DestroyShip_Params params;
	params.ShipActorIdConsoleString = ShipActorIdConsoleString;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DestroyMyShip
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::DestroyMyShip()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DestroyMyShip"));}

	UAthenaCheatManager_DestroyMyShip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DestroyKraken
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::DestroyKraken()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DestroyKraken"));}

	UAthenaCheatManager_DestroyKraken_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DestroyAllTreasureChests
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::DestroyAllTreasureChests()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DestroyAllTreasureChests"));}

	UAthenaCheatManager_DestroyAllTreasureChests_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DestroyAllShips
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::DestroyAllShips()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DestroyAllShips"));}

	UAthenaCheatManager_DestroyAllShips_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DespawnNumberOfAI
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 AITypeString                   (CPF_Parm, CPF_ZeroConstructor)
// int                            NumToDespawn                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::DespawnNumberOfAI(const struct FString& AITypeString, int NumToDespawn)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DespawnNumberOfAI"));}

	UAthenaCheatManager_DespawnNumberOfAI_Params params;
	params.AITypeString = AITypeString;
	params.NumToDespawn = NumToDespawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DespawnFirstAI
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::DespawnFirstAI()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DespawnFirstAI"));}

	UAthenaCheatManager_DespawnFirstAI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DespawnAI
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 AITypeString                   (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::DespawnAI(const struct FString& AITypeString)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DespawnAI"));}

	UAthenaCheatManager_DespawnAI_Params params;
	params.AITypeString = AITypeString;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DeleteVoyageHistory
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::DeleteVoyageHistory()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DeleteVoyageHistory"));}

	UAthenaCheatManager_DeleteVoyageHistory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DeleteAllMermaids
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::DeleteAllMermaids()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DeleteAllMermaids"));}

	UAthenaCheatManager_DeleteAllMermaids_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DebugIslandDelta
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::DebugIslandDelta()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DebugIslandDelta"));}

	UAthenaCheatManager_DebugIslandDelta_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DamageShipFromRemoteActor
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 ActorIdString                  (CPF_Parm, CPF_ZeroConstructor)
// float                          Strength                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          CameraLocationX                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          CameraLocationY                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          CameraLocationZ                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          CameraForwardDirectionX        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          CameraForwardDirectionY        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          CameraForwardDirectionZ        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::DamageShipFromRemoteActor(const struct FString& ActorIdString, float Strength, float CameraLocationX, float CameraLocationY, float CameraLocationZ, float CameraForwardDirectionX, float CameraForwardDirectionY, float CameraForwardDirectionZ)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DamageShipFromRemoteActor"));}

	UAthenaCheatManager_DamageShipFromRemoteActor_Params params;
	params.ActorIdString = ActorIdString;
	params.Strength = Strength;
	params.CameraLocationX = CameraLocationX;
	params.CameraLocationY = CameraLocationY;
	params.CameraLocationZ = CameraLocationZ;
	params.CameraForwardDirectionX = CameraForwardDirectionX;
	params.CameraForwardDirectionY = CameraForwardDirectionY;
	params.CameraForwardDirectionZ = CameraForwardDirectionZ;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DamageShip
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Strength                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::DamageShip(float Strength)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DamageShip"));}

	UAthenaCheatManager_DamageShip_Params params;
	params.Strength = Strength;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DamagePlayerFromRemoteActor
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 ActorIdString                  (CPF_Parm, CPF_ZeroConstructor)
// float                          Strength                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          CameraLocationX                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          CameraLocationY                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          CameraLocationZ                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          CameraForwardDirectionX        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          CameraForwardDirectionY        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          CameraForwardDirectionZ        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::DamagePlayerFromRemoteActor(const struct FString& ActorIdString, float Strength, float CameraLocationX, float CameraLocationY, float CameraLocationZ, float CameraForwardDirectionX, float CameraForwardDirectionY, float CameraForwardDirectionZ)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DamagePlayerFromRemoteActor"));}

	UAthenaCheatManager_DamagePlayerFromRemoteActor_Params params;
	params.ActorIdString = ActorIdString;
	params.Strength = Strength;
	params.CameraLocationX = CameraLocationX;
	params.CameraLocationY = CameraLocationY;
	params.CameraLocationZ = CameraLocationZ;
	params.CameraForwardDirectionX = CameraForwardDirectionX;
	params.CameraForwardDirectionY = CameraForwardDirectionY;
	params.CameraForwardDirectionZ = CameraForwardDirectionZ;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.DamagePlayer
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Strength                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::DamagePlayer(float Strength)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.DamagePlayer"));}

	UAthenaCheatManager_DamagePlayer_Params params;
	params.Strength = Strength;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.CureAllAilings
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::CureAllAilings()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.CureAllAilings"));}

	UAthenaCheatManager_CureAllAilings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.CompleteVoyage
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::CompleteVoyage()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.CompleteVoyage"));}

	UAthenaCheatManager_CompleteVoyage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.CompleteActiveQuests
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::CompleteActiveQuests()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.CompleteActiveQuests"));}

	UAthenaCheatManager_CompleteActiveQuests_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.CloseSkeletonFortDoor
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::CloseSkeletonFortDoor()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.CloseSkeletonFortDoor"));}

	UAthenaCheatManager_CloseSkeletonFortDoor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ClearVoiceChatMeters
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::ClearVoiceChatMeters()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ClearVoiceChatMeters"));}

	UAthenaCheatManager_ClearVoiceChatMeters_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ClearSlowMotionOverride
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::ClearSlowMotionOverride()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ClearSlowMotionOverride"));}

	UAthenaCheatManager_ClearSlowMotionOverride_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ClearShipRestockingTimeouts
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::ClearShipRestockingTimeouts()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ClearShipRestockingTimeouts"));}

	UAthenaCheatManager_ClearShipRestockingTimeouts_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ClearGrogSecondary
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::ClearGrogSecondary()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ClearGrogSecondary"));}

	UAthenaCheatManager_ClearGrogSecondary_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ClearAllItemsInInventory
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::ClearAllItemsInInventory()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ClearAllItemsInInventory"));}

	UAthenaCheatManager_ClearAllItemsInInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.CheckLandmarkValidTreasureLocationsAtPlayerPos
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::CheckLandmarkValidTreasureLocationsAtPlayerPos()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.CheckLandmarkValidTreasureLocationsAtPlayerPos"));}

	UAthenaCheatManager_CheckLandmarkValidTreasureLocationsAtPlayerPos_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.CheckLandmarkRelativeToIslandCalculation
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::CheckLandmarkRelativeToIslandCalculation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.CheckLandmarkRelativeToIslandCalculation"));}

	UAthenaCheatManager_CheckLandmarkRelativeToIslandCalculation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.CancelVoyage
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::CancelVoyage()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.CancelVoyage"));}

	UAthenaCheatManager_CancelVoyage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.CancelAllCrewVoyages
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::CancelAllCrewVoyages()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.CancelAllCrewVoyages"));}

	UAthenaCheatManager_CancelAllCrewVoyages_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.BreakLeg
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::BreakLeg()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.BreakLeg"));}

	UAthenaCheatManager_BreakLeg_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ApplyVenomWithParams
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          InitialDamage                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          DamagePerSecond                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          DamageOverTimeDuration         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::ApplyVenomWithParams(float InitialDamage, float DamagePerSecond, float DamageOverTimeDuration)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ApplyVenomWithParams"));}

	UAthenaCheatManager_ApplyVenomWithParams_Params params;
	params.InitialDamage = InitialDamage;
	params.DamagePerSecond = DamagePerSecond;
	params.DamageOverTimeDuration = DamageOverTimeDuration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ApplyVenom
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UAthenaCheatManager::ApplyVenom()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ApplyVenom"));}

	UAthenaCheatManager_ApplyVenom_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ApplyDamageToAllDamageZones
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Damage                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::ApplyDamageToAllDamageZones(float Damage)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ApplyDamageToAllDamageZones"));}

	UAthenaCheatManager_ApplyDamageToAllDamageZones_Params params;
	params.Damage = Damage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.AddShipToCrew
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 ActorIdString                  (CPF_Parm, CPF_ZeroConstructor)
// struct FString                 CrewId                         (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::AddShipToCrew(const struct FString& ActorIdString, const struct FString& CrewId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.AddShipToCrew"));}

	UAthenaCheatManager_AddShipToCrew_Params params;
	params.ActorIdString = ActorIdString;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.AddPlayerToCrew
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 ActorIdString                  (CPF_Parm, CPF_ZeroConstructor)
// struct FString                 CrewId                         (CPF_Parm, CPF_ZeroConstructor)

void UAthenaCheatManager::AddPlayerToCrew(const struct FString& ActorIdString, const struct FString& CrewId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.AddPlayerToCrew"));}

	UAthenaCheatManager_AddPlayerToCrew_Params params;
	params.ActorIdString = ActorIdString;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.AddDrunkenness
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            DrunkennessType                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          DrunkennessChange              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaCheatManager::AddDrunkenness(int DrunkennessType, float DrunkennessChange)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.AddDrunkenness"));}

	UAthenaCheatManager_AddDrunkenness_Params params;
	params.DrunkennessType = DrunkennessType;
	params.DrunkennessChange = DrunkennessChange;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaCheatManager.ActivateSkellyFort
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 FortName                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm)

void UAthenaCheatManager::ActivateSkellyFort(const struct FString& FortName)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaCheatManager.ActivateSkellyFort"));}

	UAthenaCheatManager_ActivateSkellyFort_Params params;
	params.FortName = FortName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaGameInstance.SetClientOnboardingEnabled
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           Enabled                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaGameInstance::SetClientOnboardingEnabled(bool Enabled)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaGameInstance.SetClientOnboardingEnabled"));}

	UAthenaGameInstance_SetClientOnboardingEnabled_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaGameMode.SetStorageContainerRefreshInterval
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          InRefreshInterval              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AAthenaGameMode::SetStorageContainerRefreshInterval(float InRefreshInterval)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaGameMode.SetStorageContainerRefreshInterval"));}

	AAthenaGameMode_SetStorageContainerRefreshInterval_Params params;
	params.InRefreshInterval = InRefreshInterval;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaGameMode.SetRespawnTimer
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          InRespawnTimer                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AAthenaGameMode::SetRespawnTimer(float InRespawnTimer)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaGameMode.SetRespawnTimer"));}

	AAthenaGameMode_SetRespawnTimer_Params params;
	params.InRespawnTimer = InRespawnTimer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaGameMode.ResetStorageContainers
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaGameMode::ResetStorageContainers()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaGameMode.ResetStorageContainers"));}

	AAthenaGameMode_ResetStorageContainers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaGameMode.RequestDemoSessionReset
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaPlayerController* AthenaPlayerController         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           InStartNewSession              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AAthenaGameMode::RequestDemoSessionReset(class AAthenaPlayerController* AthenaPlayerController, bool InStartNewSession)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaGameMode.RequestDemoSessionReset"));}

	AAthenaGameMode_RequestDemoSessionReset_Params params;
	params.AthenaPlayerController = AthenaPlayerController;
	params.InStartNewSession = InStartNewSession;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaGameMode.IsPlayerOnGhostShip
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class APawn*                   PlayerPawn                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AAthenaGameMode::IsPlayerOnGhostShip(class APawn* PlayerPawn)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaGameMode.IsPlayerOnGhostShip"));}

	AAthenaGameMode_IsPlayerOnGhostShip_Params params;
	params.PlayerPawn = PlayerPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaPlayerCharacterTestFunctions.ForceShipRegion
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaPlayerCharacter*  AthenaPlayerCharacter          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EShipRegion>       ShipRegion                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaPlayerCharacterTestFunctions::ForceShipRegion(class AAthenaPlayerCharacter* AthenaPlayerCharacter, TEnumAsByte<EShipRegion> ShipRegion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacterTestFunctions.ForceShipRegion"));}

	UAthenaPlayerCharacterTestFunctions_ForceShipRegion_Params params;
	params.AthenaPlayerCharacter = AthenaPlayerCharacter;
	params.ShipRegion = ShipRegion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaPlayerCharacterTestFunctions.ForceReCalculateShipRegion
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaPlayerCharacter*  AthenaPlayerCharacter          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaPlayerCharacterTestFunctions::ForceReCalculateShipRegion(class AAthenaPlayerCharacter* AthenaPlayerCharacter)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerCharacterTestFunctions.ForceReCalculateShipRegion"));}

	UAthenaPlayerCharacterTestFunctions_ForceReCalculateShipRegion_Params params;
	params.AthenaPlayerCharacter = AthenaPlayerCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ControllableInterface.TakenControl
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Controller                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UControllableInterface::TakenControl(class AActor* Controller)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControllableInterface.TakenControl"));}

	UControllableInterface_TakenControl_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ControllableInterface.RequestStateChange
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Controller                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UControllableInterface::RequestStateChange(class AActor* Controller)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControllableInterface.RequestStateChange"));}

	UControllableInterface_RequestStateChange_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ControllableInterface.RequestRelinquishControl
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UControllableInterface::RequestRelinquishControl()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControllableInterface.RequestRelinquishControl"));}

	UControllableInterface_RequestRelinquishControl_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ControllableInterface.RelinquishedController
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Controller                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UControllableInterface::RelinquishedController(class AActor* Controller)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControllableInterface.RelinquishedController"));}

	UControllableInterface_RelinquishedController_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MountedWeaponInterface.GetYaw
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UMountedWeaponInterface::GetYaw()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MountedWeaponInterface.GetYaw"));}

	UMountedWeaponInterface_GetYaw_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.MountedWeaponInterface.GetPitch
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UMountedWeaponInterface::GetPitch()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MountedWeaponInterface.GetPitch"));}

	UMountedWeaponInterface_GetPitch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LaunchableProjectile.TrailSfxIsActive
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ALaunchableProjectile::TrailSfxIsActive()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LaunchableProjectile.TrailSfxIsActive"));}

	ALaunchableProjectile_TrailSfxIsActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LaunchableProjectile.TrailIsActive
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ALaunchableProjectile::TrailIsActive()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LaunchableProjectile.TrailIsActive"));}

	ALaunchableProjectile_TrailIsActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LaunchableProjectile.OnStop
// (FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FHitResult              Result                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void ALaunchableProjectile::OnStop(const struct FHitResult& Result)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LaunchableProjectile.OnStop"));}

	ALaunchableProjectile_OnStop_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LaunchableProjectile.OnReachedDeepWater
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ALaunchableProjectile::OnReachedDeepWater()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LaunchableProjectile.OnReachedDeepWater"));}

	ALaunchableProjectile_OnReachedDeepWater_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LaunchableProjectile.OnImpactEffects
// (FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FHitResult              Result                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void ALaunchableProjectile::OnImpactEffects(const struct FHitResult& Result)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LaunchableProjectile.OnImpactEffects"));}

	ALaunchableProjectile_OnImpactEffects_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LaunchableProjectile.OnImpact
// (FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FHitResult              Result                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void ALaunchableProjectile::OnImpact(const struct FHitResult& Result)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LaunchableProjectile.OnImpact"));}

	ALaunchableProjectile_OnImpact_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LaunchableProjectile.OnExitWater
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ALaunchableProjectile::OnExitWater()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LaunchableProjectile.OnExitWater"));}

	ALaunchableProjectile_OnExitWater_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LaunchableProjectile.OnEnterWater
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ALaunchableProjectile::OnEnterWater()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LaunchableProjectile.OnEnterWater"));}

	ALaunchableProjectile_OnEnterWater_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LaunchableProjectile.LaunchWithOffset
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVector                 LaunchVelocity                 (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// struct FVector                 SpawnLaunchOffset              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void ALaunchableProjectile::LaunchWithOffset(const struct FVector& LaunchVelocity, const struct FVector& SpawnLaunchOffset)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LaunchableProjectile.LaunchWithOffset"));}

	ALaunchableProjectile_LaunchWithOffset_Params params;
	params.LaunchVelocity = LaunchVelocity;
	params.SpawnLaunchOffset = SpawnLaunchOffset;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LaunchableProjectile.IsInWater
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ALaunchableProjectile::IsInWater()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LaunchableProjectile.IsInWater"));}

	ALaunchableProjectile_IsInWater_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ReplicatedShipPartCustomizationComponent.OnReplicate_PartDesc
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UReplicatedShipPartCustomizationComponent::OnReplicate_PartDesc()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ReplicatedShipPartCustomizationComponent.OnReplicate_PartDesc"));}

	UReplicatedShipPartCustomizationComponent_OnReplicate_PartDesc_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Cannon.Server_RequestAim
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          NewPitch                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          NewYaw                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ACannon::Server_RequestAim(float NewPitch, float NewYaw)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Cannon.Server_RequestAim"));}

	ACannon_Server_RequestAim_Params params;
	params.NewPitch = NewPitch;
	params.NewYaw = NewYaw;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Cannon.Server_Fire
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          InPitch                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          InYaw                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ACannon::Server_Fire(float InPitch, float InYaw)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Cannon.Server_Fire"));}

	ACannon_Server_Fire_Params params;
	params.InPitch = InPitch;
	params.InYaw = InYaw;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Cannon.OnRep_ServerYaw
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ACannon::OnRep_ServerYaw()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Cannon.OnRep_ServerYaw"));}

	ACannon_OnRep_ServerYaw_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Cannon.OnRep_ServerPitch
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ACannon::OnRep_ServerPitch()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Cannon.OnRep_ServerPitch"));}

	ACannon_OnRep_ServerPitch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Cannon.OnCannonDescLoaded
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UCannonDescAsset*        CannonDesc                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ACannon::OnCannonDescLoaded(class UCannonDescAsset* CannonDesc)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Cannon.OnCannonDescLoaded"));}

	ACannon_OnCannonDescLoaded_Params params;
	params.CannonDesc = CannonDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Cannon.Multicast_OnPlayerUnloaded
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  UnloadedPlayer                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ACannon::Multicast_OnPlayerUnloaded(class AActor* UnloadedPlayer)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Cannon.Multicast_OnPlayerUnloaded"));}

	ACannon_Multicast_OnPlayerUnloaded_Params params;
	params.UnloadedPlayer = UnloadedPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Cannon.Multicast_OnPlayerLoaded
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  LoadedPlayer                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ACannon::Multicast_OnPlayerLoaded(class AActor* LoadedPlayer)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Cannon.Multicast_OnPlayerLoaded"));}

	ACannon_Multicast_OnPlayerLoaded_Params params;
	params.LoadedPlayer = LoadedPlayer;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Cannon.Multicast_FireProjectile
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  InInstigator                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 AuthoritySpawnLocation         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// struct FVector                 LaunchVelocity                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void ACannon::Multicast_FireProjectile(class AActor* InInstigator, const struct FVector& AuthoritySpawnLocation, const struct FVector& LaunchVelocity)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Cannon.Multicast_FireProjectile"));}

	ACannon_Multicast_FireProjectile_Params params;
	params.InInstigator = InInstigator;
	params.AuthoritySpawnLocation = AuthoritySpawnLocation;
	params.LaunchVelocity = LaunchVelocity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Cannon.Multicast_FirePlayer
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  InInstigator                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           InstigatorWasControllingActor  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ACannon::Multicast_FirePlayer(class AActor* InInstigator, bool InstigatorWasControllingActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Cannon.Multicast_FirePlayer"));}

	ACannon_Multicast_FirePlayer_Params params;
	params.InInstigator = InInstigator;
	params.InstigatorWasControllingActor = InstigatorWasControllingActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Cannon.IsReadyToFire
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ACannon::IsReadyToFire()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Cannon.IsReadyToFire"));}

	ACannon_IsReadyToFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Cannon.HandleYawInput
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          YawInput                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ACannon::HandleYawInput(float YawInput)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Cannon.HandleYawInput"));}

	ACannon_HandleYawInput_Params params;
	params.YawInput = YawInput;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Cannon.HandlePitchInput
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          PitchInput                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ACannon::HandlePitchInput(float PitchInput)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Cannon.HandlePitchInput"));}

	ACannon_HandlePitchInput_Params params;
	params.PitchInput = PitchInput;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Cannon.GetNormalisedYawRate
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ACannon::GetNormalisedYawRate()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Cannon.GetNormalisedYawRate"));}

	ACannon_GetNormalisedYawRate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Cannon.GetNormalisedPitchRate
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ACannon::GetNormalisedPitchRate()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Cannon.GetNormalisedPitchRate"));}

	ACannon_GetNormalisedPitchRate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Cannon.ForceAimCannon
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Pitch                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Yaw                            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ACannon::ForceAimCannon(float Pitch, float Yaw)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Cannon.ForceAimCannon"));}

	ACannon_ForceAimCannon_Params params;
	params.Pitch = Pitch;
	params.Yaw = Yaw;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Cannon.Fire
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ACannon::Fire()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Cannon.Fire"));}

	ACannon_Fire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaPlayerController.Server_ReportPlayerDelta
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVector                 InVector                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void AAthenaPlayerController::Server_ReportPlayerDelta(const struct FVector& InVector)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerController.Server_ReportPlayerDelta"));}

	AAthenaPlayerController_Server_ReportPlayerDelta_Params params;
	params.InVector = InVector;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaPlayerController.Server_ExecuteCommand
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 Command                        (CPF_Parm, CPF_ZeroConstructor)

void AAthenaPlayerController::Server_ExecuteCommand(const struct FString& Command)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerController.Server_ExecuteCommand"));}

	AAthenaPlayerController_Server_ExecuteCommand_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaPlayerController.GetPlayerStreamingReferenceLocation
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Private, FUNC_Protected)
// Parameters:
// struct FVector                 Location                       (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AAthenaPlayerController::GetPlayerStreamingReferenceLocation(struct FVector* Location)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerController.GetPlayerStreamingReferenceLocation"));}

	AAthenaPlayerController_GetPlayerStreamingReferenceLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Location != nullptr)
		*Location = params.Location;

	return params.ReturnValue;
}


// Function Athena.AthenaPlayerController.GetAthenaCheatManager
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAthenaCheatManager*     ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAthenaCheatManager* AAthenaPlayerController::GetAthenaCheatManager()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerController.GetAthenaCheatManager"));}

	AAthenaPlayerController_GetAthenaCheatManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaPlayerController.EOS
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 Command                        (CPF_Parm, CPF_ZeroConstructor)

void AAthenaPlayerController::EOS(const struct FString& Command)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerController.EOS"));}

	AAthenaPlayerController_EOS_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaPlayerController.AddYawRotationInput
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Input                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<ELookAtRotationType> RotationType                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AAthenaPlayerController::AddYawRotationInput(float Input, TEnumAsByte<ELookAtRotationType> RotationType)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerController.AddYawRotationInput"));}

	AAthenaPlayerController_AddYawRotationInput_Params params;
	params.Input = Input;
	params.RotationType = RotationType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaPlayerController.AddPitchRotationInput
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Input                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<ELookAtRotationType> RotationType                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AAthenaPlayerController::AddPitchRotationInput(float Input, TEnumAsByte<ELookAtRotationType> RotationType)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerController.AddPitchRotationInput"));}

	AAthenaPlayerController_AddPitchRotationInput_Params params;
	params.Input = Input;
	params.RotationType = RotationType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.OnlineAthenaPlayerController.ModifyActiveState
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           IsActive                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AOnlineAthenaPlayerController::ModifyActiveState(bool IsActive)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.OnlineAthenaPlayerController.ModifyActiveState"));}

	AOnlineAthenaPlayerController_ModifyActiveState_Params params;
	params.IsActive = IsActive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestAthenaPlayerController.TestConsoleExecutableFunction
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ATestAthenaPlayerController::TestConsoleExecutableFunction()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestAthenaPlayerController.TestConsoleExecutableFunction"));}

	ATestAthenaPlayerController_TestConsoleExecutableFunction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestAthenaPlayerController.GrantDebugMenuPermissions
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           AllowAccess                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ATestAthenaPlayerController::GrantDebugMenuPermissions(bool AllowAccess)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestAthenaPlayerController.GrantDebugMenuPermissions"));}

	ATestAthenaPlayerController_GrantDebugMenuPermissions_Params params;
	params.AllowAccess = AllowAccess;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestAthenaPlayerController.FakeInput
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FKey                    Key                            (CPF_Parm)

void ATestAthenaPlayerController::FakeInput(const struct FKey& Key)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestAthenaPlayerController.FakeInput"));}

	ATestAthenaPlayerController_FakeInput_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestAthenaPlayerController.FakeAxisInput
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FKey                    Key                            (CPF_Parm)
// float                          Delta                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          DeltaTime                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ATestAthenaPlayerController::FakeAxisInput(const struct FKey& Key, float Delta, float DeltaTime)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestAthenaPlayerController.FakeAxisInput"));}

	ATestAthenaPlayerController_FakeAxisInput_Params params;
	params.Key = Key;
	params.Delta = Delta;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestPlayerRelevancyAthenaPlayerController.QueryRelevancyService
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Timeout                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ATestPlayerRelevancyAthenaPlayerController::QueryRelevancyService(float Timeout)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestPlayerRelevancyAthenaPlayerController.QueryRelevancyService"));}

	ATestPlayerRelevancyAthenaPlayerController_QueryRelevancyService_Params params;
	params.Timeout = Timeout;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaPlayerControllerTestFunctions.TestAthenaPlayerControllerDisableNormalInputHandling
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaPlayerController* AthenaPlayerController         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaPlayerControllerTestFunctions::TestAthenaPlayerControllerDisableNormalInputHandling(class AAthenaPlayerController* AthenaPlayerController)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerControllerTestFunctions.TestAthenaPlayerControllerDisableNormalInputHandling"));}

	UAthenaPlayerControllerTestFunctions_TestAthenaPlayerControllerDisableNormalInputHandling_Params params;
	params.AthenaPlayerController = AthenaPlayerController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaPlayerControllerTestFunctions.AddEntitlementDescToInventory
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaPlayerController* Controller                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  EntitlementDesc                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAthenaPlayerControllerTestFunctions::AddEntitlementDescToInventory(class AAthenaPlayerController* Controller, class UClass* EntitlementDesc)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerControllerTestFunctions.AddEntitlementDescToInventory"));}

	UAthenaPlayerControllerTestFunctions_AddEntitlementDescToInventory_Params params;
	params.Controller = Controller;
	params.EntitlementDesc = EntitlementDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaPlayerState.OnRep_PirateDescription
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaPlayerState::OnRep_PirateDescription()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaPlayerState.OnRep_PirateDescription"));}

	AAthenaPlayerState_OnRep_PirateDescription_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestAthenaPlayerState.SetUniquePlayerID
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 InUniquePlayerId               (CPF_Parm, CPF_ZeroConstructor)

void ATestAthenaPlayerState::SetUniquePlayerID(const struct FString& InUniquePlayerId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestAthenaPlayerState.SetUniquePlayerID"));}

	ATestAthenaPlayerState_SetUniquePlayerID_Params params;
	params.InUniquePlayerId = InUniquePlayerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaTextRender.OnTextCanvasUpdate
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UCanvas*                 Canvas                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Width                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Height                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AAthenaTextRender::OnTextCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaTextRender.OnTextCanvasUpdate"));}

	AAthenaTextRender_OnTextCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AtmosphericPressureZoneInterface.GetPressureZoneParameters
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic)
// Parameters:
// struct FAtmosphericPressureZoneParametersAndLocation ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FAtmosphericPressureZoneParametersAndLocation UAtmosphericPressureZoneInterface::GetPressureZoneParameters()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AtmosphericPressureZoneInterface.GetPressureZoneParameters"));}

	UAtmosphericPressureZoneInterface_GetPressureZoneParameters_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AtmosphericPressureServiceInterface.UnregisterAtmosphericPressureZoneFromService
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TScriptInterface<class UAtmosphericPressureZoneInterface> PressureZone                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAtmosphericPressureServiceInterface::UnregisterAtmosphericPressureZoneFromService(const TScriptInterface<class UAtmosphericPressureZoneInterface>& PressureZone)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AtmosphericPressureServiceInterface.UnregisterAtmosphericPressureZoneFromService"));}

	UAtmosphericPressureServiceInterface_UnregisterAtmosphericPressureZoneFromService_Params params;
	params.PressureZone = PressureZone;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AtmosphericPressureServiceInterface.RegisterAtmosphericPressureZoneWithService
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TScriptInterface<class UAtmosphericPressureZoneInterface> PressureZone                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAtmosphericPressureServiceInterface::RegisterAtmosphericPressureZoneWithService(const TScriptInterface<class UAtmosphericPressureZoneInterface>& PressureZone)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AtmosphericPressureServiceInterface.RegisterAtmosphericPressureZoneWithService"));}

	UAtmosphericPressureServiceInterface_RegisterAtmosphericPressureZoneWithService_Params params;
	params.PressureZone = PressureZone;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AtmosphericPressureServiceInterface.GetNumberOfAtmosphericPressureZones
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UAtmosphericPressureServiceInterface::GetNumberOfAtmosphericPressureZones()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AtmosphericPressureServiceInterface.GetNumberOfAtmosphericPressureZones"));}

	UAtmosphericPressureServiceInterface_GetNumberOfAtmosphericPressureZones_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AtmosphericPressureServiceInterface.GetAtmosphericPressureZone
// (FUNC_Private)
// Parameters:
// int                            PressureZoneIndex              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FAtmosphericPressureZoneParametersAndLocation ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FAtmosphericPressureZoneParametersAndLocation UAtmosphericPressureServiceInterface::GetAtmosphericPressureZone(int PressureZoneIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AtmosphericPressureServiceInterface.GetAtmosphericPressureZone"));}

	UAtmosphericPressureServiceInterface_GetAtmosphericPressureZone_Params params;
	params.PressureZoneIndex = PressureZoneIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AtmosphericPressureServiceInterface.GetAllAtmosphericPressureZones
// ()
// Parameters:
// TArray<struct FAtmosphericPressureZoneParametersAndLocation> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<struct FAtmosphericPressureZoneParametersAndLocation> UAtmosphericPressureServiceInterface::GetAllAtmosphericPressureZones()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AtmosphericPressureServiceInterface.GetAllAtmosphericPressureZones"));}

	UAtmosphericPressureServiceInterface_GetAllAtmosphericPressureZones_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AudioEmitterInterface.GetAudioEmitter
// (FUNC_BlueprintCosmetic)
// Parameters:
// struct FWwiseEmitter           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FWwiseEmitter UAudioEmitterInterface::GetAudioEmitter()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AudioEmitterInterface.GetAudioEmitter"));}

	UAudioEmitterInterface_GetAudioEmitter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AudioEmitterPoolSourceInterface.GetAudioEmitterPool
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UWwiseObjectPoolWrapper* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UWwiseObjectPoolWrapper* UAudioEmitterPoolSourceInterface::GetAudioEmitterPool()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AudioEmitterPoolSourceInterface.GetAudioEmitterPool"));}

	UAudioEmitterPoolSourceInterface_GetAudioEmitterPool_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AudioUtilities.UpdateCharacterWadingRtpc
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaCharacter*        AthenaCharacter                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<struct FWwiseEmitter>   Emitters                       (CPF_Parm, CPF_ZeroConstructor)
// struct FName                   WadingRtpcName                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FName                   SquelchRtpcName                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          MinRtpcValue                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          MaxRtpcValue                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAudioUtilities::UpdateCharacterWadingRtpc(class AAthenaCharacter* AthenaCharacter, TArray<struct FWwiseEmitter> Emitters, const struct FName& WadingRtpcName, const struct FName& SquelchRtpcName, float MinRtpcValue, float MaxRtpcValue)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AudioUtilities.UpdateCharacterWadingRtpc"));}

	UAudioUtilities_UpdateCharacterWadingRtpc_Params params;
	params.AthenaCharacter = AthenaCharacter;
	params.Emitters = Emitters;
	params.WadingRtpcName = WadingRtpcName;
	params.SquelchRtpcName = SquelchRtpcName;
	params.MinRtpcValue = MinRtpcValue;
	params.MaxRtpcValue = MaxRtpcValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AudioUtilities.PlayFootstepSound
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AAthenaCharacter*        AthenaCharacter                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FWwiseEmitter           Emitter                        (CPF_Parm)
// struct FVector                 Location                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UWwiseEvent*             Cue                            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EPhysicalSurface>  SurfaceType                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FName                   CharacterSpeedRtpc             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          MinRtpcValue                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          MaxRtpcValue                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<ECharacterFootImpactType> FootImpactType                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAudioUtilities::PlayFootstepSound(class UObject* WorldContextObject, class AAthenaCharacter* AthenaCharacter, const struct FWwiseEmitter& Emitter, const struct FVector& Location, class UWwiseEvent* Cue, TEnumAsByte<EPhysicalSurface> SurfaceType, const struct FName& CharacterSpeedRtpc, float MinRtpcValue, float MaxRtpcValue, TEnumAsByte<ECharacterFootImpactType> FootImpactType)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AudioUtilities.PlayFootstepSound"));}

	UAudioUtilities_PlayFootstepSound_Params params;
	params.WorldContextObject = WorldContextObject;
	params.AthenaCharacter = AthenaCharacter;
	params.Emitter = Emitter;
	params.Location = Location;
	params.Cue = Cue;
	params.SurfaceType = SurfaceType;
	params.CharacterSpeedRtpc = CharacterSpeedRtpc;
	params.MinRtpcValue = MinRtpcValue;
	params.MaxRtpcValue = MaxRtpcValue;
	params.FootImpactType = FootImpactType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AudioUtilities.FilterLocalPlayerFootStepSounds
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<ECharacterFootImpactType> FootImpactType                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UAudioUtilities::FilterLocalPlayerFootStepSounds(TEnumAsByte<ECharacterFootImpactType> FootImpactType)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AudioUtilities.FilterLocalPlayerFootStepSounds"));}

	UAudioUtilities_FilterLocalPlayerFootStepSounds_Params params;
	params.FootImpactType = FootImpactType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BakedDecalComponent.GetTargetTexture
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UTexture*                ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UTexture* UBakedDecalComponent::GetTargetTexture()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BakedDecalComponent.GetTargetTexture"));}

	UBakedDecalComponent_GetTargetTexture_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.BakedDecalComponent.FinishInitialisation
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UBakedDecalComponent::FinishInitialisation(class UObject* WorldContextObject)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BakedDecalComponent.FinishInitialisation"));}

	UBakedDecalComponent_FinishInitialisation_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BakedDecalComponent.FilterEdges
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UBakedDecalComponent::FilterEdges()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BakedDecalComponent.FilterEdges"));}

	UBakedDecalComponent_FilterEdges_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BakedDecalComponent.DrawDecal
// (FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 Position                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 Normal                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Radius                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          NearDistance                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          FarDistance                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          CullDistance                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UTexture2D*              DecalTexture                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EBlendMode>        BlendMode                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            LODIndex                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UBakedDecalComponent::DrawDecal(class UObject* WorldContextObject, const struct FVector& Position, const struct FVector& Normal, float Radius, float NearDistance, float FarDistance, float CullDistance, class UTexture2D* DecalTexture, TEnumAsByte<EBlendMode> BlendMode, int LODIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BakedDecalComponent.DrawDecal"));}

	UBakedDecalComponent_DrawDecal_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Position = Position;
	params.Normal = Normal;
	params.Radius = Radius;
	params.NearDistance = NearDistance;
	params.FarDistance = FarDistance;
	params.CullDistance = CullDistance;
	params.DecalTexture = DecalTexture;
	params.BlendMode = BlendMode;
	params.LODIndex = LODIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BakedDecalComponent.CopyToTargetTexture
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UTexture*                SourceTexture                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UBakedDecalComponent::CopyToTargetTexture(class UObject* WorldContextObject, class UTexture* SourceTexture)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BakedDecalComponent.CopyToTargetTexture"));}

	UBakedDecalComponent_CopyToTargetTexture_Params params;
	params.WorldContextObject = WorldContextObject;
	params.SourceTexture = SourceTexture;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BakedDecalComponent.ClearTargetTexture
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FLinearColor            ClearColor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UBakedDecalComponent::ClearTargetTexture(const struct FLinearColor& ClearColor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BakedDecalComponent.ClearTargetTexture"));}

	UBakedDecalComponent_ClearTargetTexture_Params params;
	params.ClearColor = ClearColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BakedDecalComponent.AddMesh
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UStaticMeshComponent*    Mesh                           (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)

void UBakedDecalComponent::AddMesh(class UStaticMeshComponent* Mesh)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BakedDecalComponent.AddMesh"));}

	UBakedDecalComponent_AddMesh_Params params;
	params.Mesh = Mesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BodyLightControllerComponent.GetTargetLight
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAmbientLightSourceComponent* ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData)

class UAmbientLightSourceComponent* UBodyLightControllerComponent::GetTargetLight()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BodyLightControllerComponent.GetTargetLight"));}

	UBodyLightControllerComponent_GetTargetLight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.BodyLightControllerComponent.AssignTargetLight
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UAmbientLightSourceComponent* InTargetLight                  (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)

void UBodyLightControllerComponent::AssignTargetLight(class UAmbientLightSourceComponent* InTargetLight)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BodyLightControllerComponent.AssignTargetLight"));}

	UBodyLightControllerComponent_AssignTargetLight_Params params;
	params.InTargetLight = InTargetLight;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BoxedRpcDispatcherComponent.Server_SendRpc
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FSerialisedRpc          Event                          (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm)

void UBoxedRpcDispatcherComponent::Server_SendRpc(const struct FSerialisedRpc& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BoxedRpcDispatcherComponent.Server_SendRpc"));}

	UBoxedRpcDispatcherComponent_Server_SendRpc_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BoxedRpcDispatcherComponent.Client_SendRpc
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FSerialisedRpc          Event                          (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm)

void UBoxedRpcDispatcherComponent::Client_SendRpc(const struct FSerialisedRpc& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BoxedRpcDispatcherComponent.Client_SendRpc"));}

	UBoxedRpcDispatcherComponent_Client_SendRpc_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BTService_DetermineRecoveryMethod.OnDamageTaken
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FImpactDamageEvent      Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UBTService_DetermineRecoveryMethod::OnDamageTaken(const struct FImpactDamageEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BTService_DetermineRecoveryMethod.OnDamageTaken"));}

	UBTService_DetermineRecoveryMethod_OnDamageTaken_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BTService_ObserveTargetMeleeAttacks.OnTargetActorDestroyed
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  TargetActor                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UBTService_ObserveTargetMeleeAttacks::OnTargetActorDestroyed(class AActor* TargetActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BTService_ObserveTargetMeleeAttacks.OnTargetActorDestroyed"));}

	UBTService_ObserveTargetMeleeAttacks_OnTargetActorDestroyed_Params params;
	params.TargetActor = TargetActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BuoyancyComponent.Sink
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UBuoyancyComponent::Sink()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BuoyancyComponent.Sink"));}

	UBuoyancyComponent_Sink_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BuoyancyComponent.ShouldBeStationary
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UBuoyancyComponent::ShouldBeStationary()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BuoyancyComponent.ShouldBeStationary"));}

	UBuoyancyComponent_ShouldBeStationary_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.BuoyancyComponent.SetEnabled
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           InEnabled                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UBuoyancyComponent::SetEnabled(bool InEnabled)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BuoyancyComponent.SetEnabled"));}

	UBuoyancyComponent_SetEnabled_Params params;
	params.InEnabled = InEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BuoyancyComponent.OnRigidBodyWake
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FName                   InBoneName                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UBuoyancyComponent::OnRigidBodyWake(const struct FName& InBoneName)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BuoyancyComponent.OnRigidBodyWake"));}

	UBuoyancyComponent_OnRigidBodyWake_Params params;
	params.InBoneName = InBoneName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BuoyancyComponent.OnRigidBodySleep
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FName                   InBoneName                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UBuoyancyComponent::OnRigidBodySleep(const struct FName& InBoneName)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BuoyancyComponent.OnRigidBodySleep"));}

	UBuoyancyComponent_OnRigidBodySleep_Params params;
	params.InBoneName = InBoneName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BuoyancyComponent.OnRep_State
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UBuoyancyComponent::OnRep_State()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BuoyancyComponent.OnRep_State"));}

	UBuoyancyComponent_OnRep_State_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BuoyancyComponent.IsStationary
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UBuoyancyComponent::IsStationary()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BuoyancyComponent.IsStationary"));}

	UBuoyancyComponent_IsStationary_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.BuoyancyComponent.IsSinking
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UBuoyancyComponent::IsSinking()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BuoyancyComponent.IsSinking"));}

	UBuoyancyComponent_IsSinking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.BuoyancyComponent.IsEnabled
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UBuoyancyComponent::IsEnabled()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BuoyancyComponent.IsEnabled"));}

	UBuoyancyComponent_IsEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InteractableObject.Blueprint_OnInteract_Server
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  InInteractor                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AInteractableObject::Blueprint_OnInteract_Server(class AActor* InInteractor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InteractableObject.Blueprint_OnInteract_Server"));}

	AInteractableObject_Blueprint_OnInteract_Server_Params params;
	params.InInteractor = InInteractor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InteractableObject.Blueprint_OnInteract_Client
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  InInteractor                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AInteractableObject::Blueprint_OnInteract_Client(class AActor* InInteractor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InteractableObject.Blueprint_OnInteract_Client"));}

	AInteractableObject_Blueprint_OnInteract_Client_Params params;
	params.InInteractor = InInteractor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ReplenishableInterface.Replenish
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UReplenishableInterface::Replenish()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ReplenishableInterface.Replenish"));}

	UReplenishableInterface_Replenish_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ReplenishableInterface.IsAtMaxCapacity
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UReplenishableInterface::IsAtMaxCapacity()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ReplenishableInterface.IsAtMaxCapacity"));}

	UReplenishableInterface_IsAtMaxCapacity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ReplenishableInterface.Deplete
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UReplenishableInterface::Deplete()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ReplenishableInterface.Deplete"));}

	UReplenishableInterface_Deplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ReplenishableInterface.CanBeReplenished
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UReplenishableInterface::CanBeReplenished()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ReplenishableInterface.CanBeReplenished"));}

	UReplenishableInterface_CanBeReplenished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ReplenishableInterface.AddDefaultStockLevel
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UReplenishableInterface::AddDefaultStockLevel()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ReplenishableInterface.AddDefaultStockLevel"));}

	UReplenishableInterface_AddDefaultStockLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.StorageContainer.TestReplenish
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AStorageContainer::TestReplenish()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.StorageContainer.TestReplenish"));}

	AStorageContainer_TestReplenish_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.StorageContainer.TakeItem
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Player                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AStorageContainer::TakeItem(class AActor* Player)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.StorageContainer.TakeItem"));}

	AStorageContainer_TakeItem_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.StorageContainer.Replenish
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AStorageContainer::Replenish()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.StorageContainer.Replenish"));}

	AStorageContainer_Replenish_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.StorageContainer.IsAtMaxCapacity
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AStorageContainer::IsAtMaxCapacity()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.StorageContainer.IsAtMaxCapacity"));}

	AStorageContainer_IsAtMaxCapacity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.StorageContainer.GetSubjectId
// ()
// Parameters:
// struct FString                 ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

struct FString AStorageContainer::GetSubjectId()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.StorageContainer.GetSubjectId"));}

	AStorageContainer_GetSubjectId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.StorageContainer.GetMaxCapacity
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int AStorageContainer::GetMaxCapacity()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.StorageContainer.GetMaxCapacity"));}

	AStorageContainer_GetMaxCapacity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.StorageContainer.GetItemCount
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int AStorageContainer::GetItemCount()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.StorageContainer.GetItemCount"));}

	AStorageContainer_GetItemCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.StorageContainer.GetDefaultItemDesc
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UClass*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UClass* AStorageContainer::GetDefaultItemDesc()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.StorageContainer.GetDefaultItemDesc"));}

	AStorageContainer_GetDefaultItemDesc_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.StorageContainer.Deplete
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AStorageContainer::Deplete()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.StorageContainer.Deplete"));}

	AStorageContainer_Deplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.StorageContainer.CanBeReplenished
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AStorageContainer::CanBeReplenished()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.StorageContainer.CanBeReplenished"));}

	AStorageContainer_CanBeReplenished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.StorageContainer.AddItem
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Player                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AStorageContainer::AddItem(class AActor* Player)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.StorageContainer.AddItem"));}

	AStorageContainer_AddItem_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.StorageContainer.AddDefaultStockLevel
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AStorageContainer::AddDefaultStockLevel()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.StorageContainer.AddDefaultStockLevel"));}

	AStorageContainer_AddDefaultStockLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BurpComponent.Multicast_Burp
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          DurationRTPC                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          TypeRTPC                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UBurpComponent::Multicast_Burp(float DurationRTPC, float TypeRTPC)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BurpComponent.Multicast_Burp"));}

	UBurpComponent_Multicast_Burp_Params params;
	params.DurationRTPC = DurationRTPC;
	params.TypeRTPC = TypeRTPC;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BurpComponent.GetCurrentGasAmount
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UBurpComponent::GetCurrentGasAmount()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BurpComponent.GetCurrentGasAmount"));}

	UBurpComponent_GetCurrentGasAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.BurpTestActor.WieldItemByActor
// (FUNC_RequiredAPI, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Protected)
// Parameters:
// class AActor*                  Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           UnwieldFast                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EWieldItemReturnCode> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EWieldItemReturnCode> ABurpTestActor::WieldItemByActor(class AActor* Item, bool UnwieldFast)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BurpTestActor.WieldItemByActor"));}

	ABurpTestActor_WieldItemByActor_Params params;
	params.Item = Item;
	params.UnwieldFast = UnwieldFast;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.BurpTestActor.ToggleWieldItem
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ABurpTestActor::ToggleWieldItem()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BurpTestActor.ToggleWieldItem"));}

	ABurpTestActor_ToggleWieldItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BurpTestActor.RemoveItem
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AItemInfo*               Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ABurpTestActor::RemoveItem(class AItemInfo* Item)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BurpTestActor.RemoveItem"));}

	ABurpTestActor_RemoveItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.BurpTestActor.QuickSelectItemOfType
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EItemType>         ItemType                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            TypedItemIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ABurpTestActor::QuickSelectItemOfType(TEnumAsByte<EItemType> ItemType, int TypedItemIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BurpTestActor.QuickSelectItemOfType"));}

	ABurpTestActor_QuickSelectItemOfType_Params params;
	params.ItemType = ItemType;
	params.TypedItemIndex = TypedItemIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BurpTestActor.QuickSelectItemOfCategory
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  Category                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            IndexIntoCategory              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ABurpTestActor::QuickSelectItemOfCategory(class UClass* Category, int IndexIntoCategory)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BurpTestActor.QuickSelectItemOfCategory"));}

	ABurpTestActor_QuickSelectItemOfCategory_Params params;
	params.Category = Category;
	params.IndexIntoCategory = IndexIntoCategory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BurpTestActor.QuickSelectItem
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            ItemIndex                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ABurpTestActor::QuickSelectItem(int ItemIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BurpTestActor.QuickSelectItem"));}

	ABurpTestActor_QuickSelectItem_Params params;
	params.ItemIndex = ItemIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BurpTestActor.PickUpItem
// (FUNC_RequiredAPI, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Protected)
// Parameters:
// class AItemInfo*               Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           AndWield                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ABurpTestActor::PickUpItem(class AItemInfo* Item, bool AndWield)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BurpTestActor.PickUpItem"));}

	ABurpTestActor_PickUpItem_Params params;
	params.Item = Item;
	params.AndWield = AndWield;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.BurpTestActor.GetNumberOfItemsOfItemCategory
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  ItemSlot                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int ABurpTestActor::GetNumberOfItemsOfItemCategory(class UClass* ItemSlot)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BurpTestActor.GetNumberOfItemsOfItemCategory"));}

	ABurpTestActor_GetNumberOfItemsOfItemCategory_Params params;
	params.ItemSlot = ItemSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.BurpTestActor.GetCurrentItemIndex
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int ABurpTestActor::GetCurrentItemIndex()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BurpTestActor.GetCurrentItemIndex"));}

	ABurpTestActor_GetCurrentItemIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.BurpTestActor.CycleItemUp
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ABurpTestActor::CycleItemUp()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BurpTestActor.CycleItemUp"));}

	ABurpTestActor_CycleItemUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BurpTestActor.CycleItemType
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EItemType>         ItemType                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ABurpTestActor::CycleItemType(TEnumAsByte<EItemType> ItemType)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BurpTestActor.CycleItemType"));}

	ABurpTestActor_CycleItemType_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BurpTestActor.CycleItemDown
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ABurpTestActor::CycleItemDown()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BurpTestActor.CycleItemDown"));}

	ABurpTestActor_CycleItemDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BurpTestActor.CycleItemCategory
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  Category                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ABurpTestActor::CycleItemCategory(class UClass* Category)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BurpTestActor.CycleItemCategory"));}

	ABurpTestActor_CycleItemCategory_Params params;
	params.Category = Category;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BurpTestActor.ConsumeItem
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AItemInfo*               Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ABurpTestActor::ConsumeItem(class AItemInfo* Item)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BurpTestActor.ConsumeItem"));}

	ABurpTestActor_ConsumeItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.BurpTestActor.CanAddItemOfItemCategory
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  ItemSlot                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<ECanAddItemQueryResult> ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<ECanAddItemQueryResult> ABurpTestActor::CanAddItemOfItemCategory(class UClass* ItemSlot)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BurpTestActor.CanAddItemOfItemCategory"));}

	ABurpTestActor_CanAddItemOfItemCategory_Params params;
	params.ItemSlot = ItemSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.BurpTestActor.AddItem
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AItemInfo*               Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ABurpTestActor::AddItem(class AItemInfo* Item)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BurpTestActor.AddItem"));}

	ABurpTestActor_AddItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CameraFadeManagerTestFunctions.IsFadeComplete
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class APlayerController*       TargetController               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCameraFadeManagerTestFunctions::IsFadeComplete(class APlayerController* TargetController)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CameraFadeManagerTestFunctions.IsFadeComplete"));}

	UCameraFadeManagerTestFunctions_IsFadeComplete_Params params;
	params.TargetController = TargetController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CameraFadeManagerTestFunctions.IsFadeActive
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class APlayerController*       TargetController               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCameraFadeManagerTestFunctions::IsFadeActive(class APlayerController* TargetController)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CameraFadeManagerTestFunctions.IsFadeActive"));}

	UCameraFadeManagerTestFunctions_IsFadeActive_Params params;
	params.TargetController = TargetController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CameraFadeManagerTestFunctions.FireFadeAckRequestToClient
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaPlayerController* TargetController               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          AckTimeout                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCameraFadeManagerTestFunctions::FireFadeAckRequestToClient(class AAthenaPlayerController* TargetController, float AckTimeout)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CameraFadeManagerTestFunctions.FireFadeAckRequestToClient"));}

	UCameraFadeManagerTestFunctions_FireFadeAckRequestToClient_Params params;
	params.TargetController = TargetController;
	params.AckTimeout = AckTimeout;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CannonAnimInterface.SetCannonFiring
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           CannonFiring                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCannonAnimInterface::SetCannonFiring(bool CannonFiring)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CannonAnimInterface.SetCannonFiring"));}

	UCannonAnimInterface_SetCannonFiring_Params params;
	params.CannonFiring = CannonFiring;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CannonAnimInterface.GetCannonFiring
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCannonAnimInterface::GetCannonFiring()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CannonAnimInterface.GetCannonFiring"));}

	UCannonAnimInterface_GetCannonFiring_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CannonAnimInstance.GetCannonFiring
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCannonAnimInstance::GetCannonFiring()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CannonAnimInstance.GetCannonFiring"));}

	UCannonAnimInstance_GetCannonFiring_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.IterativeCanvasRenderTarget2D.ReceiveUpdate
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UCanvas*                 Canvas                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Width                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Height                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UIterativeCanvasRenderTarget2D::ReceiveUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.IterativeCanvasRenderTarget2D.ReceiveUpdate"));}

	UIterativeCanvasRenderTarget2D_ReceiveUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.IterativeCanvasRenderTarget2D.GetSize
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            Width                          (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Height                         (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UIterativeCanvasRenderTarget2D::GetSize(int* Width, int* Height)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.IterativeCanvasRenderTarget2D.GetSize"));}

	UIterativeCanvasRenderTarget2D_GetSize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Width != nullptr)
		*Width = params.Width;
	if (Height != nullptr)
		*Height = params.Height;
}


// Function Athena.IterativeCanvasRenderTarget2D.Create
// (FUNC_Protected, FUNC_NetServer)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  CanvasRenderTarget2DClass      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Width                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Height                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FLinearColor            InClearColor                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UIterativeCanvasRenderTarget2D* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UIterativeCanvasRenderTarget2D* UIterativeCanvasRenderTarget2D::Create(class UObject* WorldContextObject, class UClass* CanvasRenderTarget2DClass, int Width, int Height, const struct FLinearColor& InClearColor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.IterativeCanvasRenderTarget2D.Create"));}

	UIterativeCanvasRenderTarget2D_Create_Params params;
	params.WorldContextObject = WorldContextObject;
	params.CanvasRenderTarget2DClass = CanvasRenderTarget2DClass;
	params.Width = Width;
	params.Height = Height;
	params.InClearColor = InClearColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CanvasWorldMapComponent.OnCanvasUpdate
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UCanvas*                 Canvas                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Width                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Height                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCanvasWorldMapComponent::OnCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CanvasWorldMapComponent.OnCanvasUpdate"));}

	UCanvasWorldMapComponent_OnCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CapstanInterface.IsLocked
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCapstanInterface::IsLocked()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CapstanInterface.IsLocked"));}

	UCapstanInterface_IsLocked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CapstanInterface.GetCapstanState
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UCapstanInterface::GetCapstanState()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CapstanInterface.GetCapstanState"));}

	UCapstanInterface_GetCapstanState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CapstanInterface.GetCapstanRatioVelocity
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UCapstanInterface::GetCapstanRatioVelocity()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CapstanInterface.GetCapstanRatioVelocity"));}

	UCapstanInterface_GetCapstanRatioVelocity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CapstanInterface.GetCapstanNumCurrentUsers
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UCapstanInterface::GetCapstanNumCurrentUsers()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CapstanInterface.GetCapstanNumCurrentUsers"));}

	UCapstanInterface_GetCapstanNumCurrentUsers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CapstanInterface.GetCapstanMaxRatioVelocity
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UCapstanInterface::GetCapstanMaxRatioVelocity()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CapstanInterface.GetCapstanMaxRatioVelocity"));}

	UCapstanInterface_GetCapstanMaxRatioVelocity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Capstan.OnCapstanDescLoaded
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UCapstanDescAsset*       CapstanDesc                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ACapstan::OnCapstanDescLoaded(class UCapstanDescAsset* CapstanDesc)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Capstan.OnCapstanDescLoaded"));}

	ACapstan_OnCapstanDescLoaded_Params params;
	params.CapstanDesc = CapstanDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Capstan.GetCapstanReleaseActor
// (FUNC_BlueprintCosmetic)
// Parameters:
// class ACapstanRelease*         ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class ACapstanRelease* ACapstan::GetCapstanReleaseActor()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Capstan.GetCapstanReleaseActor"));}

	ACapstan_GetCapstanReleaseActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Capstan.GetArms
// ()
// Parameters:
// TArray<class ACapstanArm*>     ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class ACapstanArm*> ACapstan::GetArms()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Capstan.GetArms"));}

	ACapstan_GetArms_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CapstanArmInterface.SetIntent
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          NewIntent                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCapstanArmInterface::SetIntent(float NewIntent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CapstanArmInterface.SetIntent"));}

	UCapstanArmInterface_SetIntent_Params params;
	params.NewIntent = NewIntent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CapstanArmInterface.IsLocked
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCapstanArmInterface::IsLocked()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CapstanArmInterface.IsLocked"));}

	UCapstanArmInterface_IsLocked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CapstanArmInterface.IsArmInUse
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCapstanArmInterface::IsArmInUse()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CapstanArmInterface.IsArmInUse"));}

	UCapstanArmInterface_IsArmInUse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CapstanArmInterface.GetCurrentIntent
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UCapstanArmInterface::GetCurrentIntent()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CapstanArmInterface.GetCurrentIntent"));}

	UCapstanArmInterface_GetCurrentIntent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CapstanArmInterface.GetCapstanRatioVelocity
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UCapstanArmInterface::GetCapstanRatioVelocity()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CapstanArmInterface.GetCapstanRatioVelocity"));}

	UCapstanArmInterface_GetCapstanRatioVelocity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CapstanTestFunctions.SetupCapstanTestServerSide
// (FUNC_BlueprintCosmetic, FUNC_NetServer)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 SpawnLocation                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  CapstanClass                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class ACapstan*                ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class ACapstan* UCapstanTestFunctions::SetupCapstanTestServerSide(class UObject* WorldContextObject, const struct FVector& SpawnLocation, class UClass* CapstanClass)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CapstanTestFunctions.SetupCapstanTestServerSide"));}

	UCapstanTestFunctions_SetupCapstanTestServerSide_Params params;
	params.WorldContextObject = WorldContextObject;
	params.SpawnLocation = SpawnLocation;
	params.CapstanClass = CapstanClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CapstanTestFunctions.SetupCapstanTestClientSide
// (FUNC_Protected)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class ACapstan*                ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class ACapstan* UCapstanTestFunctions::SetupCapstanTestClientSide(class UObject* WorldContextObject)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CapstanTestFunctions.SetupCapstanTestClientSide"));}

	UCapstanTestFunctions_SetupCapstanTestClientSide_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CapstanTestFunctions.SetCapstanSpeed
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class ACapstan*                Capstan                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          MaxPlayerVelocity              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          MaxLoweringVelocity            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCapstanTestFunctions::SetCapstanSpeed(class ACapstan* Capstan, float MaxPlayerVelocity, float MaxLoweringVelocity)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CapstanTestFunctions.SetCapstanSpeed"));}

	UCapstanTestFunctions_SetCapstanSpeed_Params params;
	params.Capstan = Capstan;
	params.MaxPlayerVelocity = MaxPlayerVelocity;
	params.MaxLoweringVelocity = MaxLoweringVelocity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CapstanTestFunctions.GetCapstanArm
// (FUNC_BlueprintCosmetic, FUNC_Delegate)
// Parameters:
// class ACapstan*                Capstan                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            ArmIndex                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class ACapstanArm*             ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class ACapstanArm* UCapstanTestFunctions::GetCapstanArm(class ACapstan* Capstan, int ArmIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CapstanTestFunctions.GetCapstanArm"));}

	UCapstanTestFunctions_GetCapstanArm_Params params;
	params.Capstan = Capstan;
	params.ArmIndex = ArmIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CapstanTestFunctions.ForceSetCapstanRatio
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class ACapstan*                Capstan                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          TargetRatio                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCapstanTestFunctions::ForceSetCapstanRatio(class ACapstan* Capstan, float TargetRatio)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CapstanTestFunctions.ForceSetCapstanRatio"));}

	UCapstanTestFunctions_ForceSetCapstanRatio_Params params;
	params.Capstan = Capstan;
	params.TargetRatio = TargetRatio;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CapturedByKrakenActionStateId.PushCharacterIntoCapturedByKrakenActionState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AKrakenAnimatedTentacle* Tentacle                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCapturedByKrakenActionStateId::PushCharacterIntoCapturedByKrakenActionState(class AActor* Character, class AKrakenAnimatedTentacle* Tentacle)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CapturedByKrakenActionStateId.PushCharacterIntoCapturedByKrakenActionState"));}

	UCapturedByKrakenActionStateId_PushCharacterIntoCapturedByKrakenActionState_Params params;
	params.Character = Character;
	params.Tentacle = Tentacle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CapturedByKrakenActionStateId.PopCharacterOutOfCapturedByKrakenActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCapturedByKrakenActionStateId::PopCharacterOutOfCapturedByKrakenActionState(class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CapturedByKrakenActionStateId.PopCharacterOutOfCapturedByKrakenActionState"));}

	UCapturedByKrakenActionStateId_PopCharacterOutOfCapturedByKrakenActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CarouselPirateDescConversion.ToPirateDescriptor
// (FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_Delegate, FUNC_NetServer)
// Parameters:
// struct FCarouselPirateDesc     InParams                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// struct FPirateDescription      ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FPirateDescription UCarouselPirateDescConversion::ToPirateDescriptor(const struct FCarouselPirateDesc& InParams)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CarouselPirateDescConversion.ToPirateDescriptor"));}

	UCarouselPirateDescConversion_ToPirateDescriptor_Params params;
	params.InParams = InParams;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CarouselPirateDescConversion.ToOutfit
// (FUNC_Net, FUNC_Delegate, FUNC_NetServer)
// Parameters:
// struct FCarouselPirateDesc     InParams                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// TArray<class UClass*>          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class UClass*> UCarouselPirateDescConversion::ToOutfit(const struct FCarouselPirateDesc& InParams)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CarouselPirateDescConversion.ToOutfit"));}

	UCarouselPirateDescConversion_ToOutfit_Params params;
	params.InParams = InParams;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CarouselPirateGenerator.RefreshCurrentPirateStatus
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           Locked                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCarouselPirateGenerator::RefreshCurrentPirateStatus(class UObject* WorldContextObject, bool Locked)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CarouselPirateGenerator.RefreshCurrentPirateStatus"));}

	UCarouselPirateGenerator_RefreshCurrentPirateStatus_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Locked = Locked;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CarouselPirateGenerator.GenerateSetOfPirates
// (FUNC_Net, FUNC_NetReliable, FUNC_Delegate, FUNC_HasOutParms, FUNC_HasDefaults)
// Parameters:
// int                            InSeed                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            InCount                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FCarouselPirateGeneratorParams InParams                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// TArray<struct FCarouselPirateDesc> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<struct FCarouselPirateDesc> UCarouselPirateGenerator::GenerateSetOfPirates(int InSeed, int InCount, const struct FCarouselPirateGeneratorParams& InParams)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CarouselPirateGenerator.GenerateSetOfPirates"));}

	UCarouselPirateGenerator_GenerateSetOfPirates_Params params;
	params.InSeed = InSeed;
	params.InCount = InCount;
	params.InParams = InParams;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PickupableInterface.HandleDestroy
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UPickupableInterface::HandleDestroy()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PickupableInterface.HandleDestroy"));}

	UPickupableInterface_HandleDestroy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ItemProxy.PerformDropOnSurfaceFx
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EPhysicalSurface>  ServerSurfaceType              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           AttachVFXToItem                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 OverrideVFXPos                 (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// class AActor*                  ActorToParentVfxTo             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AItemProxy::PerformDropOnSurfaceFx(TEnumAsByte<EPhysicalSurface> ServerSurfaceType, bool AttachVFXToItem, const struct FVector& OverrideVFXPos, class AActor* ActorToParentVfxTo)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemProxy.PerformDropOnSurfaceFx"));}

	AItemProxy_PerformDropOnSurfaceFx_Params params;
	params.ServerSurfaceType = ServerSurfaceType;
	params.AttachVFXToItem = AttachVFXToItem;
	params.OverrideVFXPos = OverrideVFXPos;
	params.ActorToParentVfxTo = ActorToParentVfxTo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ItemProxy.Multicast_DropOnSurfaceRPC
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EPhysicalSurface>  SurfaceType                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           AttachVFXToItem                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 OverrideVFXPos                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// class AActor*                  ActorToParentVfxTo             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AItemProxy::Multicast_DropOnSurfaceRPC(TEnumAsByte<EPhysicalSurface> SurfaceType, bool AttachVFXToItem, const struct FVector& OverrideVFXPos, class AActor* ActorToParentVfxTo)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemProxy.Multicast_DropOnSurfaceRPC"));}

	AItemProxy_Multicast_DropOnSurfaceRPC_Params params;
	params.SurfaceType = SurfaceType;
	params.AttachVFXToItem = AttachVFXToItem;
	params.OverrideVFXPos = OverrideVFXPos;
	params.ActorToParentVfxTo = ActorToParentVfxTo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ItemProxy.GetItemInfo
// (FUNC_BlueprintCosmetic)
// Parameters:
// class AItemInfo*               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AItemInfo* AItemProxy::GetItemInfo()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemProxy.GetItemInfo"));}

	AItemProxy_GetItemInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FloatingItemProxy.OnRep_PhysicsState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AFloatingItemProxy::OnRep_PhysicsState()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FloatingItemProxy.OnRep_PhysicsState"));}

	AFloatingItemProxy_OnRep_PhysicsState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CharacterAudioComponent.SetNamedState
// (FUNC_RequiredAPI, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Protected)
// Parameters:
// struct FName                   StateName                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// bool                           Active                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCharacterAudioComponent::SetNamedState(const struct FName& StateName, bool Active)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterAudioComponent.SetNamedState"));}

	UCharacterAudioComponent_SetNamedState_Params params;
	params.StateName = StateName;
	params.Active = Active;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CharacterAudioComponent.ResetNamedStates
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UCharacterAudioComponent::ResetNamedStates()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterAudioComponent.ResetNamedStates"));}

	UCharacterAudioComponent_ResetNamedStates_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CharacterAudioComponent.PlaySoundOnLocalClientOnly_RPC
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UWwiseEvent*             Event                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCharacterAudioComponent::PlaySoundOnLocalClientOnly_RPC(class UWwiseEvent* Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterAudioComponent.PlaySoundOnLocalClientOnly_RPC"));}

	UCharacterAudioComponent_PlaySoundOnLocalClientOnly_RPC_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CharacterAudioComponent.GetSpaceRtpcValueFromRtpcName
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// struct FName                   RTPCName                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UCharacterAudioComponent::GetSpaceRtpcValueFromRtpcName(const struct FName& RTPCName)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterAudioComponent.GetSpaceRtpcValueFromRtpcName"));}

	UCharacterAudioComponent_GetSpaceRtpcValueFromRtpcName_Params params;
	params.RTPCName = RTPCName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CharacterAudioComponent.GetNumberOfSkeletonsAffectingMusicSystem
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UCharacterAudioComponent::GetNumberOfSkeletonsAffectingMusicSystem()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterAudioComponent.GetNumberOfSkeletonsAffectingMusicSystem"));}

	UCharacterAudioComponent_GetNumberOfSkeletonsAffectingMusicSystem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CharacterAudioComponent.GetEmitter
// (FUNC_BlueprintCosmetic)
// Parameters:
// struct FWwiseEmitter           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FWwiseEmitter UCharacterAudioComponent::GetEmitter()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterAudioComponent.GetEmitter"));}

	UCharacterAudioComponent_GetEmitter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CharacterAudioComponent.GetCurrentPlayerMusicState
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EPlayerMusicState> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EPlayerMusicState> UCharacterAudioComponent::GetCurrentPlayerMusicState()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterAudioComponent.GetCurrentPlayerMusicState"));}

	UCharacterAudioComponent_GetCurrentPlayerMusicState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CharacterInputBinder.SpoofNotificationInput
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  Id                             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCharacterInputBinder::SpoofNotificationInput(class UClass* Id)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterInputBinder.SpoofNotificationInput"));}

	UCharacterInputBinder_SpoofNotificationInput_Params params;
	params.Id = Id;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CharacterInputBinder.SpoofAnalogInput
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  Id                             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Value                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCharacterInputBinder::SpoofAnalogInput(class UClass* Id, float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterInputBinder.SpoofAnalogInput"));}

	UCharacterInputBinder_SpoofAnalogInput_Params params;
	params.Id = Id;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CharacterInputBinder.IsContinuousActionActive
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  BeginNotificationInputId       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCharacterInputBinder::IsContinuousActionActive(class UClass* BeginNotificationInputId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterInputBinder.IsContinuousActionActive"));}

	UCharacterInputBinder_IsContinuousActionActive_Params params;
	params.BeginNotificationInputId = BeginNotificationInputId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CharacterInputBinder.IgnoreNonSpoofedInput
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           InShouldIgnore                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCharacterInputBinder::IgnoreNonSpoofedInput(bool InShouldIgnore)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterInputBinder.IgnoreNonSpoofedInput"));}

	UCharacterInputBinder_IgnoreNonSpoofedInput_Params params;
	params.InShouldIgnore = InShouldIgnore;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CharacterInteractionComponentTestFunctions.PushCanInteractValidatorToInteractionComponent
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UCharacterInteractionComponent* InCharacterInteractionComponent (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)

void UCharacterInteractionComponentTestFunctions::PushCanInteractValidatorToInteractionComponent(class UCharacterInteractionComponent* InCharacterInteractionComponent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterInteractionComponentTestFunctions.PushCanInteractValidatorToInteractionComponent"));}

	UCharacterInteractionComponentTestFunctions_PushCanInteractValidatorToInteractionComponent_Params params;
	params.InCharacterInteractionComponent = InCharacterInteractionComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CharacterInteractionComponentTestFunctions.CharacterInteractionComponentWithoutInteractors_WhenPolicyIsAdded_PolicyIsntCalled
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UCharacterInteractionComponent* InCharacterInteractionComponent (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCharacterInteractionComponentTestFunctions::CharacterInteractionComponentWithoutInteractors_WhenPolicyIsAdded_PolicyIsntCalled(class UCharacterInteractionComponent* InCharacterInteractionComponent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterInteractionComponentTestFunctions.CharacterInteractionComponentWithoutInteractors_WhenPolicyIsAdded_PolicyIsntCalled"));}

	UCharacterInteractionComponentTestFunctions_CharacterInteractionComponentWithoutInteractors_WhenPolicyIsAdded_PolicyIsntCalled_Params params;
	params.InCharacterInteractionComponent = InCharacterInteractionComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CharacterInteractionComponentTestFunctions.CharacterInteractionComponentWithInteractors_WhenPolicyIsAdded_PolicyIsCalled
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UCharacterInteractionComponent* InCharacterInteractionComponent (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCharacterInteractionComponentTestFunctions::CharacterInteractionComponentWithInteractors_WhenPolicyIsAdded_PolicyIsCalled(class UCharacterInteractionComponent* InCharacterInteractionComponent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterInteractionComponentTestFunctions.CharacterInteractionComponentWithInteractors_WhenPolicyIsAdded_PolicyIsCalled"));}

	UCharacterInteractionComponentTestFunctions_CharacterInteractionComponentWithInteractors_WhenPolicyIsAdded_PolicyIsCalled_Params params;
	params.InCharacterInteractionComponent = InCharacterInteractionComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CharacterInteractionComponentTestFunctions.CharacterInteractionComponentWithInteractor_TwoPolicies_HighestPriorityFirst
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UCharacterInteractionComponent* InCharacterInteractionComponent (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCharacterInteractionComponentTestFunctions::CharacterInteractionComponentWithInteractor_TwoPolicies_HighestPriorityFirst(class UCharacterInteractionComponent* InCharacterInteractionComponent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterInteractionComponentTestFunctions.CharacterInteractionComponentWithInteractor_TwoPolicies_HighestPriorityFirst"));}

	UCharacterInteractionComponentTestFunctions_CharacterInteractionComponentWithInteractor_TwoPolicies_HighestPriorityFirst_Params params;
	params.InCharacterInteractionComponent = InCharacterInteractionComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CharacterPossessedEventTestComponent.HasReceivedPlayerStateReplicatedEvent
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCharacterPossessedEventTestComponent::HasReceivedPlayerStateReplicatedEvent()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterPossessedEventTestComponent.HasReceivedPlayerStateReplicatedEvent"));}

	UCharacterPossessedEventTestComponent_HasReceivedPlayerStateReplicatedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CharacterSocketCollisionFunctionLibrary.NotEqual
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected, FUNC_Delegate)
// Parameters:
// struct FCharacterSocketCollisionHandle A                              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// struct FCharacterSocketCollisionHandle B                              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCharacterSocketCollisionFunctionLibrary::NotEqual(const struct FCharacterSocketCollisionHandle& A, const struct FCharacterSocketCollisionHandle& B)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterSocketCollisionFunctionLibrary.NotEqual"));}

	UCharacterSocketCollisionFunctionLibrary_NotEqual_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CharacterSocketCollisionFunctionLibrary.IsValid
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Private, FUNC_Protected)
// Parameters:
// struct FCharacterSocketCollisionHandle Handle                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCharacterSocketCollisionFunctionLibrary::IsValid(const struct FCharacterSocketCollisionHandle& Handle)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterSocketCollisionFunctionLibrary.IsValid"));}

	UCharacterSocketCollisionFunctionLibrary_IsValid_Params params;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CharacterSocketCollisionFunctionLibrary.Equal
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected, FUNC_Delegate)
// Parameters:
// struct FCharacterSocketCollisionHandle A                              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// struct FCharacterSocketCollisionHandle B                              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCharacterSocketCollisionFunctionLibrary::Equal(const struct FCharacterSocketCollisionHandle& A, const struct FCharacterSocketCollisionHandle& B)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterSocketCollisionFunctionLibrary.Equal"));}

	UCharacterSocketCollisionFunctionLibrary_Equal_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CharacterSocketCollisionServiceInterface.UnregisterSocket
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FCharacterSocketCollisionHandle Handle                         (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UCharacterSocketCollisionServiceInterface::UnregisterSocket(struct FCharacterSocketCollisionHandle* Handle)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterSocketCollisionServiceInterface.UnregisterSocket"));}

	UCharacterSocketCollisionServiceInterface_UnregisterSocket_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Handle != nullptr)
		*Handle = params.Handle;
}


// Function Athena.CharacterSocketCollisionServiceInterface.RegisterSocket
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Delegate, FUNC_NetServer)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FCharacterSocketCollisionDesc InDesc                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// struct FCharacterSocketCollisionHandle ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FCharacterSocketCollisionHandle UCharacterSocketCollisionServiceInterface::RegisterSocket(class AAthenaCharacter* InCharacter, const struct FCharacterSocketCollisionDesc& InDesc)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterSocketCollisionServiceInterface.RegisterSocket"));}

	UCharacterSocketCollisionServiceInterface_RegisterSocket_Params params;
	params.InCharacter = InCharacter;
	params.InDesc = InDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CharacterSocketCollisionServiceInterface.IsSocketRegistered
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Private, FUNC_Protected)
// Parameters:
// struct FCharacterSocketCollisionHandle Handle                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCharacterSocketCollisionServiceInterface::IsSocketRegistered(const struct FCharacterSocketCollisionHandle& Handle)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CharacterSocketCollisionServiceInterface.IsSocketRegistered"));}

	UCharacterSocketCollisionServiceInterface_IsSocketRegistered_Params params;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ChatboxCompositeInputHandler.OnOpenChatbox
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UChatboxCompositeInputHandler::OnOpenChatbox()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ChatboxCompositeInputHandler.OnOpenChatbox"));}

	UChatboxCompositeInputHandler_OnOpenChatbox_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CinematicCameraController.SetFOV
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          NewFOV                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ACinematicCameraController::SetFOV(float NewFOV)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CinematicCameraController.SetFOV"));}

	ACinematicCameraController_SetFOV_Params params;
	params.NewFOV = NewFOV;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CinematicCameraController.GetFOV
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ACinematicCameraController::GetFOV()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CinematicCameraController.GetFOV"));}

	ACinematicCameraController_GetFOV_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ClothingLoadoutControlInterface.UnequipClothing
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  InDesc                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UClothingLoadoutControlInterface::UnequipClothing(class UClass* InDesc)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ClothingLoadoutControlInterface.UnequipClothing"));}

	UClothingLoadoutControlInterface_UnequipClothing_Params params;
	params.InDesc = InDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ClothingLoadoutControlInterface.SetClothingLoadout
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FClothingLoadout        InLoadout                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UClothingLoadoutControlInterface::SetClothingLoadout(const struct FClothingLoadout& InLoadout)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ClothingLoadoutControlInterface.SetClothingLoadout"));}

	UClothingLoadoutControlInterface_SetClothingLoadout_Params params;
	params.InLoadout = InLoadout;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ClothingLoadoutControlInterface.EquipClothing
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  InDesc                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UClothingLoadoutControlInterface::EquipClothing(class UClass* InDesc)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ClothingLoadoutControlInterface.EquipClothing"));}

	UClothingLoadoutControlInterface_EquipClothing_Params params;
	params.InDesc = InDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ClothingLoadoutViewInterface.GetClothingLoadout
// ()
// Parameters:
// struct FClothingLoadout        ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm)

struct FClothingLoadout UClothingLoadoutViewInterface::GetClothingLoadout()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ClothingLoadoutViewInterface.GetClothingLoadout"));}

	UClothingLoadoutViewInterface_GetClothingLoadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.TitleLoadoutControlInterface.Client_UpdateTitleUI
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  InLoadout                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UTitleLoadoutControlInterface::Client_UpdateTitleUI(class UClass* InLoadout)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TitleLoadoutControlInterface.Client_UpdateTitleUI"));}

	UTitleLoadoutControlInterface_Client_UpdateTitleUI_Params params;
	params.InLoadout = InLoadout;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TitleLoadoutViewInterface.GetTitleLoadout
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UClass*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UClass* UTitleLoadoutViewInterface::GetTitleLoadout()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TitleLoadoutViewInterface.GetTitleLoadout"));}

	UTitleLoadoutViewInterface_GetTitleLoadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ClothingLoadoutComponent.OnRep_Loadout
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UClothingLoadoutComponent::OnRep_Loadout()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ClothingLoadoutComponent.OnRep_Loadout"));}

	UClothingLoadoutComponent_OnRep_Loadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CloudSystem.SetGlobalAtmosphericPressure
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          NewAtmosphericPressure         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ACloudSystem::SetGlobalAtmosphericPressure(float NewAtmosphericPressure)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CloudSystem.SetGlobalAtmosphericPressure"));}

	ACloudSystem_SetGlobalAtmosphericPressure_Params params;
	params.NewAtmosphericPressure = NewAtmosphericPressure;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CoastInterface.UnregisterCoast
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FBlueprintableIntegerHandle CoastHandle                    (CPF_Parm)

void UCoastInterface::UnregisterCoast(const struct FBlueprintableIntegerHandle& CoastHandle)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CoastInterface.UnregisterCoast"));}

	UCoastInterface_UnregisterCoast_Params params;
	params.CoastHandle = CoastHandle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CoastInterface.RegisterCoast
// (FUNC_Private, FUNC_Protected, FUNC_Delegate)
// Parameters:
// class USplineComponent*        CoastalSpline                  (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// class USplineComponent*        InnerSpline                    (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// struct FVector                 SplineOrigin                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FBlueprintableIntegerHandle ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FBlueprintableIntegerHandle UCoastInterface::RegisterCoast(class USplineComponent* CoastalSpline, class USplineComponent* InnerSpline, const struct FVector& SplineOrigin)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CoastInterface.RegisterCoast"));}

	UCoastInterface_RegisterCoast_Params params;
	params.CoastalSpline = CoastalSpline;
	params.InnerSpline = InnerSpline;
	params.SplineOrigin = SplineOrigin;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CoastInterface.GetClosestIslandNameOfCoastlineForPointAndTolerance
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Private, FUNC_Delegate)
// Parameters:
// struct FVector                 Pos                            (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// float                          MaxDistFromCoast               (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          OutClosestDistToShore          (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FName                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FName UCoastInterface::GetClosestIslandNameOfCoastlineForPointAndTolerance(const struct FVector& Pos, float MaxDistFromCoast, float* OutClosestDistToShore)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CoastInterface.GetClosestIslandNameOfCoastlineForPointAndTolerance"));}

	UCoastInterface_GetClosestIslandNameOfCoastlineForPointAndTolerance_Params params;
	params.Pos = Pos;
	params.MaxDistFromCoast = MaxDistFromCoast;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutClosestDistToShore != nullptr)
		*OutClosestDistToShore = params.OutClosestDistToShore;

	return params.ReturnValue;
}


// Function Athena.CoastInterface.GetClosestCoastObjects
// (FUNC_Delegate)
// Parameters:
// struct FVector                 LookupPosition                 (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// TArray<struct FCoastObject>    ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<struct FCoastObject> UCoastInterface::GetClosestCoastObjects(const struct FVector& LookupPosition)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CoastInterface.GetClosestCoastObjects"));}

	UCoastInterface_GetClosestCoastObjects_Params params;
	params.LookupPosition = LookupPosition;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CoherentBaseHUD.IsViewportValid
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ACoherentBaseHUD::IsViewportValid()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CoherentBaseHUD.IsViewportValid"));}

	ACoherentBaseHUD_IsViewportValid_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaHUD.ShowTooltipsDetailedAtlas
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaHUD::ShowTooltipsDetailedAtlas()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaHUD.ShowTooltipsDetailedAtlas"));}

	AAthenaHUD_ShowTooltipsDetailedAtlas_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaHUD.ShowTooltipsAtlas
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaHUD::ShowTooltipsAtlas()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaHUD.ShowTooltipsAtlas"));}

	AAthenaHUD_ShowTooltipsAtlas_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaHUD.ShowNameplatesAtlas
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaHUD::ShowNameplatesAtlas()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaHUD.ShowNameplatesAtlas"));}

	AAthenaHUD_ShowNameplatesAtlas_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaHUD.HasInputFocus
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AAthenaHUD::HasInputFocus()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaHUD.HasInputFocus"));}

	AAthenaHUD_HasInputFocus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaHUD.AreInGameMenusActive
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AAthenaHUD::AreInGameMenusActive()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaHUD.AreInGameMenusActive"));}

	AAthenaHUD_AreInGameMenusActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.AthenaHUD.AreAllViewScriptingReady
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AAthenaHUD::AreAllViewScriptingReady()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaHUD.AreAllViewScriptingReady"));}

	AAthenaHUD_AreAllViewScriptingReady_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CoherentUIGTInstancedComponent.ScriptingReadyEventReceived
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UCoherentUIGTInstancedComponent::ScriptingReadyEventReceived()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CoherentUIGTInstancedComponent.ScriptingReadyEventReceived"));}

	UCoherentUIGTInstancedComponent_ScriptingReadyEventReceived_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CoherentUIGTInstancedComponent.ReadyForBindingsEventReceived
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UCoherentUIGTInstancedComponent::ReadyForBindingsEventReceived()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CoherentUIGTInstancedComponent.ReadyForBindingsEventReceived"));}

	UCoherentUIGTInstancedComponent_ReadyForBindingsEventReceived_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CoherentUIGTInstancedComponent.OnScriptingReady
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UCoherentUIGTInstancedComponent::OnScriptingReady()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CoherentUIGTInstancedComponent.OnScriptingReady"));}

	UCoherentUIGTInstancedComponent_OnScriptingReady_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CoherentUIGTInstancedComponent.OnReadyForBindings
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UCoherentUIGTInstancedComponent::OnReadyForBindings()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CoherentUIGTInstancedComponent.OnReadyForBindings"));}

	UCoherentUIGTInstancedComponent_OnReadyForBindings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CoherentUIGTInstancedComponent.IsScriptingReady
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCoherentUIGTInstancedComponent::IsScriptingReady()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CoherentUIGTInstancedComponent.IsScriptingReady"));}

	UCoherentUIGTInstancedComponent_IsScriptingReady_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CoherentUIGTInstancedComponent.GetHUDMaterial
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UMaterialInstanceDynamic* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UMaterialInstanceDynamic* UCoherentUIGTInstancedComponent::GetHUDMaterial()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CoherentUIGTInstancedComponent.GetHUDMaterial"));}

	UCoherentUIGTInstancedComponent_GetHUDMaterial_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CoherentUIGTInstancedComponent.FinishLoadEventReceived
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 path                           (CPF_Parm, CPF_ZeroConstructor)
// bool                           isMainFrame                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCoherentUIGTInstancedComponent::FinishLoadEventReceived(const struct FString& path, bool isMainFrame)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CoherentUIGTInstancedComponent.FinishLoadEventReceived"));}

	UCoherentUIGTInstancedComponent_FinishLoadEventReceived_Params params;
	params.path = path;
	params.isMainFrame = isMainFrame;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CoherentUIGTInstancedComponent.BindingsReleasedEventReceived
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UCoherentUIGTInstancedComponent::BindingsReleasedEventReceived()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CoherentUIGTInstancedComponent.BindingsReleasedEventReceived"));}

	UCoherentUIGTInstancedComponent_BindingsReleasedEventReceived_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CoherentBaseHUDComponent.OnScriptingReady
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UCoherentBaseHUDComponent::OnScriptingReady()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CoherentBaseHUDComponent.OnScriptingReady"));}

	UCoherentBaseHUDComponent_OnScriptingReady_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CoherentBaseHUDComponent.OnReadyForBindings
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UCoherentBaseHUDComponent::OnReadyForBindings()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CoherentBaseHUDComponent.OnReadyForBindings"));}

	UCoherentBaseHUDComponent_OnReadyForBindings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CoherentBaseHUDComponent.HasInitializationErrorOccurred
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCoherentBaseHUDComponent::HasInitializationErrorOccurred()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CoherentBaseHUDComponent.HasInitializationErrorOccurred"));}

	UCoherentBaseHUDComponent_HasInitializationErrorOccurred_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FrontendHUDComponent.SetFrontendMessagingDispatcher
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TScriptInterface<class UObjectMessagingDispatcherInterface> Dispatcher                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UFrontendHUDComponent::SetFrontendMessagingDispatcher(const TScriptInterface<class UObjectMessagingDispatcherInterface>& Dispatcher)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FrontendHUDComponent.SetFrontendMessagingDispatcher"));}

	UFrontendHUDComponent_SetFrontendMessagingDispatcher_Params params;
	params.Dispatcher = Dispatcher;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.FrontendHUDComponent.OnReadyForBindings
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UFrontendHUDComponent::OnReadyForBindings()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FrontendHUDComponent.OnReadyForBindings"));}

	UFrontendHUDComponent_OnReadyForBindings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.UIInputForwardComponent.TargetViewScriptingReady
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UUIInputForwardComponent::TargetViewScriptingReady()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UIInputForwardComponent.TargetViewScriptingReady"));}

	UUIInputForwardComponent_TargetViewScriptingReady_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.UIInputForwardComponent.SetUIFocus
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EUIInputFocusType> FocusType                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UCoherentUIGTBaseComponent* TargetViewComponent            (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)

void UUIInputForwardComponent::SetUIFocus(TEnumAsByte<EUIInputFocusType> FocusType, class UCoherentUIGTBaseComponent* TargetViewComponent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UIInputForwardComponent.SetUIFocus"));}

	UUIInputForwardComponent_SetUIFocus_Params params;
	params.FocusType = FocusType;
	params.TargetViewComponent = TargetViewComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.UIInputForwardComponent.SetTargetView
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UCoherentUIGTBaseComponent* ViewComponent                  (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)

void UUIInputForwardComponent::SetTargetView(class UCoherentUIGTBaseComponent* ViewComponent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UIInputForwardComponent.SetTargetView"));}

	UUIInputForwardComponent_SetTargetView_Params params;
	params.ViewComponent = ViewComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.UIInputForwardComponent.IsUIFocused
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UUIInputForwardComponent::IsUIFocused()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UIInputForwardComponent.IsUIFocused"));}

	UUIInputForwardComponent_IsUIFocused_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.UIInputForwardComponent.GetCurrentInputFocusType
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EUIInputFocusType> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EUIInputFocusType> UUIInputForwardComponent::GetCurrentInputFocusType()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UIInputForwardComponent.GetCurrentInputFocusType"));}

	UUIInputForwardComponent_GetCurrentInputFocusType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.UIInputForwardComponent.CentreMouseCursor
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UUIInputForwardComponent::CentreMouseCursor()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UIInputForwardComponent.CentreMouseCursor"));}

	UUIInputForwardComponent_CentreMouseCursor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.FrontendHUD.SetBootFlowMessagingDispatcher
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TScriptInterface<class UObjectMessagingDispatcherInterface> Dispatcher                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AFrontendHUD::SetBootFlowMessagingDispatcher(const TScriptInterface<class UObjectMessagingDispatcherInterface>& Dispatcher)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FrontendHUD.SetBootFlowMessagingDispatcher"));}

	AFrontendHUD_SetBootFlowMessagingDispatcher_Params params;
	params.Dispatcher = Dispatcher;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.FrontendHUD.GetBootFlowMessagingDispatcher
// ()
// Parameters:
// TScriptInterface<class UObjectMessagingDispatcherInterface> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TScriptInterface<class UObjectMessagingDispatcherInterface> AFrontendHUD::GetBootFlowMessagingDispatcher()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FrontendHUD.GetBootFlowMessagingDispatcher"));}

	AFrontendHUD_GetBootFlowMessagingDispatcher_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FrontendHUD.DeletePirate
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AFrontendHUD::DeletePirate()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FrontendHUD.DeletePirate"));}

	AFrontendHUD_DeletePirate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.FrontendHUD.AttachToBootFlowMessagingDispatcher
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AFrontendHUD::AttachToBootFlowMessagingDispatcher()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FrontendHUD.AttachToBootFlowMessagingDispatcher"));}

	AFrontendHUD_AttachToBootFlowMessagingDispatcher_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CoherentToWwiseEventComponent.IsPlayingAny
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCoherentToWwiseEventComponent::IsPlayingAny()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CoherentToWwiseEventComponent.IsPlayingAny"));}

	UCoherentToWwiseEventComponent_IsPlayingAny_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CoherentToWwiseEventComponent.GetEmitter
// (FUNC_BlueprintCosmetic)
// Parameters:
// struct FWwiseEmitter           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FWwiseEmitter UCoherentToWwiseEventComponent::GetEmitter()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CoherentToWwiseEventComponent.GetEmitter"));}

	UCoherentToWwiseEventComponent_GetEmitter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CoherentUIGTHUDComponent.OnScriptingReady
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UCoherentUIGTHUDComponent::OnScriptingReady()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CoherentUIGTHUDComponent.OnScriptingReady"));}

	UCoherentUIGTHUDComponent_OnScriptingReady_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CoherentUIGTHUDComponent.OnReadyForBindings
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UCoherentUIGTHUDComponent::OnReadyForBindings()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CoherentUIGTHUDComponent.OnReadyForBindings"));}

	UCoherentUIGTHUDComponent_OnReadyForBindings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CoherentUIGTInGameMenusComponent.OnReadyForBindings
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UCoherentUIGTInGameMenusComponent::OnReadyForBindings()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CoherentUIGTInGameMenusComponent.OnReadyForBindings"));}

	UCoherentUIGTInGameMenusComponent_OnReadyForBindings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CoherentUIGTAtlasComponent.OnReadyForBindings
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UCoherentUIGTAtlasComponent::OnReadyForBindings()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CoherentUIGTAtlasComponent.OnReadyForBindings"));}

	UCoherentUIGTAtlasComponent_OnReadyForBindings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CompanyNPCInterface.PurchaseWieldedBooty
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Vendor                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCompanyNPCInterface::PurchaseWieldedBooty(class AActor* Vendor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CompanyNPCInterface.PurchaseWieldedBooty"));}

	UCompanyNPCInterface_PurchaseWieldedBooty_Params params;
	params.Vendor = Vendor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CompanyNPCInterface.CanPurchaseBootyOfType
// (FUNC_RequiredAPI, FUNC_MulticastDelegate)
// Parameters:
// TEnumAsByte<EBootyTypes>       BootyType                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCompanyNPCInterface::CanPurchaseBootyOfType(TEnumAsByte<EBootyTypes> BootyType)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CompanyNPCInterface.CanPurchaseBootyOfType"));}

	UCompanyNPCInterface_CanPurchaseBootyOfType_Params params;
	params.BootyType = BootyType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ControlCapstanArmActionStateId.PushCharacterIntoControlCapstanArmActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EActionStateMachineTrackId> TrackId                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  ControlledObject               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UControlCapstanArmActionStateId::PushCharacterIntoControlCapstanArmActionState(TEnumAsByte<EActionStateMachineTrackId> TrackId, class AActor* ControlledObject, class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControlCapstanArmActionStateId.PushCharacterIntoControlCapstanArmActionState"));}

	UControlCapstanArmActionStateId_PushCharacterIntoControlCapstanArmActionState_Params params;
	params.TrackId = TrackId;
	params.ControlledObject = ControlledObject;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ControllableMessagesInterface.TakenControlOfWheel
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UControllableMessagesInterface::TakenControlOfWheel(class AActor* Actor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControllableMessagesInterface.TakenControlOfWheel"));}

	UControllableMessagesInterface_TakenControlOfWheel_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ControllableMessagesInterface.RelinquishedControl
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UControllableMessagesInterface::RelinquishedControl(class AActor* Actor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControllableMessagesInterface.RelinquishedControl"));}

	UControllableMessagesInterface_RelinquishedControl_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ControllableObjectFunctionLibrary.GetAnyUncontrolledActor
// (FUNC_BlueprintCosmetic, FUNC_Delegate)
// Parameters:
// TArray<class AActor*>          Actors                         (CPF_Parm, CPF_ZeroConstructor)
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* UControllableObjectFunctionLibrary::GetAnyUncontrolledActor(TArray<class AActor*> Actors)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControllableObjectFunctionLibrary.GetAnyUncontrolledActor"));}

	UControllableObjectFunctionLibrary_GetAnyUncontrolledActor_Params params;
	params.Actors = Actors;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ControllableObjectFunctionLibrary.FilterUncontrolledActors
// (FUNC_Delegate)
// Parameters:
// TArray<class AActor*>          Actors                         (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor)
// TArray<class AActor*>          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class AActor*> UControllableObjectFunctionLibrary::FilterUncontrolledActors(TArray<class AActor*>* Actors)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControllableObjectFunctionLibrary.FilterUncontrolledActors"));}

	UControllableObjectFunctionLibrary_FilterUncontrolledActors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Actors != nullptr)
		*Actors = params.Actors;

	return params.ReturnValue;
}


// Function Athena.ControllableObjectFunctionLibrary.FilterControllableActors
// (FUNC_Delegate)
// Parameters:
// TArray<class AActor*>          Actors                         (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor)
// TArray<class AActor*>          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class AActor*> UControllableObjectFunctionLibrary::FilterControllableActors(TArray<class AActor*>* Actors)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControllableObjectFunctionLibrary.FilterControllableActors"));}

	UControllableObjectFunctionLibrary_FilterControllableActors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Actors != nullptr)
		*Actors = params.Actors;

	return params.ReturnValue;
}


// Function Athena.ControlObjectActionStateId.PushCharacterIntoControlObjectActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EActionStateMachineTrackId> TrackId                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  ControlledObject               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UControlObjectActionStateId::PushCharacterIntoControlObjectActionState(TEnumAsByte<EActionStateMachineTrackId> TrackId, class AActor* ControlledObject, class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControlObjectActionStateId.PushCharacterIntoControlObjectActionState"));}

	UControlObjectActionStateId_PushCharacterIntoControlObjectActionState_Params params;
	params.TrackId = TrackId;
	params.ControlledObject = ControlledObject;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ControlSailManipulatorActionStateId.PushCharacterIntoControlSailManipulatorActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EActionStateMachineTrackId> TrackId                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  ControlledObject               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EControllableObjectType> ControllableType               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  AnalogInputId                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UControlSailManipulatorActionStateId::PushCharacterIntoControlSailManipulatorActionState(TEnumAsByte<EActionStateMachineTrackId> TrackId, class AActor* ControlledObject, class AActor* Character, TEnumAsByte<EControllableObjectType> ControllableType, class UClass* AnalogInputId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControlSailManipulatorActionStateId.PushCharacterIntoControlSailManipulatorActionState"));}

	UControlSailManipulatorActionStateId_PushCharacterIntoControlSailManipulatorActionState_Params params;
	params.TrackId = TrackId;
	params.ControlledObject = ControlledObject;
	params.Character = Character;
	params.ControllableType = ControllableType;
	params.AnalogInputId = AnalogInputId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ControlWheelActionStateId.PushCharacterIntoControlWheelActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EActionStateMachineTrackId> TrackId                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AWheel*                  ControlledObject               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UControlWheelActionStateId::PushCharacterIntoControlWheelActionState(TEnumAsByte<EActionStateMachineTrackId> TrackId, class AWheel* ControlledObject, class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControlWheelActionStateId.PushCharacterIntoControlWheelActionState"));}

	UControlWheelActionStateId_PushCharacterIntoControlWheelActionState_Params params;
	params.TrackId = TrackId;
	params.ControlledObject = ControlledObject;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CrewFunctions.ResetCrewToSpawnLocation
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContext                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FGuid                   CrewId                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AShipSpawnLocation*      SpawnLocation                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCrewFunctions::ResetCrewToSpawnLocation(class UObject* WorldContext, const struct FGuid& CrewId, class AShipSpawnLocation* SpawnLocation)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewFunctions.ResetCrewToSpawnLocation"));}

	UCrewFunctions_ResetCrewToSpawnLocation_Params params;
	params.WorldContext = WorldContext;
	params.CrewId = CrewId;
	params.SpawnLocation = SpawnLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CrewFunctions.ResetCrewToSafeSpawnLocation
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContext                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FGuid                   CrewId                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 ActorLocation                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCrewFunctions::ResetCrewToSafeSpawnLocation(class UObject* WorldContext, const struct FGuid& CrewId, const struct FVector& ActorLocation)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewFunctions.ResetCrewToSafeSpawnLocation"));}

	UCrewFunctions_ResetCrewToSafeSpawnLocation_Params params;
	params.WorldContext = WorldContext;
	params.CrewId = CrewId;
	params.ActorLocation = ActorLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CrewFunctions.RemoveCharacterFromCrew
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContext                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AAthenaCharacter*        Player                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCrewFunctions::RemoveCharacterFromCrew(class UObject* WorldContext, class AAthenaCharacter* Player)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewFunctions.RemoveCharacterFromCrew"));}

	UCrewFunctions_RemoveCharacterFromCrew_Params params;
	params.WorldContext = WorldContext;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CrewFunctions.IsCharacterMemberOfCrew
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected, FUNC_Delegate)
// Parameters:
// class AAthenaCharacter*        Player                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FGuid                   CrewId                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCrewFunctions::IsCharacterMemberOfCrew(class AAthenaCharacter* Player, const struct FGuid& CrewId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewFunctions.IsCharacterMemberOfCrew"));}

	UCrewFunctions_IsCharacterMemberOfCrew_Params params;
	params.Player = Player;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CrewFunctions.IsActorMemberOfCharactersCrew
// (FUNC_Final, FUNC_Delegate)
// Parameters:
// class AActor*                  Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AAthenaCharacter*        Player                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCrewFunctions::IsActorMemberOfCharactersCrew(class AActor* Actor, class AAthenaCharacter* Player)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewFunctions.IsActorMemberOfCharactersCrew"));}

	UCrewFunctions_IsActorMemberOfCharactersCrew_Params params;
	params.Actor = Actor;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CrewFunctions.GetShipSizeForCrewId
// (FUNC_Protected, FUNC_Delegate)
// Parameters:
// class UObject*                 WorldContext                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FGuid                   CrewId                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// class UClass*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UClass* UCrewFunctions::GetShipSizeForCrewId(class UObject* WorldContext, const struct FGuid& CrewId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewFunctions.GetShipSizeForCrewId"));}

	UCrewFunctions_GetShipSizeForCrewId_Params params;
	params.WorldContext = WorldContext;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CrewFunctions.GetShipSizeForActorsCrew
// (FUNC_BlueprintCosmetic, FUNC_Delegate)
// Parameters:
// class UObject*                 WorldContext                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Actor                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UClass* UCrewFunctions::GetShipSizeForActorsCrew(class UObject* WorldContext, class AActor* Actor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewFunctions.GetShipSizeForActorsCrew"));}

	UCrewFunctions_GetShipSizeForActorsCrew_Params params;
	params.WorldContext = WorldContext;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CrewFunctions.GetCrewIdFromActor
// (FUNC_Delegate)
// Parameters:
// class UObject*                 WorldContext                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Actor                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FGuid                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FGuid UCrewFunctions::GetCrewIdFromActor(class UObject* WorldContext, class AActor* Actor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewFunctions.GetCrewIdFromActor"));}

	UCrewFunctions_GetCrewIdFromActor_Params params;
	params.WorldContext = WorldContext;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CrewFunctions.CreateCrewWithSessionTemplate
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContext                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FGuid                   CrewId                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// struct FCrewSessionTemplate    CrewSessionTemplate            (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// class AAthenaPlayerState*      FirstMember                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCrewFunctions::CreateCrewWithSessionTemplate(class UObject* WorldContext, const struct FGuid& CrewId, const struct FCrewSessionTemplate& CrewSessionTemplate, class AAthenaPlayerState* FirstMember)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewFunctions.CreateCrewWithSessionTemplate"));}

	UCrewFunctions_CreateCrewWithSessionTemplate_Params params;
	params.WorldContext = WorldContext;
	params.CrewId = CrewId;
	params.CrewSessionTemplate = CrewSessionTemplate;
	params.FirstMember = FirstMember;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CrewFunctions.CreateCrew
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContext                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FGuid                   CrewId                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// class AAthenaPlayerState*      FirstMember                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCrewFunctions::CreateCrew(class UObject* WorldContext, const struct FGuid& CrewId, class AAthenaPlayerState* FirstMember)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewFunctions.CreateCrew"));}

	UCrewFunctions_CreateCrew_Params params;
	params.WorldContext = WorldContext;
	params.CrewId = CrewId;
	params.FirstMember = FirstMember;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CrewFunctions.AreInSameCrew
// (FUNC_Final, FUNC_NetServer)
// Parameters:
// struct FGuid                   CrewId1                        (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// struct FGuid                   CrewId2                        (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCrewFunctions::AreInSameCrew(const struct FGuid& CrewId1, const struct FGuid& CrewId2)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewFunctions.AreInSameCrew"));}

	UCrewFunctions_AreInSameCrew_Params params;
	params.CrewId1 = CrewId1;
	params.CrewId2 = CrewId2;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CrewFunctions.AreCharactersInSameCrew
// (FUNC_Final, FUNC_Delegate)
// Parameters:
// class AAthenaCharacter*        Player1                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AAthenaCharacter*        Player2                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UCrewFunctions::AreCharactersInSameCrew(class AAthenaCharacter* Player1, class AAthenaCharacter* Player2)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewFunctions.AreCharactersInSameCrew"));}

	UCrewFunctions_AreCharactersInSameCrew_Params params;
	params.Player1 = Player1;
	params.Player2 = Player2;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CrewFunctions.AddShipToCrew
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContext                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AShip*                   Ship                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FGuid                   CrewId                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UCrewFunctions::AddShipToCrew(class UObject* WorldContext, class AShip* Ship, const struct FGuid& CrewId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewFunctions.AddShipToCrew"));}

	UCrewFunctions_AddShipToCrew_Params params;
	params.WorldContext = WorldContext;
	params.Ship = Ship;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CrewFunctions.AddCharacterToCrew
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContext                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AAthenaCharacter*        Player                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FGuid                   CrewId                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UCrewFunctions::AddCharacterToCrew(class UObject* WorldContext, class AAthenaCharacter* Player, const struct FGuid& CrewId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewFunctions.AddCharacterToCrew"));}

	UCrewFunctions_AddCharacterToCrew_Params params;
	params.WorldContext = WorldContext;
	params.Player = Player;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CrewMembershipInterface.GetLastKnownCrewId
// ()
// Parameters:
// struct FGuid                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FGuid UCrewMembershipInterface::GetLastKnownCrewId()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewMembershipInterface.GetLastKnownCrewId"));}

	UCrewMembershipInterface_GetLastKnownCrewId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CrewMembershipInterface.GetCrewId
// ()
// Parameters:
// struct FGuid                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FGuid UCrewMembershipInterface::GetCrewId()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewMembershipInterface.GetCrewId"));}

	UCrewMembershipInterface_GetCrewId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CrewShipManifest.SetProposedVoyage
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UVoyageProposalDesc*     Proposal                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            SlotIndex                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ACrewShipManifest::SetProposedVoyage(class UVoyageProposalDesc* Proposal, int SlotIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewShipManifest.SetProposedVoyage"));}

	ACrewShipManifest_SetProposedVoyage_Params params;
	params.Proposal = Proposal;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CrewShipManifest.OnRep_VoyageSelectionVoteData
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ACrewShipManifest::OnRep_VoyageSelectionVoteData()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewShipManifest.OnRep_VoyageSelectionVoteData"));}

	ACrewShipManifest_OnRep_VoyageSelectionVoteData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CrewShipManifest.OnRep_VoyageCancelVoteData
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ACrewShipManifest::OnRep_VoyageCancelVoteData()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewShipManifest.OnRep_VoyageCancelVoteData"));}

	ACrewShipManifest_OnRep_VoyageCancelVoteData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CrewShipManifest.OnRep_ProposedVoyages
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ACrewShipManifest::OnRep_ProposedVoyages()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewShipManifest.OnRep_ProposedVoyages"));}

	ACrewShipManifest_OnRep_ProposedVoyages_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CrewShipManifest.OnRep_CurrentActiveVoyage
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ACrewShipManifest::OnRep_CurrentActiveVoyage()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewShipManifest.OnRep_CurrentActiveVoyage"));}

	ACrewShipManifest_OnRep_CurrentActiveVoyage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CrewShipManifest.OnCrewUpdated
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ACrewShipManifest::OnCrewUpdated()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewShipManifest.OnCrewUpdated"));}

	ACrewShipManifest_OnCrewUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CrewShipManifest.IsCurrentVoyageActive
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UVoyageProposalDesc*     Proposal                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ACrewShipManifest::IsCurrentVoyageActive(class UVoyageProposalDesc* Proposal)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewShipManifest.IsCurrentVoyageActive"));}

	ACrewShipManifest_IsCurrentVoyageActive_Params params;
	params.Proposal = Proposal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CrewShipManifest.HasPlayerProposedVoyage
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AAthenaPlayerState*      Proposal                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ACrewShipManifest::HasPlayerProposedVoyage(class AAthenaPlayerState* Proposal)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewShipManifest.HasPlayerProposedVoyage"));}

	ACrewShipManifest_HasPlayerProposedVoyage_Params params;
	params.Proposal = Proposal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CrewShipManifest.GetProposedVoyages
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TArray<struct FProposedVoyageEntry> OutProposedVoyages             (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor)

void ACrewShipManifest::GetProposedVoyages(TArray<struct FProposedVoyageEntry>* OutProposedVoyages)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewShipManifest.GetProposedVoyages"));}

	ACrewShipManifest_GetProposedVoyages_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutProposedVoyages != nullptr)
		*OutProposedVoyages = params.OutProposedVoyages;
}


// Function Athena.CrewVoyageParticipant.OnPlayerStateEndPlay
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EEndPlayReason>    InReason                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UCrewVoyageParticipant::OnPlayerStateEndPlay(TEnumAsByte<EEndPlayReason> InReason)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewVoyageParticipant.OnPlayerStateEndPlay"));}

	UCrewVoyageParticipant_OnPlayerStateEndPlay_Params params;
	params.InReason = InReason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.CrewVoyageParticipant.OnPlayerStateDestroyed
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UCrewVoyageParticipant::OnPlayerStateDestroyed()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CrewVoyageParticipant.OnPlayerStateDestroyed"));}

	UCrewVoyageParticipant_OnPlayerStateDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DamageableInterface.OnDamageableImpact
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Net, FUNC_Protected, FUNC_Delegate, FUNC_HasOutParms)
// Parameters:
// struct FImpactDamageEvent      ImpactDamageEvent              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UDamageableInterface::OnDamageableImpact(const struct FImpactDamageEvent& ImpactDamageEvent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageableInterface.OnDamageableImpact"));}

	UDamageableInterface_OnDamageableImpact_Params params;
	params.ImpactDamageEvent = ImpactDamageEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DamageableInterface.CanApplyDamage
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Net, FUNC_Protected, FUNC_Delegate, FUNC_HasOutParms)
// Parameters:
// struct FImpactDamageEvent      ImpactDamageEvent              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UDamageableInterface::CanApplyDamage(const struct FImpactDamageEvent& ImpactDamageEvent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageableInterface.CanApplyDamage"));}

	UDamageableInterface_CanApplyDamage_Params params;
	params.ImpactDamageEvent = ImpactDamageEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DamageableComponent.OnDamageableImpact
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Net, FUNC_Protected, FUNC_Delegate, FUNC_HasOutParms)
// Parameters:
// struct FImpactDamageEvent      ImpactDamageEvent              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UDamageableComponent::OnDamageableImpact(const struct FImpactDamageEvent& ImpactDamageEvent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageableComponent.OnDamageableImpact"));}

	UDamageableComponent_OnDamageableImpact_Params params;
	params.ImpactDamageEvent = ImpactDamageEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipDamageableComponent.Multicast_DamageTriggered
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FImpactDamageEvent      DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm)

void UShipDamageableComponent::Multicast_DamageTriggered(const struct FImpactDamageEvent& DamageEvent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipDamageableComponent.Multicast_DamageTriggered"));}

	UShipDamageableComponent_Multicast_DamageTriggered_Params params;
	params.DamageEvent = DamageEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DamageBlueprintFunctionLibrary.TriggerShipImpactDamageFromLookAt
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaPlayerCharacter*  AthenaCharacter                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Strength                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<class AActor*>          IgnoreList                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor)

void UDamageBlueprintFunctionLibrary::TriggerShipImpactDamageFromLookAt(class AAthenaPlayerCharacter* AthenaCharacter, float Strength, TArray<class AActor*> IgnoreList)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageBlueprintFunctionLibrary.TriggerShipImpactDamageFromLookAt"));}

	UDamageBlueprintFunctionLibrary_TriggerShipImpactDamageFromLookAt_Params params;
	params.AthenaCharacter = AthenaCharacter;
	params.Strength = Strength;
	params.IgnoreList = IgnoreList;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DamageBlueprintFunctionLibrary.TriggerShipImpactDamageFromLocationAndDirection
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContext                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Strength                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 Location                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 Direction                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<class AActor*>          IgnoreList                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor)

void UDamageBlueprintFunctionLibrary::TriggerShipImpactDamageFromLocationAndDirection(class UObject* WorldContext, float Strength, const struct FVector& Location, const struct FVector& Direction, TArray<class AActor*> IgnoreList)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageBlueprintFunctionLibrary.TriggerShipImpactDamageFromLocationAndDirection"));}

	UDamageBlueprintFunctionLibrary_TriggerShipImpactDamageFromLocationAndDirection_Params params;
	params.WorldContext = WorldContext;
	params.Strength = Strength;
	params.Location = Location;
	params.Direction = Direction;
	params.IgnoreList = IgnoreList;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DamageBlueprintFunctionLibrary.TriggerPlayerImpactDamageFromLookAt
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaPlayerCharacter*  AthenaCharacter                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Strength                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<class AActor*>          IgnoreList                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor)

void UDamageBlueprintFunctionLibrary::TriggerPlayerImpactDamageFromLookAt(class AAthenaPlayerCharacter* AthenaCharacter, float Strength, TArray<class AActor*> IgnoreList)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageBlueprintFunctionLibrary.TriggerPlayerImpactDamageFromLookAt"));}

	UDamageBlueprintFunctionLibrary_TriggerPlayerImpactDamageFromLookAt_Params params;
	params.AthenaCharacter = AthenaCharacter;
	params.Strength = Strength;
	params.IgnoreList = IgnoreList;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DamageBlueprintFunctionLibrary.TriggerPlayerImpactDamageFromLocationAndDirection
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContext                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Strength                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 Location                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 Direction                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<class AActor*>          IgnoreList                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor)

void UDamageBlueprintFunctionLibrary::TriggerPlayerImpactDamageFromLocationAndDirection(class UObject* WorldContext, float Strength, const struct FVector& Location, const struct FVector& Direction, TArray<class AActor*> IgnoreList)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageBlueprintFunctionLibrary.TriggerPlayerImpactDamageFromLocationAndDirection"));}

	UDamageBlueprintFunctionLibrary_TriggerPlayerImpactDamageFromLocationAndDirection_Params params;
	params.WorldContext = WorldContext;
	params.Strength = Strength;
	params.Location = Location;
	params.Direction = Direction;
	params.IgnoreList = IgnoreList;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DeadActionStateId.PushCharacterIntoDeadActionState
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FDamageInstance         FinalBlow                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// TEnumAsByte<ECharacterDeathType> DeathType                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UDeadActionStateId::PushCharacterIntoDeadActionState(class AActor* Character, const struct FDamageInstance& FinalBlow, TEnumAsByte<ECharacterDeathType> DeathType)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DeadActionStateId.PushCharacterIntoDeadActionState"));}

	UDeadActionStateId_PushCharacterIntoDeadActionState_Params params;
	params.Character = Character;
	params.FinalBlow = FinalBlow;
	params.DeathType = DeathType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DebugFlyingActionStateId.PushCharacterIntoDebugFlyingActionState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EActionStateMachineTrackId> TrackId                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UDebugFlyingActionStateId::PushCharacterIntoDebugFlyingActionState(TEnumAsByte<EActionStateMachineTrackId> TrackId, class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugFlyingActionStateId.PushCharacterIntoDebugFlyingActionState"));}

	UDebugFlyingActionStateId_PushCharacterIntoDebugFlyingActionState_Params params;
	params.TrackId = TrackId;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DebugFlyingCompositeInputHandler.OnTurnRate
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UDebugFlyingCompositeInputHandler::OnTurnRate(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugFlyingCompositeInputHandler.OnTurnRate"));}

	UDebugFlyingCompositeInputHandler_OnTurnRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DebugFlyingCompositeInputHandler.OnTurn
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UDebugFlyingCompositeInputHandler::OnTurn(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugFlyingCompositeInputHandler.OnTurn"));}

	UDebugFlyingCompositeInputHandler_OnTurn_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DebugFlyingCompositeInputHandler.OnMoveUp
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UDebugFlyingCompositeInputHandler::OnMoveUp(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugFlyingCompositeInputHandler.OnMoveUp"));}

	UDebugFlyingCompositeInputHandler_OnMoveUp_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DebugFlyingCompositeInputHandler.OnMoveRight
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UDebugFlyingCompositeInputHandler::OnMoveRight(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugFlyingCompositeInputHandler.OnMoveRight"));}

	UDebugFlyingCompositeInputHandler_OnMoveRight_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DebugFlyingCompositeInputHandler.OnMoveForward
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UDebugFlyingCompositeInputHandler::OnMoveForward(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugFlyingCompositeInputHandler.OnMoveForward"));}

	UDebugFlyingCompositeInputHandler_OnMoveForward_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DebugFlyingCompositeInputHandler.OnLookUpRate
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UDebugFlyingCompositeInputHandler::OnLookUpRate(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugFlyingCompositeInputHandler.OnLookUpRate"));}

	UDebugFlyingCompositeInputHandler_OnLookUpRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DebugFlyingCompositeInputHandler.OnLookUp
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UDebugFlyingCompositeInputHandler::OnLookUp(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugFlyingCompositeInputHandler.OnLookUp"));}

	UDebugFlyingCompositeInputHandler_OnLookUp_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DebugFlyingCompositeInputHandler.OnDisengageInput
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UDebugFlyingCompositeInputHandler::OnDisengageInput()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugFlyingCompositeInputHandler.OnDisengageInput"));}

	UDebugFlyingCompositeInputHandler_OnDisengageInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DebugLandmarkLocation.EnableDrawingForAllMachines_RPC
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           Flag                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ADebugLandmarkLocation::EnableDrawingForAllMachines_RPC(bool Flag)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugLandmarkLocation.EnableDrawingForAllMachines_RPC"));}

	ADebugLandmarkLocation_EnableDrawingForAllMachines_RPC_Params params;
	params.Flag = Flag;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DebugShipControlActionStateId.PushCharacterIntoDebugShipControlActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EActionStateMachineTrackId> TrackId                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class ADebugShipController*    DebugShipController            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Owner                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UDebugShipControlActionStateId::PushCharacterIntoDebugShipControlActionState(TEnumAsByte<EActionStateMachineTrackId> TrackId, class ADebugShipController* DebugShipController, class AActor* Owner)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugShipControlActionStateId.PushCharacterIntoDebugShipControlActionState"));}

	UDebugShipControlActionStateId_PushCharacterIntoDebugShipControlActionState_Params params;
	params.TrackId = TrackId;
	params.DebugShipController = DebugShipController;
	params.Owner = Owner;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DebugShipControlCompositeInputHandler.OnTurnRate
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UDebugShipControlCompositeInputHandler::OnTurnRate(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugShipControlCompositeInputHandler.OnTurnRate"));}

	UDebugShipControlCompositeInputHandler_OnTurnRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DebugShipControlCompositeInputHandler.OnMoveRight
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UDebugShipControlCompositeInputHandler::OnMoveRight(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugShipControlCompositeInputHandler.OnMoveRight"));}

	UDebugShipControlCompositeInputHandler_OnMoveRight_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DebugShipControlCompositeInputHandler.OnLookUpRate
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UDebugShipControlCompositeInputHandler::OnLookUpRate(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugShipControlCompositeInputHandler.OnLookUpRate"));}

	UDebugShipControlCompositeInputHandler_OnLookUpRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DebugShipControlCompositeInputHandler.OnJump
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UDebugShipControlCompositeInputHandler::OnJump()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugShipControlCompositeInputHandler.OnJump"));}

	UDebugShipControlCompositeInputHandler_OnJump_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DebugShipFunctionLibrary.SetAllWheelAngle
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Ship                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Angle                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UDebugShipFunctionLibrary::SetAllWheelAngle(class AActor* Ship, float Angle)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugShipFunctionLibrary.SetAllWheelAngle"));}

	UDebugShipFunctionLibrary_SetAllWheelAngle_Params params;
	params.Ship = Ship;
	params.Angle = Angle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DebugShipFunctionLibrary.SetAllSailsLoweredProportion
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Ship                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Proportion                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UDebugShipFunctionLibrary::SetAllSailsLoweredProportion(class AActor* Ship, float Proportion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugShipFunctionLibrary.SetAllSailsLoweredProportion"));}

	UDebugShipFunctionLibrary_SetAllSailsLoweredProportion_Params params;
	params.Ship = Ship;
	params.Proportion = Proportion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DebugShipFunctionLibrary.SetAllSailsDamageScalar
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Ship                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Proportion                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UDebugShipFunctionLibrary::SetAllSailsDamageScalar(class AActor* Ship, float Proportion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugShipFunctionLibrary.SetAllSailsDamageScalar"));}

	UDebugShipFunctionLibrary_SetAllSailsDamageScalar_Params params;
	params.Ship = Ship;
	params.Proportion = Proportion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DebugShipFunctionLibrary.SetAllSailsAngle
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Ship                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Angle                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UDebugShipFunctionLibrary::SetAllSailsAngle(class AActor* Ship, float Angle)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugShipFunctionLibrary.SetAllSailsAngle"));}

	UDebugShipFunctionLibrary_SetAllSailsAngle_Params params;
	params.Ship = Ship;
	params.Angle = Angle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DebugShipFunctionLibrary.SetAllRuddersAngleRatio
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Ship                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          InRudderAngleRatio             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UDebugShipFunctionLibrary::SetAllRuddersAngleRatio(class AActor* Ship, float InRudderAngleRatio)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugShipFunctionLibrary.SetAllRuddersAngleRatio"));}

	UDebugShipFunctionLibrary_SetAllRuddersAngleRatio_Params params;
	params.Ship = Ship;
	params.InRudderAngleRatio = InRudderAngleRatio;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DebugShipFunctionLibrary.SetAllCapstansPosition
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Ship                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Position                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UDebugShipFunctionLibrary::SetAllCapstansPosition(class AActor* Ship, float Position)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugShipFunctionLibrary.SetAllCapstansPosition"));}

	UDebugShipFunctionLibrary_SetAllCapstansPosition_Params params;
	params.Ship = Ship;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DebugShipFunctionLibrary.SetAllCannonsAim
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Ship                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Pitch                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Yaw                            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UDebugShipFunctionLibrary::SetAllCannonsAim(class AActor* Ship, float Pitch, float Yaw)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugShipFunctionLibrary.SetAllCannonsAim"));}

	UDebugShipFunctionLibrary_SetAllCannonsAim_Params params;
	params.Ship = Ship;
	params.Pitch = Pitch;
	params.Yaw = Yaw;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DebugShipFunctionLibrary.SetAllAnchorsLoweredProportion
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Ship                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          InLoweredProportion            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UDebugShipFunctionLibrary::SetAllAnchorsLoweredProportion(class AActor* Ship, float InLoweredProportion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugShipFunctionLibrary.SetAllAnchorsLoweredProportion"));}

	UDebugShipFunctionLibrary_SetAllAnchorsLoweredProportion_Params params;
	params.Ship = Ship;
	params.InLoweredProportion = InLoweredProportion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DebugShipFunctionLibrary.RotateAllMastsSailAngles
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TArray<class AActor*>          Masts                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm)
// float                          DeltaSeconds                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          PercentPerSec                  (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UDebugShipFunctionLibrary::RotateAllMastsSailAngles(TArray<class AActor*> Masts, float DeltaSeconds, float* PercentPerSec)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugShipFunctionLibrary.RotateAllMastsSailAngles"));}

	UDebugShipFunctionLibrary_RotateAllMastsSailAngles_Params params;
	params.Masts = Masts;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (PercentPerSec != nullptr)
		*PercentPerSec = params.PercentPerSec;
}


// Function Athena.DebugShipFunctionLibrary.FireEveryNthCannons
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Ship                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            EveryNthCannons                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UDebugShipFunctionLibrary::FireEveryNthCannons(class AActor* Ship, int EveryNthCannons)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugShipFunctionLibrary.FireEveryNthCannons"));}

	UDebugShipFunctionLibrary_FireEveryNthCannons_Params params;
	params.Ship = Ship;
	params.EveryNthCannons = EveryNthCannons;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DebugShipFunctionLibrary.FireCannonEveryXSecond
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TArray<class AActor*>          Cannons                        (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm)
// float                          DeltaSeconds                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          SecondsBetweenShots            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Accumulator                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// int                            CannonIndex                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UDebugShipFunctionLibrary::FireCannonEveryXSecond(TArray<class AActor*> Cannons, float DeltaSeconds, float SecondsBetweenShots, float* Accumulator, int* CannonIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugShipFunctionLibrary.FireCannonEveryXSecond"));}

	UDebugShipFunctionLibrary_FireCannonEveryXSecond_Params params;
	params.Cannons = Cannons;
	params.DeltaSeconds = DeltaSeconds;
	params.SecondsBetweenShots = SecondsBetweenShots;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Accumulator != nullptr)
		*Accumulator = params.Accumulator;
	if (CannonIndex != nullptr)
		*CannonIndex = params.CannonIndex;
}


// Function Athena.DebugShipFunctionLibrary.FireAllCannons
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Ship                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UDebugShipFunctionLibrary::FireAllCannons(class AActor* Ship)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugShipFunctionLibrary.FireAllCannons"));}

	UDebugShipFunctionLibrary_FireAllCannons_Params params;
	params.Ship = Ship;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DebugShipFunctionLibrary.CycleAllMastsSailLowered
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TArray<class AActor*>          Masts                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm)
// float                          DeltaSeconds                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          PercentPerSec                  (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UDebugShipFunctionLibrary::CycleAllMastsSailLowered(TArray<class AActor*> Masts, float DeltaSeconds, float* PercentPerSec)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugShipFunctionLibrary.CycleAllMastsSailLowered"));}

	UDebugShipFunctionLibrary_CycleAllMastsSailLowered_Params params;
	params.Masts = Masts;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (PercentPerSec != nullptr)
		*PercentPerSec = params.PercentPerSec;
}


// Function Athena.DebugSuperSailorActionStateId.PushCharacterIntoDebugSuperSailorActionState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EActionStateMachineTrackId> TrackId                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UDebugSuperSailorActionStateId::PushCharacterIntoDebugSuperSailorActionState(TEnumAsByte<EActionStateMachineTrackId> TrackId, class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugSuperSailorActionStateId.PushCharacterIntoDebugSuperSailorActionState"));}

	UDebugSuperSailorActionStateId_PushCharacterIntoDebugSuperSailorActionState_Params params;
	params.TrackId = TrackId;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DebugSuperSailorCompositeInputHandler.OnRightTrigger
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UDebugSuperSailorCompositeInputHandler::OnRightTrigger(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugSuperSailorCompositeInputHandler.OnRightTrigger"));}

	UDebugSuperSailorCompositeInputHandler_OnRightTrigger_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DebugSuperSailorCompositeInputHandler.OnMoveRight
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UDebugSuperSailorCompositeInputHandler::OnMoveRight(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugSuperSailorCompositeInputHandler.OnMoveRight"));}

	UDebugSuperSailorCompositeInputHandler_OnMoveRight_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DebugSuperSailorCompositeInputHandler.OnMoveForward
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UDebugSuperSailorCompositeInputHandler::OnMoveForward(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugSuperSailorCompositeInputHandler.OnMoveForward"));}

	UDebugSuperSailorCompositeInputHandler_OnMoveForward_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DebugSuperSailorCompositeInputHandler.OnDisengageInput
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UDebugSuperSailorCompositeInputHandler::OnDisengageInput()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugSuperSailorCompositeInputHandler.OnDisengageInput"));}

	UDebugSuperSailorCompositeInputHandler_OnDisengageInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DebugTreasureLocation.EnableDrawingForAllMachines_RPC
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           Flag                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ADebugTreasureLocation::EnableDrawingForAllMachines_RPC(bool Flag)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugTreasureLocation.EnableDrawingForAllMachines_RPC"));}

	ADebugTreasureLocation_EnableDrawingForAllMachines_RPC_Params params;
	params.Flag = Flag;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DitherComponent.SetCurrentTransparency
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Val                            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UDitherComponent::SetCurrentTransparency(float Val)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DitherComponent.SetCurrentTransparency"));}

	UDitherComponent_SetCurrentTransparency_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DitherComponent.FadeOut
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UDitherComponent::FadeOut()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DitherComponent.FadeOut"));}

	UDitherComponent_FadeOut_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DitherComponent.FadeIn
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UDitherComponent::FadeIn()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DitherComponent.FadeIn"));}

	UDitherComponent_FadeIn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DitherFunctionLibrary.DisableDitheringOnMaterial
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UMaterialInstance*       Material                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UDitherFunctionLibrary::DisableDitheringOnMaterial(class UMaterialInstance* Material)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DitherFunctionLibrary.DisableDitheringOnMaterial"));}

	UDitherFunctionLibrary_DisableDitheringOnMaterial_Params params;
	params.Material = Material;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DockToObjectCompositeInputHandler.OnDisengage
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UDockToObjectCompositeInputHandler::OnDisengage()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DockToObjectCompositeInputHandler.OnDisengage"));}

	UDockToObjectCompositeInputHandler_OnDisengage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DrawDebugService.OnRep_ReplicatedItems
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ADrawDebugService::OnRep_ReplicatedItems()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DrawDebugService.OnRep_ReplicatedItems"));}

	ADrawDebugService_OnRep_ReplicatedItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WaterModifierZoneInterface.GetWaterModifierZoneType
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UClass*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UClass* UWaterModifierZoneInterface::GetWaterModifierZoneType()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WaterModifierZoneInterface.GetWaterModifierZoneType"));}

	UWaterModifierZoneInterface_GetWaterModifierZoneType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WaterModifierZoneInterface.GetWaterModifierZoneParameters
// (FUNC_Net)
// Parameters:
// struct FWaterModifierZoneParametersAndLocation ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FWaterModifierZoneParametersAndLocation UWaterModifierZoneInterface::GetWaterModifierZoneParameters()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WaterModifierZoneInterface.GetWaterModifierZoneParameters"));}

	UWaterModifierZoneInterface_GetWaterModifierZoneParameters_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WaterModifierZoneServiceInterface.UnregisterWaterModifierZoneFromService
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TScriptInterface<class UWaterModifierZoneInterface> WaterModifierZone              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UWaterModifierZoneServiceInterface::UnregisterWaterModifierZoneFromService(const TScriptInterface<class UWaterModifierZoneInterface>& WaterModifierZone)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WaterModifierZoneServiceInterface.UnregisterWaterModifierZoneFromService"));}

	UWaterModifierZoneServiceInterface_UnregisterWaterModifierZoneFromService_Params params;
	params.WaterModifierZone = WaterModifierZone;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WaterModifierZoneServiceInterface.RegisterWaterModifierZoneWithService
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TScriptInterface<class UWaterModifierZoneInterface> WaterModifierZone              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UWaterModifierZoneServiceInterface::RegisterWaterModifierZoneWithService(const TScriptInterface<class UWaterModifierZoneInterface>& WaterModifierZone)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WaterModifierZoneServiceInterface.RegisterWaterModifierZoneWithService"));}

	UWaterModifierZoneServiceInterface_RegisterWaterModifierZoneWithService_Params params;
	params.WaterModifierZone = WaterModifierZone;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WaterModifierZoneServiceInterface.GetWaterModifierZones
// (FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  Type                           (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// TArray<struct FWaterModifierZoneParametersAndLocation> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<struct FWaterModifierZoneParametersAndLocation> UWaterModifierZoneServiceInterface::GetWaterModifierZones(class UClass* Type)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WaterModifierZoneServiceInterface.GetWaterModifierZones"));}

	UWaterModifierZoneServiceInterface_GetWaterModifierZones_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WaterModifierZoneServiceInterface.GetWaterModifierZone
// (FUNC_BlueprintAuthorityOnly, FUNC_Net, FUNC_Private)
// Parameters:
// int                            WaterModifierZoneIndex         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FWaterModifierZoneParametersAndLocation ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FWaterModifierZoneParametersAndLocation UWaterModifierZoneServiceInterface::GetWaterModifierZone(int WaterModifierZoneIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WaterModifierZoneServiceInterface.GetWaterModifierZone"));}

	UWaterModifierZoneServiceInterface_GetWaterModifierZone_Params params;
	params.WaterModifierZoneIndex = WaterModifierZoneIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WaterModifierZoneServiceInterface.GetWaterModifierStrength
// (FUNC_BlueprintCosmetic, FUNC_Private, FUNC_Delegate)
// Parameters:
// class UClass*                  Type                           (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// struct FVector                 Position                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UWaterModifierZoneServiceInterface::GetWaterModifierStrength(class UClass* Type, const struct FVector& Position)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WaterModifierZoneServiceInterface.GetWaterModifierStrength"));}

	UWaterModifierZoneServiceInterface_GetWaterModifierStrength_Params params;
	params.Type = Type;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WaterModifierZoneServiceInterface.GetWaterModifierDrowningParams
// (FUNC_Net, FUNC_Private, FUNC_NetServer)
// Parameters:
// class AAthenaCharacter*        Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FBlendableDrowningParams DefaultParams                  (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// struct FBlendableDrowningParams ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FBlendableDrowningParams UWaterModifierZoneServiceInterface::GetWaterModifierDrowningParams(class AAthenaCharacter* Actor, const struct FBlendableDrowningParams& DefaultParams)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WaterModifierZoneServiceInterface.GetWaterModifierDrowningParams"));}

	UWaterModifierZoneServiceInterface_GetWaterModifierDrowningParams_Params params;
	params.Actor = Actor;
	params.DefaultParams = DefaultParams;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WaterModifierZoneServiceInterface.GetNumberOfWaterModifierZonesByType
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  Type                           (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UWaterModifierZoneServiceInterface::GetNumberOfWaterModifierZonesByType(class UClass* Type)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WaterModifierZoneServiceInterface.GetNumberOfWaterModifierZonesByType"));}

	UWaterModifierZoneServiceInterface_GetNumberOfWaterModifierZonesByType_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WaterModifierZoneServiceInterface.GetNumberOfWaterModifierZones
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UWaterModifierZoneServiceInterface::GetNumberOfWaterModifierZones()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WaterModifierZoneServiceInterface.GetNumberOfWaterModifierZones"));}

	UWaterModifierZoneServiceInterface_GetNumberOfWaterModifierZones_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WaterModifierZoneServiceInterface.GetDragScalarAtLocation
// (FUNC_Private, FUNC_Protected)
// Parameters:
// struct FVector                 Position                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UWaterModifierZoneServiceInterface::GetDragScalarAtLocation(const struct FVector& Position)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WaterModifierZoneServiceInterface.GetDragScalarAtLocation"));}

	UWaterModifierZoneServiceInterface_GetDragScalarAtLocation_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WaterModifierZoneServiceInterface.GetAllWaterModifierZones
// ()
// Parameters:
// TArray<struct FWaterModifierZoneParametersAndLocation> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<struct FWaterModifierZoneParametersAndLocation> UWaterModifierZoneServiceInterface::GetAllWaterModifierZones()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WaterModifierZoneServiceInterface.GetAllWaterModifierZones"));}

	UWaterModifierZoneServiceInterface_GetAllWaterModifierZones_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DrowningComponent.OnRep_CurrentOxygen
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UDrowningComponent::OnRep_CurrentOxygen()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DrowningComponent.OnRep_CurrentOxygen"));}

	UDrowningComponent_OnRep_CurrentOxygen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DrowningComponent.GetOxygenLevel
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UDrowningComponent::GetOxygenLevel()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DrowningComponent.GetOxygenLevel"));}

	UDrowningComponent_GetOxygenLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DrunkennessComponent.TestForceVomiting
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Duration                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UDrunkennessComponent::TestForceVomiting(float Duration)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DrunkennessComponent.TestForceVomiting"));}

	UDrunkennessComponent_TestForceVomiting_Params params;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DrunkennessComponent.SetTargetDrunkenness_RPC
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EDrunkennessType>  Type                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bInstantlySetActualToTarget    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UDrunkennessComponent::SetTargetDrunkenness_RPC(TEnumAsByte<EDrunkennessType> Type, float Value, bool bInstantlySetActualToTarget)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DrunkennessComponent.SetTargetDrunkenness_RPC"));}

	UDrunkennessComponent_SetTargetDrunkenness_RPC_Params params;
	params.Type = Type;
	params.Value = Value;
	params.bInstantlySetActualToTarget = bInstantlySetActualToTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DrunkennessComponent.SetTargetDrunkenness
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EDrunkennessType>  Type                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          TargetDrunkeness               (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UDrunkennessComponent::SetTargetDrunkenness(TEnumAsByte<EDrunkennessType> Type, float TargetDrunkeness)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DrunkennessComponent.SetTargetDrunkenness"));}

	UDrunkennessComponent_SetTargetDrunkenness_Params params;
	params.Type = Type;
	params.TargetDrunkeness = TargetDrunkeness;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DrunkennessComponent.Reset
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UDrunkennessComponent::Reset()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DrunkennessComponent.Reset"));}

	UDrunkennessComponent_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DrunkennessComponent.OnRep_RemainingAmountToSoberUpDueToWaterSplash
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UDrunkennessComponent::OnRep_RemainingAmountToSoberUpDueToWaterSplash()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DrunkennessComponent.OnRep_RemainingAmountToSoberUpDueToWaterSplash"));}

	UDrunkennessComponent_OnRep_RemainingAmountToSoberUpDueToWaterSplash_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DrunkennessComponent.OnRep_CurrentDrunkenness
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UDrunkennessComponent::OnRep_CurrentDrunkenness()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DrunkennessComponent.OnRep_CurrentDrunkenness"));}

	UDrunkennessComponent_OnRep_CurrentDrunkenness_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DrunkennessComponent.GetVomitComponent
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UVomitComponent*         ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData)

class UVomitComponent* UDrunkennessComponent::GetVomitComponent()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DrunkennessComponent.GetVomitComponent"));}

	UDrunkennessComponent_GetVomitComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DrunkennessComponent.GetStaggerAmplitude
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UDrunkennessComponent::GetStaggerAmplitude()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DrunkennessComponent.GetStaggerAmplitude"));}

	UDrunkennessComponent_GetStaggerAmplitude_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DrunkennessComponent.GetOverallCurrentDrunkenness
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UDrunkennessComponent::GetOverallCurrentDrunkenness()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DrunkennessComponent.GetOverallCurrentDrunkenness"));}

	UDrunkennessComponent_GetOverallCurrentDrunkenness_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DrunkennessComponent.ChangeDrunkenness
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EDrunkennessType>  Type                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          DrunkennessChange              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UDrunkennessComponent::ChangeDrunkenness(TEnumAsByte<EDrunkennessType> Type, float DrunkennessChange)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DrunkennessComponent.ChangeDrunkenness"));}

	UDrunkennessComponent_ChangeDrunkenness_Params params;
	params.Type = Type;
	params.DrunkennessChange = DrunkennessChange;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DynamicFlowComponent.SetTexture
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UTexture*                SourceTexture                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UDynamicFlowComponent::SetTexture(class UObject* WorldContextObject, class UTexture* SourceTexture)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DynamicFlowComponent.SetTexture"));}

	UDynamicFlowComponent_SetTexture_Params params;
	params.WorldContextObject = WorldContextObject;
	params.SourceTexture = SourceTexture;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DynamicFlowComponent.GetTexture
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UTexture*                ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UTexture* UDynamicFlowComponent::GetTexture()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DynamicFlowComponent.GetTexture"));}

	UDynamicFlowComponent_GetTexture_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DynamicFlowComponent.ClearTexture
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FLinearColor            ClearColor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UDynamicFlowComponent::ClearTexture(const struct FLinearColor& ClearColor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DynamicFlowComponent.ClearTexture"));}

	UDynamicFlowComponent_ClearTexture_Params params;
	params.ClearColor = ClearColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.EmoteActionStateId.PushCharacterIntoEmoteActionState
// (FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FEmoteData              EmoteData                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UEmoteActionStateId::PushCharacterIntoEmoteActionState(class AActor* Character, const struct FEmoteData& EmoteData)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.EmoteActionStateId.PushCharacterIntoEmoteActionState"));}

	UEmoteActionStateId_PushCharacterIntoEmoteActionState_Params params;
	params.Character = Character;
	params.EmoteData = EmoteData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.EmoteCompositeInputHandler.OnZoomOut
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UEmoteCompositeInputHandler::OnZoomOut(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.EmoteCompositeInputHandler.OnZoomOut"));}

	UEmoteCompositeInputHandler_OnZoomOut_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.EmoteCompositeInputHandler.OnZoomMouse
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UEmoteCompositeInputHandler::OnZoomMouse(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.EmoteCompositeInputHandler.OnZoomMouse"));}

	UEmoteCompositeInputHandler_OnZoomMouse_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.EmoteCompositeInputHandler.OnZoomIn
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UEmoteCompositeInputHandler::OnZoomIn(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.EmoteCompositeInputHandler.OnZoomIn"));}

	UEmoteCompositeInputHandler_OnZoomIn_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.EmoteCompositeInputHandler.OnTurnRate
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UEmoteCompositeInputHandler::OnTurnRate(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.EmoteCompositeInputHandler.OnTurnRate"));}

	UEmoteCompositeInputHandler_OnTurnRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.EmoteCompositeInputHandler.OnTurn
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UEmoteCompositeInputHandler::OnTurn(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.EmoteCompositeInputHandler.OnTurn"));}

	UEmoteCompositeInputHandler_OnTurn_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.EmoteCompositeInputHandler.OnMoveRight
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UEmoteCompositeInputHandler::OnMoveRight(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.EmoteCompositeInputHandler.OnMoveRight"));}

	UEmoteCompositeInputHandler_OnMoveRight_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.EmoteCompositeInputHandler.OnMoveForward
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UEmoteCompositeInputHandler::OnMoveForward(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.EmoteCompositeInputHandler.OnMoveForward"));}

	UEmoteCompositeInputHandler_OnMoveForward_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.EmoteCompositeInputHandler.OnLookUpRate
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UEmoteCompositeInputHandler::OnLookUpRate(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.EmoteCompositeInputHandler.OnLookUpRate"));}

	UEmoteCompositeInputHandler_OnLookUpRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.EmoteCompositeInputHandler.OnLookUp
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UEmoteCompositeInputHandler::OnLookUp(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.EmoteCompositeInputHandler.OnLookUp"));}

	UEmoteCompositeInputHandler_OnLookUp_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.EmoteCompositeInputHandler.OnJump
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UEmoteCompositeInputHandler::OnJump()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.EmoteCompositeInputHandler.OnJump"));}

	UEmoteCompositeInputHandler_OnJump_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.EmoteCompositeInputHandler.OnCancel
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UEmoteCompositeInputHandler::OnCancel()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.EmoteCompositeInputHandler.OnCancel"));}

	UEmoteCompositeInputHandler_OnCancel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.EmotesRadialComponent.GetNumSlots
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UEmotesRadialComponent::GetNumSlots()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.EmotesRadialComponent.GetNumSlots"));}

	UEmotesRadialComponent_GetNumSlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.EmotesRadialComponent.GetLastSelectedItem
// (FUNC_BlueprintCosmetic)
// Parameters:
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* UEmotesRadialComponent::GetLastSelectedItem()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.EmotesRadialComponent.GetLastSelectedItem"));}

	UEmotesRadialComponent_GetLastSelectedItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.EmotesRadialComponent.DeactivateRadialInventory
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UEmotesRadialComponent::DeactivateRadialInventory()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.EmotesRadialComponent.DeactivateRadialInventory"));}

	UEmotesRadialComponent_DeactivateRadialInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.EncounterService.StopListeningForEncounters
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  EncounterListenerActor         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UEncounterService::StopListeningForEncounters(class AActor* EncounterListenerActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.EncounterService.StopListeningForEncounters"));}

	UEncounterService_StopListeningForEncounters_Params params;
	params.EncounterListenerActor = EncounterListenerActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Ensemble.OnRep_Instruments
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AEnsemble::OnRep_Instruments()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ensemble.OnRep_Instruments"));}

	AEnsemble_OnRep_Instruments_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Ensemble.GetNumInstruments
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int AEnsemble::GetNumInstruments()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ensemble.GetNumInstruments"));}

	AEnsemble_GetNumInstruments_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Ensemble.GetNumInstrumentData
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int AEnsemble::GetNumInstrumentData()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ensemble.GetNumInstrumentData"));}

	AEnsemble_GetNumInstrumentData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Ensemble.GetInstrumentDataPlaybackPosition
// (FUNC_BlueprintCosmetic, FUNC_Private)
// Parameters:
// int                            Index                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int AEnsemble::GetInstrumentDataPlaybackPosition(int Index)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ensemble.GetInstrumentDataPlaybackPosition"));}

	AEnsemble_GetInstrumentDataPlaybackPosition_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.UsableInterface.UpdateUsage
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          DeltaTime                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UUsableInterface::UpdateUsage(float DeltaTime)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UsableInterface.UpdateUsage"));}

	UUsableInterface_UpdateUsage_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.UsableInterface.StopUsing
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  InputID                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UUsableInterface::StopUsing(class UClass* InputID)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UsableInterface.StopUsing"));}

	UUsableInterface_StopUsing_Params params;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.UsableInterface.StartUsing
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  InputID                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UUsableInterface::StartUsing(class UClass* InputID)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UsableInterface.StartUsing"));}

	UUsableInterface_StartUsing_Params params;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.UsableInterface.IsBeingUsed
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UUsableInterface::IsBeingUsed()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UsableInterface.IsBeingUsed"));}

	UUsableInterface_IsBeingUsed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.UsableInterface.CanBeUsed
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UUsableInterface::CanBeUsed()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UsableInterface.CanBeUsed"));}

	UUsableInterface_CanBeUsed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.NamedNotificationInputInterface.GetNotificationInputDisplayName
// (FUNC_Protected)
// Parameters:
// class UClass*                  InputID                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FText                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FText UNamedNotificationInputInterface::GetNotificationInputDisplayName(class UClass* InputID)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.NamedNotificationInputInterface.GetNotificationInputDisplayName"));}

	UNamedNotificationInputInterface_GetNotificationInputDisplayName_Params params;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryItemComponent.SetItemType
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EItemType>         InType                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UInventoryItemComponent::SetItemType(TEnumAsByte<EItemType> InType)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryItemComponent.SetItemType"));}

	UInventoryItemComponent_SetItemType_Params params;
	params.InType = InType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryItemComponent.SetIconURL
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FStringAssetReference   InIconURL                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm)

void UInventoryItemComponent::SetIconURL(const struct FStringAssetReference& InIconURL)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryItemComponent.SetIconURL"));}

	UInventoryItemComponent_SetIconURL_Params params;
	params.InIconURL = InIconURL;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryItemComponent.SetIconRotation
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          InIconRotation                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UInventoryItemComponent::SetIconRotation(float InIconRotation)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryItemComponent.SetIconRotation"));}

	UInventoryItemComponent_SetIconRotation_Params params;
	params.InIconRotation = InIconRotation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryItemComponent.OnAddedToInventory
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UInventoryItemComponent::OnAddedToInventory()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryItemComponent.OnAddedToInventory"));}

	UInventoryItemComponent_OnAddedToInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryItemComponent.GetItemType
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EItemType>         ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EItemType> UInventoryItemComponent::GetItemType()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryItemComponent.GetItemType"));}

	UInventoryItemComponent_GetItemType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryItemComponent.GetIconURL
// ()
// Parameters:
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

struct FString UInventoryItemComponent::GetIconURL()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryItemComponent.GetIconURL"));}

	UInventoryItemComponent_GetIconURL_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryItemComponent.GetIconScale
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UInventoryItemComponent::GetIconScale()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryItemComponent.GetIconScale"));}

	UInventoryItemComponent_GetIconScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryItemComponent.GetIconRotation
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UInventoryItemComponent::GetIconRotation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryItemComponent.GetIconRotation"));}

	UInventoryItemComponent_GetIconRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.IslandServiceInterface.OnCrewSpawningOnIsland
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FName                   IslandName                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UIslandServiceInterface::OnCrewSpawningOnIsland(const struct FName& IslandName)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.IslandServiceInterface.OnCrewSpawningOnIsland"));}

	UIslandServiceInterface_OnCrewSpawningOnIsland_Params params;
	params.IslandName = IslandName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.IslandServiceInterface.GetAllIslandNames
// ()
// Parameters:
// TArray<struct FName>           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<struct FName> UIslandServiceInterface::GetAllIslandNames()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.IslandServiceInterface.GetAllIslandNames"));}

	UIslandServiceInterface_GetAllIslandNames_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.HitReactionInterface.OnHitReactionImpact
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FImpactDamageEvent      ImpactDamageEvent              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UHitReactionInterface::OnHitReactionImpact(const struct FImpactDamageEvent& ImpactDamageEvent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HitReactionInterface.OnHitReactionImpact"));}

	UHitReactionInterface_OnHitReactionImpact_Params params;
	params.ImpactDamageEvent = ImpactDamageEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ExplosiveComponent.Multicast_Explode
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UExplosiveComponent::Multicast_Explode()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ExplosiveComponent.Multicast_Explode"));}

	UExplosiveComponent_Multicast_Explode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.FaceTargetComponent.OnRep_TargetActorToFace
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  PrevTargetActorToFace          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UFaceTargetComponent::OnRep_TargetActorToFace(class AActor* PrevTargetActorToFace)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaceTargetComponent.OnRep_TargetActorToFace"));}

	UFaceTargetComponent_OnRep_TargetActorToFace_Params params;
	params.PrevTargetActorToFace = PrevTargetActorToFace;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Fauna.TestingSetWaterState
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EFaunaInWaterState> NewInState                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AFauna::TestingSetWaterState(TEnumAsByte<EFaunaInWaterState> NewInState)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Fauna.TestingSetWaterState"));}

	AFauna_TestingSetWaterState_Params params;
	params.NewInState = NewInState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Fauna.SetAIStrategy
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  InStrategy                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AFauna::SetAIStrategy(class UClass* InStrategy)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Fauna.SetAIStrategy"));}

	AFauna_SetAIStrategy_Params params;
	params.InStrategy = InStrategy;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Fauna.OnRep_TargetTurnAngle
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AFauna::OnRep_TargetTurnAngle()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Fauna.OnRep_TargetTurnAngle"));}

	AFauna_OnRep_TargetTurnAngle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Fauna.OnRep_IsPlayingStarvingAnim
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AFauna::OnRep_IsPlayingStarvingAnim()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Fauna.OnRep_IsPlayingStarvingAnim"));}

	AFauna_OnRep_IsPlayingStarvingAnim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Fauna.OnRep_IsCalm
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AFauna::OnRep_IsCalm()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Fauna.OnRep_IsCalm"));}

	AFauna_OnRep_IsCalm_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Fauna.OnRep_IsAgitated
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AFauna::OnRep_IsAgitated()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Fauna.OnRep_IsAgitated"));}

	AFauna_OnRep_IsAgitated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Fauna.OnRep_InWaterState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AFauna::OnRep_InWaterState()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Fauna.OnRep_InWaterState"));}

	AFauna_OnRep_InWaterState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Fauna.OnRep_CurrentAIStrategy
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  OldAIStrategy                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AFauna::OnRep_CurrentAIStrategy(class UClass* OldAIStrategy)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Fauna.OnRep_CurrentAIStrategy"));}

	AFauna_OnRep_CurrentAIStrategy_Params params;
	params.OldAIStrategy = OldAIStrategy;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Fauna.OnRep_CratedState
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EFaunaCratedState> PreviousCratedState            (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void AFauna::OnRep_CratedState(TEnumAsByte<EFaunaCratedState> PreviousCratedState)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Fauna.OnRep_CratedState"));}

	AFauna_OnRep_CratedState_Params params;
	params.PreviousCratedState = PreviousCratedState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Fauna.Multicast_PlayPutInCrateEffectsRPC
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Crate                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AFauna::Multicast_PlayPutInCrateEffectsRPC(class AActor* Crate)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Fauna.Multicast_PlayPutInCrateEffectsRPC"));}

	AFauna_Multicast_PlayPutInCrateEffectsRPC_Params params;
	params.Crate = Crate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Fauna.Multicast_JustBeenFedRPC
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  FedBy                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AFauna::Multicast_JustBeenFedRPC(class AActor* FedBy)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Fauna.Multicast_JustBeenFedRPC"));}

	AFauna_Multicast_JustBeenFedRPC_Params params;
	params.FedBy = FedBy;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Fauna.Multicast_HightlightLeader
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           bIsLeader                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AFauna::Multicast_HightlightLeader(bool bIsLeader)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Fauna.Multicast_HightlightLeader"));}

	AFauna_Multicast_HightlightLeader_Params params;
	params.bIsLeader = bIsLeader;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Fauna.Multicast_DespawnRPC
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AFauna::Multicast_DespawnRPC()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Fauna.Multicast_DespawnRPC"));}

	AFauna_Multicast_DespawnRPC_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Fauna.GetAIStrategy
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UClass*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UClass* AFauna::GetAIStrategy()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Fauna.GetAIStrategy"));}

	AFauna_GetAIStrategy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Fauna.GenerateNewRandomAnimationSeed
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AFauna::GenerateNewRandomAnimationSeed()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Fauna.GenerateNewRandomAnimationSeed"));}

	AFauna_GenerateNewRandomAnimationSeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.FaunaAnimationInstance.GetTurnRightAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetTurnRightAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetTurnRightAnimation"));}

	UFaunaAnimationInstance_GetTurnRightAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetTurnRate
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UFaunaAnimationInstance::GetTurnRate()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetTurnRate"));}

	UFaunaAnimationInstance_GetTurnRate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetTurnLeftAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetTurnLeftAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetTurnLeftAnimation"));}

	UFaunaAnimationInstance_GetTurnLeftAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetSurfaceOrientation
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          NewPitch                       (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UFaunaAnimationInstance::GetSurfaceOrientation(float* NewPitch)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetSurfaceOrientation"));}

	UFaunaAnimationInstance_GetSurfaceOrientation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (NewPitch != nullptr)
		*NewPitch = params.NewPitch;
}


// Function Athena.FaunaAnimationInstance.GetStartledLowUnderwaterAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetStartledLowUnderwaterAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetStartledLowUnderwaterAnimation"));}

	UFaunaAnimationInstance_GetStartledLowUnderwaterAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetStartledLowOnSeaAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetStartledLowOnSeaAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetStartledLowOnSeaAnimation"));}

	UFaunaAnimationInstance_GetStartledLowOnSeaAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetStartledLowOnLandAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetStartledLowOnLandAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetStartledLowOnLandAnimation"));}

	UFaunaAnimationInstance_GetStartledLowOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetStartledHighUnderwaterAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetStartledHighUnderwaterAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetStartledHighUnderwaterAnimation"));}

	UFaunaAnimationInstance_GetStartledHighUnderwaterAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetStartledHighOnSeaAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetStartledHighOnSeaAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetStartledHighOnSeaAnimation"));}

	UFaunaAnimationInstance_GetStartledHighOnSeaAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetStartledHighOnLandAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetStartledHighOnLandAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetStartledHighOnLandAnimation"));}

	UFaunaAnimationInstance_GetStartledHighOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetSpecialUnderwaterAnimation
// (FUNC_Protected)
// Parameters:
// bool                           LoopSpecial                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetSpecialUnderwaterAnimation(bool* LoopSpecial)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetSpecialUnderwaterAnimation"));}

	UFaunaAnimationInstance_GetSpecialUnderwaterAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (LoopSpecial != nullptr)
		*LoopSpecial = params.LoopSpecial;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetSpecialSeaAnimation
// (FUNC_Protected)
// Parameters:
// bool                           LoopSpecial                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetSpecialSeaAnimation(bool* LoopSpecial)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetSpecialSeaAnimation"));}

	UFaunaAnimationInstance_GetSpecialSeaAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (LoopSpecial != nullptr)
		*LoopSpecial = params.LoopSpecial;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetSpecialLandAnimation
// (FUNC_Protected)
// Parameters:
// bool                           LoopSpecial                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetSpecialLandAnimation(bool* LoopSpecial)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetSpecialLandAnimation"));}

	UFaunaAnimationInstance_GetSpecialLandAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (LoopSpecial != nullptr)
		*LoopSpecial = params.LoopSpecial;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetSnakeStrikeOnLandAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetSnakeStrikeOnLandAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetSnakeStrikeOnLandAnimation"));}

	UFaunaAnimationInstance_GetSnakeStrikeOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetSnakeCharmStanceOutOnLandAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetSnakeCharmStanceOutOnLandAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetSnakeCharmStanceOutOnLandAnimation"));}

	UFaunaAnimationInstance_GetSnakeCharmStanceOutOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetSnakeCharmStanceLoopOnLandAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetSnakeCharmStanceLoopOnLandAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetSnakeCharmStanceLoopOnLandAnimation"));}

	UFaunaAnimationInstance_GetSnakeCharmStanceLoopOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetSnakeCharmStanceInOnLandAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetSnakeCharmStanceInOnLandAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetSnakeCharmStanceInOnLandAnimation"));}

	UFaunaAnimationInstance_GetSnakeCharmStanceInOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetSnakeAttackStanceOutOnLandAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetSnakeAttackStanceOutOnLandAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetSnakeAttackStanceOutOnLandAnimation"));}

	UFaunaAnimationInstance_GetSnakeAttackStanceOutOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetSnakeAttackStanceLoopOnLandAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetSnakeAttackStanceLoopOnLandAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetSnakeAttackStanceLoopOnLandAnimation"));}

	UFaunaAnimationInstance_GetSnakeAttackStanceLoopOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetSnakeAttackStanceInOnLandAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetSnakeAttackStanceInOnLandAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetSnakeAttackStanceInOnLandAnimation"));}

	UFaunaAnimationInstance_GetSnakeAttackStanceInOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetPigStarveStartledLowOnLandAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetPigStarveStartledLowOnLandAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetPigStarveStartledLowOnLandAnimation"));}

	UFaunaAnimationInstance_GetPigStarveStartledLowOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetPigStarveStartledHighOnLandAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetPigStarveStartledHighOnLandAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetPigStarveStartledHighOnLandAnimation"));}

	UFaunaAnimationInstance_GetPigStarveStartledHighOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetPigStarveOutOnLandAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetPigStarveOutOnLandAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetPigStarveOutOnLandAnimation"));}

	UFaunaAnimationInstance_GetPigStarveOutOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetPigStarveLoopOnLandAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetPigStarveLoopOnLandAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetPigStarveLoopOnLandAnimation"));}

	UFaunaAnimationInstance_GetPigStarveLoopOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetPigStarveInOnLandAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetPigStarveInOnLandAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetPigStarveInOnLandAnimation"));}

	UFaunaAnimationInstance_GetPigStarveInOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetPigStarveDeathOnLandAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetPigStarveDeathOnLandAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetPigStarveDeathOnLandAnimation"));}

	UFaunaAnimationInstance_GetPigStarveDeathOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetPigEatingUnderwaterAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetPigEatingUnderwaterAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetPigEatingUnderwaterAnimation"));}

	UFaunaAnimationInstance_GetPigEatingUnderwaterAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetPigEatingOnSeaAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetPigEatingOnSeaAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetPigEatingOnSeaAnimation"));}

	UFaunaAnimationInstance_GetPigEatingOnSeaAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetPigEatingOnLandAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetPigEatingOnLandAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetPigEatingOnLandAnimation"));}

	UFaunaAnimationInstance_GetPigEatingOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetLocomotionUnderwaterAnimationB
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UBlendSpace1D*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UBlendSpace1D* UFaunaAnimationInstance::GetLocomotionUnderwaterAnimationB()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetLocomotionUnderwaterAnimationB"));}

	UFaunaAnimationInstance_GetLocomotionUnderwaterAnimationB_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetLocomotionUnderwaterAnimationA
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UBlendSpace1D*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UBlendSpace1D* UFaunaAnimationInstance::GetLocomotionUnderwaterAnimationA()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetLocomotionUnderwaterAnimationA"));}

	UFaunaAnimationInstance_GetLocomotionUnderwaterAnimationA_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetLocomotionSeaAnimationB
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UBlendSpace1D*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UBlendSpace1D* UFaunaAnimationInstance::GetLocomotionSeaAnimationB()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetLocomotionSeaAnimationB"));}

	UFaunaAnimationInstance_GetLocomotionSeaAnimationB_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetLocomotionSeaAnimationA
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UBlendSpace1D*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UBlendSpace1D* UFaunaAnimationInstance::GetLocomotionSeaAnimationA()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetLocomotionSeaAnimationA"));}

	UFaunaAnimationInstance_GetLocomotionSeaAnimationA_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetLocomotionLandAnimationB
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UBlendSpace1D*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UBlendSpace1D* UFaunaAnimationInstance::GetLocomotionLandAnimationB()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetLocomotionLandAnimationB"));}

	UFaunaAnimationInstance_GetLocomotionLandAnimationB_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetLocomotionLandAnimationA
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UBlendSpace1D*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UBlendSpace1D* UFaunaAnimationInstance::GetLocomotionLandAnimationA()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetLocomotionLandAnimationA"));}

	UFaunaAnimationInstance_GetLocomotionLandAnimationA_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetImpactUnderwaterAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UBlendSpace1D*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UBlendSpace1D* UFaunaAnimationInstance::GetImpactUnderwaterAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetImpactUnderwaterAnimation"));}

	UFaunaAnimationInstance_GetImpactUnderwaterAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetImpactOnSeaAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UBlendSpace1D*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UBlendSpace1D* UFaunaAnimationInstance::GetImpactOnSeaAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetImpactOnSeaAnimation"));}

	UFaunaAnimationInstance_GetImpactOnSeaAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetImpactOnLandAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UBlendSpace1D*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UBlendSpace1D* UFaunaAnimationInstance::GetImpactOnLandAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetImpactOnLandAnimation"));}

	UFaunaAnimationInstance_GetImpactOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetIdleUnderwaterAnimationB
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetIdleUnderwaterAnimationB()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetIdleUnderwaterAnimationB"));}

	UFaunaAnimationInstance_GetIdleUnderwaterAnimationB_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetIdleUnderwaterAnimationA
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetIdleUnderwaterAnimationA()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetIdleUnderwaterAnimationA"));}

	UFaunaAnimationInstance_GetIdleUnderwaterAnimationA_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetIdleSeaAnimationB
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetIdleSeaAnimationB()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetIdleSeaAnimationB"));}

	UFaunaAnimationInstance_GetIdleSeaAnimationB_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetIdleSeaAnimationA
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetIdleSeaAnimationA()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetIdleSeaAnimationA"));}

	UFaunaAnimationInstance_GetIdleSeaAnimationA_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetIdleLandAnimationB
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetIdleLandAnimationB()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetIdleLandAnimationB"));}

	UFaunaAnimationInstance_GetIdleLandAnimationB_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetIdleLandAnimationA
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetIdleLandAnimationA()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetIdleLandAnimationA"));}

	UFaunaAnimationInstance_GetIdleLandAnimationA_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetDyingLoopUnderwaterAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetDyingLoopUnderwaterAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetDyingLoopUnderwaterAnimation"));}

	UFaunaAnimationInstance_GetDyingLoopUnderwaterAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetDyingLoopOnSeaAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetDyingLoopOnSeaAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetDyingLoopOnSeaAnimation"));}

	UFaunaAnimationInstance_GetDyingLoopOnSeaAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetDyingLoopOnLandAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetDyingLoopOnLandAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetDyingLoopOnLandAnimation"));}

	UFaunaAnimationInstance_GetDyingLoopOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetDeathUnderwaterAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetDeathUnderwaterAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetDeathUnderwaterAnimation"));}

	UFaunaAnimationInstance_GetDeathUnderwaterAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetDeathOnSeaAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetDeathOnSeaAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetDeathOnSeaAnimation"));}

	UFaunaAnimationInstance_GetDeathOnSeaAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GetDeathOnLandAnimation
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UAnimSequence*           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UAnimSequence* UFaunaAnimationInstance::GetDeathOnLandAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GetDeathOnLandAnimation"));}

	UFaunaAnimationInstance_GetDeathOnLandAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FaunaAnimationInstance.GenerateNewValidAnimationIndex
// (FUNC_Final, FUNC_RequiredAPI, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Owner                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EFaunaAnimationLocation> InLocation                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EFaunaAnimationState> InState                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           IsIdleStateA                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UFaunaAnimationInstance::GenerateNewValidAnimationIndex(class AActor* Owner, TEnumAsByte<EFaunaAnimationLocation> InLocation, TEnumAsByte<EFaunaAnimationState> InState, bool IsIdleStateA)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.GenerateNewValidAnimationIndex"));}

	UFaunaAnimationInstance_GenerateNewValidAnimationIndex_Params params;
	params.Owner = Owner;
	params.InLocation = InLocation;
	params.InState = InState;
	params.IsIdleStateA = IsIdleStateA;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.FaunaAnimationInstance.AssetArrayValidationCheck
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UFaunaAnimationInstance::AssetArrayValidationCheck()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FaunaAnimationInstance.AssetArrayValidationCheck"));}

	UFaunaAnimationInstance_AssetArrayValidationCheck_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FeedingComponent.OnRep_ActorToFeed
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UFeedingComponent::OnRep_ActorToFeed()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FeedingComponent.OnRep_ActorToFeed"));}

	UFeedingComponent_OnRep_ActorToFeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.FiredFromActorActionStateId.PushCharacterIntoFiredFromActorActionState
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  FiringActor                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 LaunchVelocity                 (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UFiredFromActorActionStateId::PushCharacterIntoFiredFromActorActionState(class AActor* Character, class AActor* FiringActor, const struct FVector& LaunchVelocity)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FiredFromActorActionStateId.PushCharacterIntoFiredFromActorActionState"));}

	UFiredFromActorActionStateId_PushCharacterIntoFiredFromActorActionState_Params params;
	params.Character = Character;
	params.FiringActor = FiringActor;
	params.LaunchVelocity = LaunchVelocity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.FiredFromActorActionStateId.PopCharacterOutOfFiredFromActorActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UFiredFromActorActionStateId::PopCharacterOutOfFiredFromActorActionState(class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FiredFromActorActionStateId.PopCharacterOutOfFiredFromActorActionState"));}

	UFiredFromActorActionStateId_PopCharacterOutOfFiredFromActorActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.FiredFromCannonActionStateId.PushCharacterIntoFiredFromCannonActionState
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  FiringActor                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 LaunchVelocity                 (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UFiredFromCannonActionStateId::PushCharacterIntoFiredFromCannonActionState(class AActor* Character, class AActor* FiringActor, const struct FVector& LaunchVelocity)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FiredFromCannonActionStateId.PushCharacterIntoFiredFromCannonActionState"));}

	UFiredFromCannonActionStateId_PushCharacterIntoFiredFromCannonActionState_Params params;
	params.Character = Character;
	params.FiringActor = FiringActor;
	params.LaunchVelocity = LaunchVelocity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.FiredFromCannonActionStateId.PopCharacterOutOfFiredFromCannonActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UFiredFromCannonActionStateId::PopCharacterOutOfFiredFromCannonActionState(class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FiredFromCannonActionStateId.PopCharacterOutOfFiredFromCannonActionState"));}

	UFiredFromCannonActionStateId_PopCharacterOutOfFiredFromCannonActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.FOVHandlerFunctions.SetTargetFOV
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaPlayerCharacter*  Character                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          TargetFOV                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UFOVHandlerFunctions::SetTargetFOV(class AAthenaPlayerCharacter* Character, float TargetFOV)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FOVHandlerFunctions.SetTargetFOV"));}

	UFOVHandlerFunctions_SetTargetFOV_Params params;
	params.Character = Character;
	params.TargetFOV = TargetFOV;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.FOVHandlerFunctions.SetBlendSpeed
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaPlayerCharacter*  Character                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          BlendSpeed                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UFOVHandlerFunctions::SetBlendSpeed(class AAthenaPlayerCharacter* Character, float BlendSpeed)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FOVHandlerFunctions.SetBlendSpeed"));}

	UFOVHandlerFunctions_SetBlendSpeed_Params params;
	params.Character = Character;
	params.BlendSpeed = BlendSpeed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.FOVHandlerFunctions.ResetToDefault
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaPlayerCharacter*  Character                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UFOVHandlerFunctions::ResetToDefault(class AAthenaPlayerCharacter* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FOVHandlerFunctions.ResetToDefault"));}

	UFOVHandlerFunctions_ResetToDefault_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.FOVHandlerFunctions.GetTargetFOV
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AAthenaPlayerCharacter*  Character                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UFOVHandlerFunctions::GetTargetFOV(class AAthenaPlayerCharacter* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FOVHandlerFunctions.GetTargetFOV"));}

	UFOVHandlerFunctions_GetTargetFOV_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FOVHandlerFunctions.GetDefaultTargetFOV
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AAthenaPlayerCharacter*  Character                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UFOVHandlerFunctions::GetDefaultTargetFOV(class AAthenaPlayerCharacter* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FOVHandlerFunctions.GetDefaultTargetFOV"));}

	UFOVHandlerFunctions_GetDefaultTargetFOV_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FOVHandlerFunctions.GetDefaultFOV
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AAthenaPlayerCharacter*  Character                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UFOVHandlerFunctions::GetDefaultFOV(class AAthenaPlayerCharacter* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FOVHandlerFunctions.GetDefaultFOV"));}

	UFOVHandlerFunctions_GetDefaultFOV_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FOVHandlerFunctions.GetBlendSpeed
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AAthenaPlayerCharacter*  Character                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UFOVHandlerFunctions::GetBlendSpeed(class AAthenaPlayerCharacter* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FOVHandlerFunctions.GetBlendSpeed"));}

	UFOVHandlerFunctions_GetBlendSpeed_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.FrontendCameraComponent.SetMapTablePlaybackRate
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          InPlaybackRate                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UFrontendCameraComponent::SetMapTablePlaybackRate(float InPlaybackRate)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FrontendCameraComponent.SetMapTablePlaybackRate"));}

	UFrontendCameraComponent_SetMapTablePlaybackRate_Params params;
	params.InPlaybackRate = InPlaybackRate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.FrontendCameraComponent.MapTableAnimationFinished
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UFrontendCameraComponent::MapTableAnimationFinished()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FrontendCameraComponent.MapTableAnimationFinished"));}

	UFrontendCameraComponent_MapTableAnimationFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.FrontendGameMode.BeginPreloading
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AFrontendGameMode::BeginPreloading()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.FrontendGameMode.BeginPreloading"));}

	AFrontendGameMode_BeginPreloading_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.GameAudioInterface.UnregisterShip
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AShip*                   Ship                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UGameAudioInterface::UnregisterShip(class AShip* Ship)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.GameAudioInterface.UnregisterShip"));}

	UGameAudioInterface_UnregisterShip_Params params;
	params.Ship = Ship;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.GameAudioInterface.RegisterShip
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AShip*                   Ship                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UGameAudioInterface::RegisterShip(class AShip* Ship)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.GameAudioInterface.RegisterShip"));}

	UGameAudioInterface_RegisterShip_Params params;
	params.Ship = Ship;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.GameAudioInterface.GetClosestNonCrewShipDistance
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AShip*                   PlayerShip                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UGameAudioInterface::GetClosestNonCrewShipDistance(class AShip* PlayerShip)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.GameAudioInterface.GetClosestNonCrewShipDistance"));}

	UGameAudioInterface_GetClosestNonCrewShipDistance_Params params;
	params.PlayerShip = PlayerShip;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.GameplayEventSignal.DeactivateAndDestroy
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AGameplayEventSignal::DeactivateAndDestroy()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.GameplayEventSignal.DeactivateAndDestroy"));}

	AGameplayEventSignal_DeactivateAndDestroy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.GameStateFunctionLibrary.GetAthenaGameStateFromWorld
// (FUNC_Protected)
// Parameters:
// class UWorld*                  InWorld                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AAthenaGameState*        ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AAthenaGameState* UGameStateFunctionLibrary::GetAthenaGameStateFromWorld(class UWorld* InWorld)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.GameStateFunctionLibrary.GetAthenaGameStateFromWorld"));}

	UGameStateFunctionLibrary_GetAthenaGameStateFromWorld_Params params;
	params.InWorld = InWorld;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.GameStateFunctionLibrary.GetAthenaGameState
// (FUNC_Protected)
// Parameters:
// class UObject*                 InWorldContextObject           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AAthenaGameState*        ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AAthenaGameState* UGameStateFunctionLibrary::GetAthenaGameState(class UObject* InWorldContextObject)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.GameStateFunctionLibrary.GetAthenaGameState"));}

	UGameStateFunctionLibrary_GetAthenaGameState_Params params;
	params.InWorldContextObject = InWorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.GarbageGenerator.SetSizeOfPersistentSet
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            InSizeOfPersistentSet          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AGarbageGenerator::SetSizeOfPersistentSet(int InSizeOfPersistentSet)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.GarbageGenerator.SetSizeOfPersistentSet"));}

	AGarbageGenerator_SetSizeOfPersistentSet_Params params;
	params.InSizeOfPersistentSet = InSizeOfPersistentSet;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.GarbageGenerator.SetGarbageGenerationRatePerTick
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            InAmountToGenerate             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AGarbageGenerator::SetGarbageGenerationRatePerTick(int InAmountToGenerate)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.GarbageGenerator.SetGarbageGenerationRatePerTick"));}

	AGarbageGenerator_SetGarbageGenerationRatePerTick_Params params;
	params.InAmountToGenerate = InAmountToGenerate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.GenericPart.OnPartMeshLoaded
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UStaticMesh*             Mesh                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AGenericPart::OnPartMeshLoaded(class UStaticMesh* Mesh)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.GenericPart.OnPartMeshLoaded"));}

	AGenericPart_OnPartMeshLoaded_Params params;
	params.Mesh = Mesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.GenericPart.OnPartDescLoaded
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UGenericPartDescAsset*   Desc                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AGenericPart::OnPartDescLoaded(class UGenericPartDescAsset* Desc)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.GenericPart.OnPartDescLoaded"));}

	AGenericPart_OnPartDescLoaded_Params params;
	params.Desc = Desc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.GhostShipDoor.Multicast_ResetForPlayer
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class APawn*                   Player                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AGhostShipDoor::Multicast_ResetForPlayer(class APawn* Player)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.GhostShipDoor.Multicast_ResetForPlayer"));}

	AGhostShipDoor_Multicast_ResetForPlayer_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.GhostShipDoor.Multicast_OpenForPlayer
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class APawn*                   Player                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AGhostShipDoor::Multicast_OpenForPlayer(class APawn* Player)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.GhostShipDoor.Multicast_OpenForPlayer"));}

	AGhostShipDoor_Multicast_OpenForPlayer_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.GhostShipDoor.Multicast_OnDoorFullyOpen
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class APawn*                   Player                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AGhostShipDoor::Multicast_OnDoorFullyOpen(class APawn* Player)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.GhostShipDoor.Multicast_OnDoorFullyOpen"));}

	AGhostShipDoor_Multicast_OnDoorFullyOpen_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.GhostShipTickManager.EnableActorsOnGhostShip
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           bEnable                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AGhostShipTickManager::EnableActorsOnGhostShip(bool bEnable)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.GhostShipTickManager.EnableActorsOnGhostShip"));}

	AGhostShipTickManager_EnableActorsOnGhostShip_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.HandlesFunctionLibrary.NotEqual
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// struct FBlueprintableIntegerHandle A                              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// struct FBlueprintableIntegerHandle B                              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UHandlesFunctionLibrary::NotEqual(const struct FBlueprintableIntegerHandle& A, const struct FBlueprintableIntegerHandle& B)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HandlesFunctionLibrary.NotEqual"));}

	UHandlesFunctionLibrary_NotEqual_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.HandlesFunctionLibrary.IsValid
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// struct FBlueprintableIntegerHandle Handle                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UHandlesFunctionLibrary::IsValid(const struct FBlueprintableIntegerHandle& Handle)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HandlesFunctionLibrary.IsValid"));}

	UHandlesFunctionLibrary_IsValid_Params params;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.HandlesFunctionLibrary.Equal
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// struct FBlueprintableIntegerHandle A                              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// struct FBlueprintableIntegerHandle B                              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UHandlesFunctionLibrary::Equal(const struct FBlueprintableIntegerHandle& A, const struct FBlueprintableIntegerHandle& B)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HandlesFunctionLibrary.Equal"));}

	UHandlesFunctionLibrary_Equal_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.HealthComponent.ToggleGodMode
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UHealthComponent::ToggleGodMode()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HealthComponent.ToggleGodMode"));}

	UHealthComponent_ToggleGodMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.HealthComponent.TakeDamage
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FDamageInstance         DamageInstance                 (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UHealthComponent::TakeDamage(const struct FDamageInstance& DamageInstance)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HealthComponent.TakeDamage"));}

	UHealthComponent_TakeDamage_Params params;
	params.DamageInstance = DamageInstance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.HealthComponent.StopContinuousHealthChange
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EHealthChangedReason> Reason                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UHealthComponent::StopContinuousHealthChange(TEnumAsByte<EHealthChangedReason> Reason)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HealthComponent.StopContinuousHealthChange"));}

	UHealthComponent_StopContinuousHealthChange_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.HealthComponent.StartContinuousHealthChange
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          AmountPerSecond                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EHealthChangedReason> Reason                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UHealthComponent::StartContinuousHealthChange(float AmountPerSecond, TEnumAsByte<EHealthChangedReason> Reason)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HealthComponent.StartContinuousHealthChange"));}

	UHealthComponent_StartContinuousHealthChange_Params params;
	params.AmountPerSecond = AmountPerSecond;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.HealthComponent.SetHealth
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Amount                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EHealthChangedReason> Reason                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UHealthComponent::SetHealth(float Amount, TEnumAsByte<EHealthChangedReason> Reason)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HealthComponent.SetHealth"));}

	UHealthComponent_SetHealth_Params params;
	params.Amount = Amount;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.HealthComponent.ResetToMaxHealth
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UHealthComponent::ResetToMaxHealth()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HealthComponent.ResetToMaxHealth"));}

	UHealthComponent_ResetToMaxHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.HealthComponent.PreventAdjustmentFromHealthChangeReason
// (FUNC_RequiredAPI, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EPreventDamageTypeLockReasons> LockReason                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EHealthChangedReason> HealthChangeReason             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UHealthComponent::PreventAdjustmentFromHealthChangeReason(TEnumAsByte<EPreventDamageTypeLockReasons> LockReason, TEnumAsByte<EHealthChangedReason> HealthChangeReason)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HealthComponent.PreventAdjustmentFromHealthChangeReason"));}

	UHealthComponent_PreventAdjustmentFromHealthChangeReason_Params params;
	params.LockReason = LockReason;
	params.HealthChangeReason = HealthChangeReason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.HealthComponent.PredictHealthChange
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Change                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EHealthChangedReason> Reason                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UHealthComponent::PredictHealthChange(float Change, TEnumAsByte<EHealthChangedReason> Reason)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HealthComponent.PredictHealthChange"));}

	UHealthComponent_PredictHealthChange_Params params;
	params.Change = Change;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.HealthComponent.OnRep_ContinuousHealthChangeSources
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TArray<struct FContinuousHealthChange> PrevContinuousDamageSources    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm)

void UHealthComponent::OnRep_ContinuousHealthChangeSources(TArray<struct FContinuousHealthChange> PrevContinuousDamageSources)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HealthComponent.OnRep_ContinuousHealthChangeSources"));}

	UHealthComponent_OnRep_ContinuousHealthChangeSources_Params params;
	params.PrevContinuousDamageSources = PrevContinuousDamageSources;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.HealthComponent.Multicast_SetHealthOnClients
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FHealthChange           Instance                       (CPF_ConstParm, CPF_Parm)

void UHealthComponent::Multicast_SetHealthOnClients(const struct FHealthChange& Instance)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HealthComponent.Multicast_SetHealthOnClients"));}

	UHealthComponent_Multicast_SetHealthOnClients_Params params;
	params.Instance = Instance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.HealthComponent.IsGodModeActive
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UHealthComponent::IsGodModeActive()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HealthComponent.IsGodModeActive"));}

	UHealthComponent_IsGodModeActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.HealthComponent.IsDamageTypePrevented
// (FUNC_RequiredAPI, FUNC_MulticastDelegate)
// Parameters:
// TEnumAsByte<EHealthChangedReason> HealthChangeReason             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UHealthComponent::IsDamageTypePrevented(TEnumAsByte<EHealthChangedReason> HealthChangeReason)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HealthComponent.IsDamageTypePrevented"));}

	UHealthComponent_IsDamageTypePrevented_Params params;
	params.HealthChangeReason = HealthChangeReason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.HealthComponent.GetMaxHealth
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UHealthComponent::GetMaxHealth()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HealthComponent.GetMaxHealth"));}

	UHealthComponent_GetMaxHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.HealthComponent.GetCurrentHealth
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UHealthComponent::GetCurrentHealth()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HealthComponent.GetCurrentHealth"));}

	UHealthComponent_GetCurrentHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.HealthComponent.EnableAdjustHealth
// (FUNC_RequiredAPI, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EHealthAdjustLockReasons> Reason                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           Strict                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UHealthComponent::EnableAdjustHealth(TEnumAsByte<EHealthAdjustLockReasons> Reason, bool Strict)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HealthComponent.EnableAdjustHealth"));}

	UHealthComponent_EnableAdjustHealth_Params params;
	params.Reason = Reason;
	params.Strict = Strict;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.HealthComponent.DisableAdjustHealth
// (FUNC_RequiredAPI, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EHealthAdjustLockReasons> Reason                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           Strict                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UHealthComponent::DisableAdjustHealth(TEnumAsByte<EHealthAdjustLockReasons> Reason, bool Strict)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HealthComponent.DisableAdjustHealth"));}

	UHealthComponent_DisableAdjustHealth_Params params;
	params.Reason = Reason;
	params.Strict = Strict;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.HealthComponent.CanAdjustHealth
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UHealthComponent::CanAdjustHealth()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HealthComponent.CanAdjustHealth"));}

	UHealthComponent_CanAdjustHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.HealthComponent.AllowAdjustmentFromHealthChangeReason
// (FUNC_RequiredAPI, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EPreventDamageTypeLockReasons> LockReason                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EHealthChangedReason> HealthChangeReason             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UHealthComponent::AllowAdjustmentFromHealthChangeReason(TEnumAsByte<EPreventDamageTypeLockReasons> LockReason, TEnumAsByte<EHealthChangedReason> HealthChangeReason)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HealthComponent.AllowAdjustmentFromHealthChangeReason"));}

	UHealthComponent_AllowAdjustmentFromHealthChangeReason_Params params;
	params.LockReason = LockReason;
	params.HealthChangeReason = HealthChangeReason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.HealthComponent.AdjustHealth
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Amount                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EHealthChangedReason> Reason                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UHealthComponent::AdjustHealth(float Amount, TEnumAsByte<EHealthChangedReason> Reason)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HealthComponent.AdjustHealth"));}

	UHealthComponent_AdjustHealth_Params params;
	params.Amount = Amount;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.HealthTestFunctions.MakeDamageInstance
// (FUNC_BlueprintCosmetic, FUNC_Protected, FUNC_Delegate)
// Parameters:
// float                          Amount                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  From                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EHealthChangedReason> Reason                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FDamageInstance         ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FDamageInstance UHealthTestFunctions::MakeDamageInstance(float Amount, class AActor* From, TEnumAsByte<EHealthChangedReason> Reason)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HealthTestFunctions.MakeDamageInstance"));}

	UHealthTestFunctions_MakeDamageInstance_Params params;
	params.Amount = Amount;
	params.From = From;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.HideInObjectActionStateId.PushCharacterIntoHideInObjectActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  ObjectToHideIn                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Dockable                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UHideInObjectActionStateId::PushCharacterIntoHideInObjectActionState(class AActor* Character, class AActor* ObjectToHideIn, class AActor* Dockable)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HideInObjectActionStateId.PushCharacterIntoHideInObjectActionState"));}

	UHideInObjectActionStateId_PushCharacterIntoHideInObjectActionState_Params params;
	params.Character = Character;
	params.ObjectToHideIn = ObjectToHideIn;
	params.Dockable = Dockable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.HideInObjectActionStateId.PopCharacterOutOfHideInObjectActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UHideInObjectActionStateId::PopCharacterOutOfHideInObjectActionState(class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HideInObjectActionStateId.PopCharacterOutOfHideInObjectActionState"));}

	UHideInObjectActionStateId_PopCharacterOutOfHideInObjectActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.HideInObjectCompositeInputHandler.OnUseConcealingObjectNotificationRecieved
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UHideInObjectCompositeInputHandler::OnUseConcealingObjectNotificationRecieved()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HideInObjectCompositeInputHandler.OnUseConcealingObjectNotificationRecieved"));}

	UHideInObjectCompositeInputHandler_OnUseConcealingObjectNotificationRecieved_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Hideout.OnPlayerInViewOfHideout
// (FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Other                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bFromSweep                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FHitResult              OverlapInfo                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void AHideout::OnPlayerInViewOfHideout(class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Hideout.OnPlayerInViewOfHideout"));}

	AHideout_OnPlayerInViewOfHideout_Params params;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.OverlapInfo = OverlapInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.HideoutEntrance.OnBeginOverlap
// (FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bFromSweep                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FHitResult              SweepResult                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void AHideoutEntrance::OnBeginOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HideoutEntrance.OnBeginOverlap"));}

	AHideoutEntrance_OnBeginOverlap_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.HideoutExit.OnBeginOverlap
// (FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bFromSweep                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FHitResult              SweepResult                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void AHideoutExit::OnBeginOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HideoutExit.OnBeginOverlap"));}

	AHideoutExit_OnBeginOverlap_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.HitReactionComponent.OnHitReactionImpact
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FImpactDamageEvent      ImpactDamageEvent              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UHitReactionComponent::OnHitReactionImpact(const struct FImpactDamageEvent& ImpactDamageEvent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HitReactionComponent.OnHitReactionImpact"));}

	UHitReactionComponent_OnHitReactionImpact_Params params;
	params.ImpactDamageEvent = ImpactDamageEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.HitReactionComponent.Multicast_ProcessHitReaction
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FImpactDamageEvent      DamageEvent                    (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm)

void UHitReactionComponent::Multicast_ProcessHitReaction(const struct FImpactDamageEvent& DamageEvent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HitReactionComponent.Multicast_ProcessHitReaction"));}

	UHitReactionComponent_Multicast_ProcessHitReaction_Params params;
	params.DamageEvent = DamageEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockHitReactionComponent.SetServerAuthoritiveReactions
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           ServerAuthoritive              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UMockHitReactionComponent::SetServerAuthoritiveReactions(bool ServerAuthoritive)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockHitReactionComponent.SetServerAuthoritiveReactions"));}

	UMockHitReactionComponent_SetServerAuthoritiveReactions_Params params;
	params.ServerAuthoritive = ServerAuthoritive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockHitReactionComponent.ResetMockHitReactionComponent
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UMockHitReactionComponent::ResetMockHitReactionComponent()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockHitReactionComponent.ResetMockHitReactionComponent"));}

	UMockHitReactionComponent_ResetMockHitReactionComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Hole.OnStateChanged
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EHoleState>        InState                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AHole::OnStateChanged(TEnumAsByte<EHoleState> InState)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Hole.OnStateChanged"));}

	AHole_OnStateChanged_Params params;
	params.InState = InState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Hole.OnRep_State
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AHole::OnRep_State()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Hole.OnRep_State"));}

	AHole_OnRep_State_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShovelHole.OnRep_ParallaxValue
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AShovelHole::OnRep_ParallaxValue()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShovelHole.OnRep_ParallaxValue"));}

	AShovelHole_OnRep_ParallaxValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipPartInterface.SetShip
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AShip*                   Ship                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UShipPartInterface::SetShip(class AShip* Ship)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipPartInterface.SetShip"));}

	UShipPartInterface_SetShip_Params params;
	params.Ship = Ship;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipPartInterface.ClearShip
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UShipPartInterface::ClearShip()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipPartInterface.ClearShip"));}

	UShipPartInterface_ClearShip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LeakableInterface.GetLeakAmount
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ULeakableInterface::GetLeakAmount()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LeakableInterface.GetLeakAmount"));}

	ULeakableInterface_GetLeakAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RepairableInterface.HandleDestroy
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void URepairableInterface::HandleDestroy()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RepairableInterface.HandleDestroy"));}

	URepairableInterface_HandleDestroy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RepairableInterface.GetRepairType
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UClass*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UClass* URepairableInterface::GetRepairType()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RepairableInterface.GetRepairType"));}

	URepairableInterface_GetRepairType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RepairableInterface.GetRepairTime
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float URepairableInterface::GetRepairTime()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RepairableInterface.GetRepairTime"));}

	URepairableInterface_GetRepairTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RepairableInterface.GetRepairableState
// (FUNC_Final)
// Parameters:
// TEnumAsByte<ERepairableState>  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<ERepairableState> URepairableInterface::GetRepairableState()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RepairableInterface.GetRepairableState"));}

	URepairableInterface_GetRepairableState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DamageZone.UpdateWaterLeak
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           ForceUpdate                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ADamageZone::UpdateWaterLeak(bool ForceUpdate)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageZone.UpdateWaterLeak"));}

	ADamageZone_UpdateWaterLeak_Params params;
	params.ForceUpdate = ForceUpdate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DamageZone.PlayHitVFX
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UParticleSystem*         Vfx                            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ADamageZone::PlayHitVFX(class UParticleSystem* Vfx)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageZone.PlayHitVFX"));}

	ADamageZone_PlayHitVFX_Params params;
	params.Vfx = Vfx;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DamageZone.OnUnderwaterStateChanged
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ADamageZone::OnUnderwaterStateChanged()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageZone.OnUnderwaterStateChanged"));}

	ADamageZone_OnUnderwaterStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DamageZone.OnShipSet
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ADamageZone::OnShipSet()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageZone.OnShipSet"));}

	ADamageZone_OnShipSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DamageZone.OnShipCleared
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ADamageZone::OnShipCleared()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageZone.OnShipCleared"));}

	ADamageZone_OnShipCleared_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DamageZone.OnShipBeginsToSink
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ADamageZone::OnShipBeginsToSink()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageZone.OnShipBeginsToSink"));}

	ADamageZone_OnShipBeginsToSink_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DamageZone.OnRepairMounted
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ADamageZone::OnRepairMounted()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageZone.OnRepairMounted"));}

	ADamageZone_OnRepairMounted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DamageZone.OnRepairableStateUpdate
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<ERepairableState>  InRepairableState              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ADamageZone::OnRepairableStateUpdate(TEnumAsByte<ERepairableState> InRepairableState)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageZone.OnRepairableStateUpdate"));}

	ADamageZone_OnRepairableStateUpdate_Params params;
	params.InRepairableState = InRepairableState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DamageZone.OnRep_DamageLevel
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ADamageZone::OnRep_DamageLevel()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageZone.OnRep_DamageLevel"));}

	ADamageZone_OnRep_DamageLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DamageZone.OnRep_AuthorityRepairableState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ADamageZone::OnRep_AuthorityRepairableState()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageZone.OnRep_AuthorityRepairableState"));}

	ADamageZone_OnRep_AuthorityRepairableState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DamageZone.OnInitialise
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ADamageZone::OnInitialise()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageZone.OnInitialise"));}

	ADamageZone_OnInitialise_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DamageZone.OnDamageLevelUpdate
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            InDamageLevel                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ADamageZone::OnDamageLevelUpdate(int InDamageLevel)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageZone.OnDamageLevelUpdate"));}

	ADamageZone_OnDamageLevelUpdate_Params params;
	params.InDamageLevel = InDamageLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DamageZone.Multicast_PlayDamageEffectsRPC
// (FUNC_RequiredAPI, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           PlaySfx                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           PlayVFX                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ADamageZone::Multicast_PlayDamageEffectsRPC(bool PlaySfx, bool PlayVFX)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageZone.Multicast_PlayDamageEffectsRPC"));}

	ADamageZone_Multicast_PlayDamageEffectsRPC_Params params;
	params.PlaySfx = PlaySfx;
	params.PlayVFX = PlayVFX;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DamageZone.IsOnSinkingShip
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ADamageZone::IsOnSinkingShip()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageZone.IsOnSinkingShip"));}

	ADamageZone_IsOnSinkingShip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DamageZone.IsAboutToBlow
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ADamageZone::IsAboutToBlow()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageZone.IsAboutToBlow"));}

	ADamageZone_IsAboutToBlow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DamageZone.InitialiseInternalWaterSamplePositions
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ADamageZone::InitialiseInternalWaterSamplePositions()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageZone.InitialiseInternalWaterSamplePositions"));}

	ADamageZone_InitialiseInternalWaterSamplePositions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DamageZone.GetShipOwner
// (FUNC_BlueprintCosmetic)
// Parameters:
// class AShip*                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AShip* ADamageZone::GetShipOwner()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageZone.GetShipOwner"));}

	ADamageZone_GetShipOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DamageZone.GetRepairMountLocation
// (FUNC_Final, FUNC_Delegate)
// Parameters:
// class USceneComponent*         MountLocation                  (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// struct FName                   MountSocket                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ADamageZone::GetRepairMountLocation(class USceneComponent** MountLocation, struct FName* MountSocket)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageZone.GetRepairMountLocation"));}

	ADamageZone_GetRepairMountLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (MountLocation != nullptr)
		*MountLocation = params.MountLocation;
	if (MountSocket != nullptr)
		*MountSocket = params.MountSocket;

	return params.ReturnValue;
}


// Function Athena.DamageZone.GetLeakAmount
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ADamageZone::GetLeakAmount()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageZone.GetLeakAmount"));}

	ADamageZone_GetLeakAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DamageZone.GetDamagePercentage
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ADamageZone::GetDamagePercentage()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageZone.GetDamagePercentage"));}

	ADamageZone_GetDamagePercentage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DamageZone.GetDamageLevel
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int ADamageZone::GetDamageLevel()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageZone.GetDamageLevel"));}

	ADamageZone_GetDamageLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DamageZone.ApplyDamage
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FHullDamageHit          InHit                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void ADamageZone::ApplyDamage(const struct FHullDamageHit& InHit)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DamageZone.ApplyDamage"));}

	ADamageZone_ApplyDamage_Params params;
	params.InHit = InHit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.HullDamage.ShouldHitGenerateDecal
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Private, FUNC_Protected, FUNC_Delegate)
// Parameters:
// struct FVector                 HitNormal                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// struct FVector                 HitVelocity                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// float                          HitStrength                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AHullDamage::ShouldHitGenerateDecal(const struct FVector& HitNormal, const struct FVector& HitVelocity, float HitStrength)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HullDamage.ShouldHitGenerateDecal"));}

	AHullDamage_ShouldHitGenerateDecal_Params params;
	params.HitNormal = HitNormal;
	params.HitVelocity = HitVelocity;
	params.HitStrength = HitStrength;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.HullDamage.GetDamageZonesByDamagerType
// (FUNC_BlueprintCosmetic, FUNC_Protected, FUNC_Delegate)
// Parameters:
// class UClass*                  InDamagerType                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 InPosition                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// int                            InNumDamageZones               (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<class ADamageZone*>     ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class ADamageZone*> AHullDamage::GetDamageZonesByDamagerType(class UClass* InDamagerType, const struct FVector& InPosition, int InNumDamageZones)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HullDamage.GetDamageZonesByDamagerType"));}

	AHullDamage_GetDamageZonesByDamagerType_Params params;
	params.InDamagerType = InDamagerType;
	params.InPosition = InPosition;
	params.InNumDamageZones = InNumDamageZones;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.HullDamage.CalculateHitStrengthForImpact
// (FUNC_Private, FUNC_Protected, FUNC_Delegate)
// Parameters:
// struct FVector                 HitNormal                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// struct FVector                 HitVelocity                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// float                          HitStrength                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float AHullDamage::CalculateHitStrengthForImpact(const struct FVector& HitNormal, const struct FVector& HitVelocity, float HitStrength)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.HullDamage.CalculateHitStrengthForImpact"));}

	AHullDamage_CalculateHitStrengthForImpact_Params params;
	params.HitNormal = HitNormal;
	params.HitVelocity = HitVelocity;
	params.HitStrength = HitStrength;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipInternalWater.TryGetIntersectionPosition
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private, FUNC_NetServer)
// Parameters:
// struct FVector                 StartPosition                  (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// struct FVector                 EndPosition                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// struct FVector                 IntersectionPosition           (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AShipInternalWater::TryGetIntersectionPosition(const struct FVector& StartPosition, const struct FVector& EndPosition, struct FVector* IntersectionPosition)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipInternalWater.TryGetIntersectionPosition"));}

	AShipInternalWater_TryGetIntersectionPosition_Params params;
	params.StartPosition = StartPosition;
	params.EndPosition = EndPosition;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (IntersectionPosition != nullptr)
		*IntersectionPosition = params.IntersectionPosition;

	return params.ReturnValue;
}


// Function Athena.ShipInternalWater.ShrinkWaterOcclusionVolume
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Time                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AShipInternalWater::ShrinkWaterOcclusionVolume(float Time)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipInternalWater.ShrinkWaterOcclusionVolume"));}

	AShipInternalWater_ShrinkWaterOcclusionVolume_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipInternalWater.SetNormalizedWaterAmountLimit
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          NormalizedWaterAmount          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AShipInternalWater::SetNormalizedWaterAmountLimit(float NormalizedWaterAmount)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipInternalWater.SetNormalizedWaterAmountLimit"));}

	AShipInternalWater_SetNormalizedWaterAmountLimit_Params params;
	params.NormalizedWaterAmount = NormalizedWaterAmount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipInternalWater.SetNormalizedWaterAmount
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          NoramlisedWaterAmount          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AShipInternalWater::SetNormalizedWaterAmount(float NoramlisedWaterAmount)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipInternalWater.SetNormalizedWaterAmount"));}

	AShipInternalWater_SetNormalizedWaterAmount_Params params;
	params.NoramlisedWaterAmount = NoramlisedWaterAmount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipInternalWater.RegisterComponents
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UCurveFloat*             CurveFloat                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AShipInternalWater::RegisterComponents(class UCurveFloat* CurveFloat)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipInternalWater.RegisterComponents"));}

	AShipInternalWater_RegisterComponents_Params params;
	params.CurveFloat = CurveFloat;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipInternalWater.OnRep_ServerWaterAmount
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AShipInternalWater::OnRep_ServerWaterAmount()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipInternalWater.OnRep_ServerWaterAmount"));}

	AShipInternalWater_OnRep_ServerWaterAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipInternalWater.IsWaterMeshVisible
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AShipInternalWater::IsWaterMeshVisible()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipInternalWater.IsWaterMeshVisible"));}

	AShipInternalWater_IsWaterMeshVisible_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipInternalWater.IsOcclusionZoneFullyReduced
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AShipInternalWater::IsOcclusionZoneFullyReduced()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipInternalWater.IsOcclusionZoneFullyReduced"));}

	AShipInternalWater_IsOcclusionZoneFullyReduced_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipInternalWater.GetWaterAmount
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float AShipInternalWater::GetWaterAmount()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipInternalWater.GetWaterAmount"));}

	AShipInternalWater_GetWaterAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipInternalWater.GetNormalizedWaterAmount
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float AShipInternalWater::GetNormalizedWaterAmount()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipInternalWater.GetNormalizedWaterAmount"));}

	AShipInternalWater_GetNormalizedWaterAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipInternalWater.GetNormalizedVisualWaterAmount
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float AShipInternalWater::GetNormalizedVisualWaterAmount()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipInternalWater.GetNormalizedVisualWaterAmount"));}

	AShipInternalWater_GetNormalizedVisualWaterAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipInternalWater.GetDistanceFromPosition
// (FUNC_Private, FUNC_Protected)
// Parameters:
// struct FVector                 Position                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float AShipInternalWater::GetDistanceFromPosition(const struct FVector& Position)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipInternalWater.GetDistanceFromPosition"));}

	AShipInternalWater_GetDistanceFromPosition_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipInternalWater.AddWaterAmount
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          WaterToAdd                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AShipInternalWater::AddWaterAmount(float WaterToAdd)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipInternalWater.AddWaterAmount"));}

	AShipInternalWater_AddWaterAmount_Params params;
	params.WaterToAdd = WaterToAdd;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ImpactDecalParamModifier.SetParamValues
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_Protected, FUNC_HasDefaults)
// Parameters:
// struct FHitResult              HitResult                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// class UMaterialInstanceDynamic* DecalMatInstance               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UImpactDecalParamModifier::SetParamValues(const struct FHitResult& HitResult, class UMaterialInstanceDynamic* DecalMatInstance)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ImpactDecalParamModifier.SetParamValues"));}

	UImpactDecalParamModifier_SetParamValues_Params params;
	params.HitResult = HitResult;
	params.DecalMatInstance = DecalMatInstance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ImpactDecalParamModifierTime.SetParamValues
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_Protected, FUNC_HasDefaults)
// Parameters:
// struct FHitResult              HitResult                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// class UMaterialInstanceDynamic* DecalMatInstance               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UImpactDecalParamModifierTime::SetParamValues(const struct FHitResult& HitResult, class UMaterialInstanceDynamic* DecalMatInstance)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ImpactDecalParamModifierTime.SetParamValues"));}

	UImpactDecalParamModifierTime_SetParamValues_Params params;
	params.HitResult = HitResult;
	params.DecalMatInstance = DecalMatInstance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ImpactDecalParamModifierVomit.SetParamValues
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_Protected, FUNC_HasDefaults)
// Parameters:
// struct FHitResult              HitResult                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// class UMaterialInstanceDynamic* DecalMatInstance               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UImpactDecalParamModifierVomit::SetParamValues(const struct FHitResult& HitResult, class UMaterialInstanceDynamic* DecalMatInstance)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ImpactDecalParamModifierVomit.SetParamValues"));}

	UImpactDecalParamModifierVomit_SetParamValues_Params params;
	params.HitResult = HitResult;
	params.DecalMatInstance = DecalMatInstance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.IngestedByKrakenActionStateId.PushCharacterIntoIngestedByKrakenActionState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AKrakenAnimatedTentacle* Tentacle                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UIngestedByKrakenActionStateId::PushCharacterIntoIngestedByKrakenActionState(class AActor* Character, class AKrakenAnimatedTentacle* Tentacle)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.IngestedByKrakenActionStateId.PushCharacterIntoIngestedByKrakenActionState"));}

	UIngestedByKrakenActionStateId_PushCharacterIntoIngestedByKrakenActionState_Params params;
	params.Character = Character;
	params.Tentacle = Tentacle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.IngestedByKrakenActionStateId.PopCharacterOutOfIngestedByKrakenActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UIngestedByKrakenActionStateId::PopCharacterOutOfIngestedByKrakenActionState(class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.IngestedByKrakenActionStateId.PopCharacterOutOfIngestedByKrakenActionState"));}

	UIngestedByKrakenActionStateId_PopCharacterOutOfIngestedByKrakenActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.IngestedByKrakenCompositeInputHandler.OnLookUpRate
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UIngestedByKrakenCompositeInputHandler::OnLookUpRate(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.IngestedByKrakenCompositeInputHandler.OnLookUpRate"));}

	UIngestedByKrakenCompositeInputHandler_OnLookUpRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.IngestedByKrakenCompositeInputHandler.OnLookUp
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UIngestedByKrakenCompositeInputHandler::OnLookUp(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.IngestedByKrakenCompositeInputHandler.OnLookUp"));}

	UIngestedByKrakenCompositeInputHandler_OnLookUp_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.IntentCombinerComponent.SetIntentProviders
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TArray<class UControllableIntentComponent*> InIntentProviders              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm)

void UIntentCombinerComponent::SetIntentProviders(TArray<class UControllableIntentComponent*> InIntentProviders)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.IntentCombinerComponent.SetIntentProviders"));}

	UIntentCombinerComponent_SetIntentProviders_Params params;
	params.InIntentProviders = InIntentProviders;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.IntentCombinerComponent.GetCombinedIntent
// (FUNC_BlueprintCosmetic, FUNC_Private)
// Parameters:
// bool                           IsMoving                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UIntentCombinerComponent::GetCombinedIntent(bool IsMoving)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.IntentCombinerComponent.GetCombinedIntent"));}

	UIntentCombinerComponent_GetCombinedIntent_Params params;
	params.IsMoving = IsMoving;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.IntentComponent.SetIntent
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          NewIntent                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UIntentComponent::SetIntent(float NewIntent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.IntentComponent.SetIntent"));}

	UIntentComponent_SetIntent_Params params;
	params.NewIntent = NewIntent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.IntentComponent.Server_SetIntent
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          NewIntent                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UIntentComponent::Server_SetIntent(float NewIntent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.IntentComponent.Server_SetIntent"));}

	UIntentComponent_Server_SetIntent_Params params;
	params.NewIntent = NewIntent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.IntentComponent.GetIntent
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UIntentComponent::GetIntent()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.IntentComponent.GetIntent"));}

	UIntentComponent_GetIntent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ClimbingComponent.SetClimbId
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// unsigned char                  InClimbId                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UClimbingComponent::SetClimbId(unsigned char InClimbId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ClimbingComponent.SetClimbId"));}

	UClimbingComponent_SetClimbId_Params params;
	params.InClimbId = InClimbId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ClimbingComponent.IsClimbIdInSyncWithServer
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UClimbingComponent::IsClimbIdInSyncWithServer()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ClimbingComponent.IsClimbIdInSyncWithServer"));}

	UClimbingComponent_IsClimbIdInSyncWithServer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ClimbingComponent.GetServerHeight
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UClimbingComponent::GetServerHeight()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ClimbingComponent.GetServerHeight"));}

	UClimbingComponent_GetServerHeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ClimbingComponent.GetIsCurrentlyClimbing
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UClimbingComponent::GetIsCurrentlyClimbing()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ClimbingComponent.GetIsCurrentlyClimbing"));}

	UClimbingComponent_GetIsCurrentlyClimbing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ControllableIntentComponent.HasController
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UControllableIntentComponent::HasController()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControllableIntentComponent.HasController"));}

	UControllableIntentComponent_HasController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ControllableIntentComponent.GetIntent
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UControllableIntentComponent::GetIntent()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControllableIntentComponent.GetIntent"));}

	UControllableIntentComponent_GetIntent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.CapstanArm.GetLookAtPos
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector ACapstanArm::GetLookAtPos()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.CapstanArm.GetLookAtPos"));}

	ACapstanArm_GetLookAtPos_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.DebugShipController.Server_RequestUpdateSailsLowered
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          InRateOfChange                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ADebugShipController::Server_RequestUpdateSailsLowered(float InRateOfChange)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugShipController.Server_RequestUpdateSailsLowered"));}

	ADebugShipController_Server_RequestUpdateSailsLowered_Params params;
	params.InRateOfChange = InRateOfChange;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DebugShipController.Server_RequestUpdateSailsAngle
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          InRateOfChange                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ADebugShipController::Server_RequestUpdateSailsAngle(float InRateOfChange)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugShipController.Server_RequestUpdateSailsAngle"));}

	ADebugShipController_Server_RequestUpdateSailsAngle_Params params;
	params.InRateOfChange = InRateOfChange;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DebugShipController.Server_RequestToggleAnchorState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ADebugShipController::Server_RequestToggleAnchorState()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugShipController.Server_RequestToggleAnchorState"));}

	ADebugShipController_Server_RequestToggleAnchorState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.DebugShipController.Server_RequestSetRuddersAngleRatio
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          InRateOfChange                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ADebugShipController::Server_RequestSetRuddersAngleRatio(float InRateOfChange)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.DebugShipController.Server_RequestSetRuddersAngleRatio"));}

	ADebugShipController_Server_RequestSetRuddersAngleRatio_Params params;
	params.InRateOfChange = InRateOfChange;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PlayerLoadingInteractionPoint.Server_NotifyInteractionPointUsed
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  UsingActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void APlayerLoadingInteractionPoint::Server_NotifyInteractionPointUsed(class AActor* UsingActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerLoadingInteractionPoint.Server_NotifyInteractionPointUsed"));}

	APlayerLoadingInteractionPoint_Server_NotifyInteractionPointUsed_Params params;
	params.UsingActor = UsingActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SailManipulatorInterface.SetLocked
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           IsLocked                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void USailManipulatorInterface::SetLocked(bool IsLocked)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailManipulatorInterface.SetLocked"));}

	USailManipulatorInterface_SetLocked_Params params;
	params.IsLocked = IsLocked;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SailManipulatorInterface.SetIntent
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          NewIntent                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void USailManipulatorInterface::SetIntent(float NewIntent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailManipulatorInterface.SetIntent"));}

	USailManipulatorInterface_SetIntent_Params params;
	params.NewIntent = NewIntent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SailManipulatorInterface.IsLocked
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool USailManipulatorInterface::IsLocked()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailManipulatorInterface.IsLocked"));}

	USailManipulatorInterface_IsLocked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SailManipulatorInterface.GetTopMeshComponent
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UStaticMeshComponent*    ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData)

class UStaticMeshComponent* USailManipulatorInterface::GetTopMeshComponent()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailManipulatorInterface.GetTopMeshComponent"));}

	USailManipulatorInterface_GetTopMeshComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SailManipulatorInterface.GetCurrentIntent
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float USailManipulatorInterface::GetCurrentIntent()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailManipulatorInterface.GetCurrentIntent"));}

	USailManipulatorInterface_GetCurrentIntent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SailManipulatorInterface.GetBaseMeshComponent
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UStaticMeshComponent*    ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData)

class UStaticMeshComponent* USailManipulatorInterface::GetBaseMeshComponent()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailManipulatorInterface.GetBaseMeshComponent"));}

	USailManipulatorInterface_GetBaseMeshComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SailAngleInterface.GetSailTurnRate
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float USailAngleInterface::GetSailTurnRate()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailAngleInterface.GetSailTurnRate"));}

	USailAngleInterface_GetSailTurnRate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SailAngleInterface.GetSailAngleRatio
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float USailAngleInterface::GetSailAngleRatio()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailAngleInterface.GetSailAngleRatio"));}

	USailAngleInterface_GetSailAngleRatio_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SailAngleInterface.GetRightRopeStartingPoint
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector USailAngleInterface::GetRightRopeStartingPoint()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailAngleInterface.GetRightRopeStartingPoint"));}

	USailAngleInterface_GetRightRopeStartingPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SailAngleInterface.GetRightRopeEndingPoint
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector USailAngleInterface::GetRightRopeEndingPoint()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailAngleInterface.GetRightRopeEndingPoint"));}

	USailAngleInterface_GetRightRopeEndingPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SailAngleInterface.GetLeftRopeStartingPoint
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector USailAngleInterface::GetLeftRopeStartingPoint()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailAngleInterface.GetLeftRopeStartingPoint"));}

	USailAngleInterface_GetLeftRopeStartingPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SailAngleInterface.GetLeftRopeEndingPoint
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector USailAngleInterface::GetLeftRopeEndingPoint()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailAngleInterface.GetLeftRopeEndingPoint"));}

	USailAngleInterface_GetLeftRopeEndingPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SailHoistInterface.GetSailRaisedPercentage
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float USailHoistInterface::GetSailRaisedPercentage()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailHoistInterface.GetSailRaisedPercentage"));}

	USailHoistInterface_GetSailRaisedPercentage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SailHoistInterface.GetSailMovementRate
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float USailHoistInterface::GetSailMovementRate()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailHoistInterface.GetSailMovementRate"));}

	USailHoistInterface_GetSailMovementRate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SailHoistInterface.GetRopeStartingPoint
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector USailHoistInterface::GetRopeStartingPoint()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailHoistInterface.GetRopeStartingPoint"));}

	USailHoistInterface_GetRopeStartingPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SailHoistInterface.GetRopeEndingPoint
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector USailHoistInterface::GetRopeEndingPoint()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailHoistInterface.GetRopeEndingPoint"));}

	USailHoistInterface_GetRopeEndingPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.TestControllableObject.TestForceDisconnectIdleSecondsThreshold
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          DisconnectIdleThreshold        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ATestControllableObject::TestForceDisconnectIdleSecondsThreshold(float DisconnectIdleThreshold)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestControllableObject.TestForceDisconnectIdleSecondsThreshold"));}

	ATestControllableObject_TestForceDisconnectIdleSecondsThreshold_Params params;
	params.DisconnectIdleThreshold = DisconnectIdleThreshold;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestControllableObject.TestForceCanDisconnectWhenIdle
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           CanDisconnect                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ATestControllableObject::TestForceCanDisconnectWhenIdle(bool CanDisconnect)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestControllableObject.TestForceCanDisconnectWhenIdle"));}

	ATestControllableObject_TestForceCanDisconnectWhenIdle_Params params;
	params.CanDisconnect = CanDisconnect;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WheelInterface.GetWheelRate
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UWheelInterface::GetWheelRate()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WheelInterface.GetWheelRate"));}

	UWheelInterface_GetWheelRate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WheelInterface.GetWheelAngle
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UWheelInterface::GetWheelAngle()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WheelInterface.GetWheelAngle"));}

	UWheelInterface_GetWheelAngle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WheelInterface.GetWantedWheelAngle
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UWheelInterface::GetWantedWheelAngle()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WheelInterface.GetWantedWheelAngle"));}

	UWheelInterface_GetWantedWheelAngle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WheelInterface.GetServerWheelAngle
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UWheelInterface::GetServerWheelAngle()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WheelInterface.GetServerWheelAngle"));}

	UWheelInterface_GetServerWheelAngle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WheelInterface.GetNormalizedWheelPosition
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UWheelInterface::GetNormalizedWheelPosition()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WheelInterface.GetNormalizedWheelPosition"));}

	UWheelInterface_GetNormalizedWheelPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WheelInterface.GetAnimationType
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EWheelAnimationType> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EWheelAnimationType> UWheelInterface::GetAnimationType()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WheelInterface.GetAnimationType"));}

	UWheelInterface_GetAnimationType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WheelInterface.GetAnimationTime
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UWheelInterface::GetAnimationTime()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WheelInterface.GetAnimationTime"));}

	UWheelInterface_GetAnimationTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Wheel.Server_SetWheelAngle
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          WheelAngleIncrement            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AWheel::Server_SetWheelAngle(float WheelAngleIncrement)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Wheel.Server_SetWheelAngle"));}

	AWheel_Server_SetWheelAngle_Params params;
	params.WheelAngleIncrement = WheelAngleIncrement;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Wheel.OnWheelDescLoaded
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UWheelDescAsset*         WheelDesc                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AWheel::OnWheelDescLoaded(class UWheelDescAsset* WheelDesc)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Wheel.OnWheelDescLoaded"));}

	AWheel_OnWheelDescLoaded_Params params;
	params.WheelDesc = WheelDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Wheel.OnRep_ServerWheelAngle
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AWheel::OnRep_ServerWheelAngle()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Wheel.OnRep_ServerWheelAngle"));}

	AWheel_OnRep_ServerWheelAngle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Wheel.Multicast_ForceSetWheelAngle
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Angle                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AWheel::Multicast_ForceSetWheelAngle(float Angle)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Wheel.Multicast_ForceSetWheelAngle"));}

	AWheel_Multicast_ForceSetWheelAngle_Params params;
	params.Angle = Angle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Wheel.GetWheelMesh
// (FUNC_BlueprintCosmetic)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData)

class USkeletalMeshComponent* AWheel::GetWheelMesh()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Wheel.GetWheelMesh"));}

	AWheel_GetWheelMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Wheel.GetMaxWheelAngle
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float AWheel::GetMaxWheelAngle()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Wheel.GetMaxWheelAngle"));}

	AWheel_GetMaxWheelAngle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Wheel.ForceSetWheelAngle
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Angle                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AWheel::ForceSetWheelAngle(float Angle)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Wheel.ForceSetWheelAngle"));}

	AWheel_ForceSetWheelAngle_Params params;
	params.Angle = Angle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Wheel.ApplyWheelInput
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Value                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AWheel::ApplyWheelInput(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Wheel.ApplyWheelInput"));}

	AWheel_ApplyWheelInput_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestDamageZone.TestStopWaterLeakSfx
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ATestDamageZone::TestStopWaterLeakSfx()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestDamageZone.TestStopWaterLeakSfx"));}

	ATestDamageZone_TestStopWaterLeakSfx_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestDamageZone.TestStopWaterLeakRepairingSfx
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ATestDamageZone::TestStopWaterLeakRepairingSfx()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestDamageZone.TestStopWaterLeakRepairingSfx"));}

	ATestDamageZone_TestStopWaterLeakRepairingSfx_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestDamageZone.TestPlayWaterLeakSfx
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ATestDamageZone::TestPlayWaterLeakSfx()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestDamageZone.TestPlayWaterLeakSfx"));}

	ATestDamageZone_TestPlayWaterLeakSfx_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestDamageZone.TestPlayWaterLeakRepairingSfx
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ATestDamageZone::TestPlayWaterLeakRepairingSfx()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestDamageZone.TestPlayWaterLeakRepairingSfx"));}

	ATestDamageZone_TestPlayWaterLeakRepairingSfx_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestDamageZone.IsWaterLeakSfxPlaying
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ATestDamageZone::IsWaterLeakSfxPlaying()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestDamageZone.IsWaterLeakSfxPlaying"));}

	ATestDamageZone_IsWaterLeakSfxPlaying_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.TestDamageZone.IsWaterLeakRepairSfxPlaying
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ATestDamageZone::IsWaterLeakRepairSfxPlaying()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestDamageZone.IsWaterLeakRepairSfxPlaying"));}

	ATestDamageZone_IsWaterLeakRepairSfxPlaying_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Bell.RingBell
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           IsInTurbulence                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ABell::RingBell(bool IsInTurbulence)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Bell.RingBell"));}

	ABell_RingBell_Params params;
	params.IsInTurbulence = IsInTurbulence;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InteractableLight.OnRep_OnLightStateChanged
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AInteractableLight::OnRep_OnLightStateChanged()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InteractableLight.OnRep_OnLightStateChanged"));}

	AInteractableLight_OnRep_OnLightStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InteractableLight.LightStateChanged
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AInteractableLight::LightStateChanged()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InteractableLight.LightStateChanged"));}

	AInteractableLight_LightStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InteractableLight.IsLightOn
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AInteractableLight::IsLightOn()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InteractableLight.IsLightOn"));}

	AInteractableLight_IsLightOn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Mermaid.OnRep_State
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AMermaid::OnRep_State()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Mermaid.OnRep_State"));}

	AMermaid_OnRep_State_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Mermaid.Multicast_TeleportPlayerRPC
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaPlayerCharacter*  Player                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMermaid::Multicast_TeleportPlayerRPC(class AAthenaPlayerCharacter* Player)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Mermaid.Multicast_TeleportPlayerRPC"));}

	AMermaid_Multicast_TeleportPlayerRPC_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Mermaid.Multicast_SurfacedRPC
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AMermaid::Multicast_SurfacedRPC()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Mermaid.Multicast_SurfacedRPC"));}

	AMermaid_Multicast_SurfacedRPC_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Mermaid.Multicast_DiveRPC
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AMermaid::Multicast_DiveRPC()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Mermaid.Multicast_DiveRPC"));}

	AMermaid_Multicast_DiveRPC_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Mermaid.IsBeaconActive
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AMermaid::IsBeaconActive()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Mermaid.IsBeaconActive"));}

	AMermaid_IsBeaconActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Mermaid.GetUniqueMermaidId
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int AMermaid::GetUniqueMermaidId()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Mermaid.GetUniqueMermaidId"));}

	AMermaid_GetUniqueMermaidId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Mermaid.GetCrewIdsResponsibleForSavingAsCopy
// ()
// Parameters:
// TArray<struct FGuid>           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<struct FGuid> AMermaid::GetCrewIdsResponsibleForSavingAsCopy()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Mermaid.GetCrewIdsResponsibleForSavingAsCopy"));}

	AMermaid_GetCrewIdsResponsibleForSavingAsCopy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Mermaid.AddCrewResponsibleForSaving
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FGuid                   CrewId                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMermaid::AddCrewResponsibleForSaving(const struct FGuid& CrewId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Mermaid.AddCrewResponsibleForSaving"));}

	AMermaid_AddCrewResponsibleForSaving_Params params;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MusicBox.OnRep_OnIsPlayingChanged
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           WasPlaying                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMusicBox::OnRep_OnIsPlayingChanged(bool WasPlaying)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MusicBox.OnRep_OnIsPlayingChanged"));}

	AMusicBox_OnRep_OnIsPlayingChanged_Params params;
	params.WasPlaying = WasPlaying;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipwrightOneShot.TestForceExpireAllRestockMoratoriums
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AShipwrightOneShot::TestForceExpireAllRestockMoratoriums()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipwrightOneShot.TestForceExpireAllRestockMoratoriums"));}

	AShipwrightOneShot_TestForceExpireAllRestockMoratoriums_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipwrightOneShot.RestockShip
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  InInteractor                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AShipwrightOneShot::RestockShip(class AActor* InInteractor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipwrightOneShot.RestockShip"));}

	AShipwrightOneShot_RestockShip_Params params;
	params.InInteractor = InInteractor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipwrightOneShot.IsShipCloseAndSlowEnoughToRestock
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AShip*                   Ship                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AShipwrightOneShot::IsShipCloseAndSlowEnoughToRestock(class AShip* Ship)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipwrightOneShot.IsShipCloseAndSlowEnoughToRestock"));}

	AShipwrightOneShot_IsShipCloseAndSlowEnoughToRestock_Params params;
	params.Ship = Ship;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipwrightOneShot.GetTimeInSecondsUntilNextRestock
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  Player                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float AShipwrightOneShot::GetTimeInSecondsUntilNextRestock(class AActor* Player)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipwrightOneShot.GetTimeInSecondsUntilNextRestock"));}

	AShipwrightOneShot_GetTimeInSecondsUntilNextRestock_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipwrightOneShot.GetHasRestockMoratoriumDataForPlayerCrew
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  Player                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AShipwrightOneShot::GetHasRestockMoratoriumDataForPlayerCrew(class AActor* Player)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipwrightOneShot.GetHasRestockMoratoriumDataForPlayerCrew"));}

	AShipwrightOneShot_GetHasRestockMoratoriumDataForPlayerCrew_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LandmarkReactionInterface.StopReaction
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ULandmarkReactionInterface::StopReaction()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LandmarkReactionInterface.StopReaction"));}

	ULandmarkReactionInterface_StopReaction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LandmarkReactionInterface.StartReaction
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ULandmarkReactionInterface::StartReaction()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LandmarkReactionInterface.StartReaction"));}

	ULandmarkReactionInterface_StartReaction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LandmarkReactionActor.StopReaction
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ALandmarkReactionActor::StopReaction()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LandmarkReactionActor.StopReaction"));}

	ALandmarkReactionActor_StopReaction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LandmarkReactionActor.StartReaction
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ALandmarkReactionActor::StartReaction()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LandmarkReactionActor.StartReaction"));}

	ALandmarkReactionActor_StartReaction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SkeletonFortDoor.ResetDoor
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ASkeletonFortDoor::ResetDoor()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SkeletonFortDoor.ResetDoor"));}

	ASkeletonFortDoor_ResetDoor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SkeletonFortDoor.OpenDoor
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ASkeletonFortDoor::OpenDoor()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SkeletonFortDoor.OpenDoor"));}

	ASkeletonFortDoor_OpenDoor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SkeletonFortDoor.OnRep_ServerDoorState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ASkeletonFortDoor::OnRep_ServerDoorState()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SkeletonFortDoor.OnRep_ServerDoorState"));}

	ASkeletonFortDoor_OnRep_ServerDoorState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BuoyantStorageContainer.OnRep_PhysicsState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ABuoyantStorageContainer::OnRep_PhysicsState()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BuoyantStorageContainer.OnRep_PhysicsState"));}

	ABuoyantStorageContainer_OnRep_PhysicsState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TankardRefiller.Replenish
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ATankardRefiller::Replenish()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TankardRefiller.Replenish"));}

	ATankardRefiller_Replenish_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TankardRefiller.IsAtMaxCapacity
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ATankardRefiller::IsAtMaxCapacity()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TankardRefiller.IsAtMaxCapacity"));}

	ATankardRefiller_IsAtMaxCapacity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.TankardRefiller.HasRemainingCapacity
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ATankardRefiller::HasRemainingCapacity()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TankardRefiller.HasRemainingCapacity"));}

	ATankardRefiller_HasRemainingCapacity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.TankardRefiller.GetRemainingCapacity
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int ATankardRefiller::GetRemainingCapacity()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TankardRefiller.GetRemainingCapacity"));}

	ATankardRefiller_GetRemainingCapacity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.TankardRefiller.GetRefillCost
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int ATankardRefiller::GetRefillCost()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TankardRefiller.GetRefillCost"));}

	ATankardRefiller_GetRefillCost_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.TankardRefiller.GetCapacity
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int ATankardRefiller::GetCapacity()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TankardRefiller.GetCapacity"));}

	ATankardRefiller_GetCapacity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.TankardRefiller.Deplete
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ATankardRefiller::Deplete()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TankardRefiller.Deplete"));}

	ATankardRefiller_Deplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TankardRefiller.CanBeReplenished
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ATankardRefiller::CanBeReplenished()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TankardRefiller.CanBeReplenished"));}

	ATankardRefiller_CanBeReplenished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.TankardRefiller.AddDefaultStockLevel
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ATankardRefiller::AddDefaultStockLevel()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TankardRefiller.AddDefaultStockLevel"));}

	ATankardRefiller_AddDefaultStockLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TankardRefillerMock.SetRemainingCapacity
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            InRemainingCapacity            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ATankardRefillerMock::SetRemainingCapacity(int InRemainingCapacity)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TankardRefillerMock.SetRemainingCapacity"));}

	ATankardRefillerMock_SetRemainingCapacity_Params params;
	params.InRemainingCapacity = InRemainingCapacity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TankardRefillerMock.SetCapacity
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            InCapacity                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ATankardRefillerMock::SetCapacity(int InCapacity)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TankardRefillerMock.SetCapacity"));}

	ATankardRefillerMock_SetCapacity_Params params;
	params.InCapacity = InCapacity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LadderInterface.GetLadderHeight
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ULadderInterface::GetLadderHeight()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LadderInterface.GetLadderHeight"));}

	ULadderInterface_GetLadderHeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Ladder.GetTopLadderRungTransform
// ()
// Parameters:
// struct FTransform              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_IsPlainOldData)

struct FTransform ALadder::GetTopLadderRungTransform()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ladder.GetTopLadderRungTransform"));}

	ALadder_GetTopLadderRungTransform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Ladder.GetBottomLadderRungTransform
// ()
// Parameters:
// struct FTransform              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_IsPlainOldData)

struct FTransform ALadder::GetBottomLadderRungTransform()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ladder.GetBottomLadderRungTransform"));}

	ALadder_GetBottomLadderRungTransform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VoyageProposalContainer.SetManifest
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class ACrewShipManifest*       Manifest                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AVoyageProposalContainer::SetManifest(class ACrewShipManifest* Manifest)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VoyageProposalContainer.SetManifest"));}

	AVoyageProposalContainer_SetManifest_Params params;
	params.Manifest = Manifest;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TreasureChestItemProxy.OnRep_State
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<ETreasureChestProxyState> OldState                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ATreasureChestItemProxy::OnRep_State(TEnumAsByte<ETreasureChestProxyState> OldState)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TreasureChestItemProxy.OnRep_State"));}

	ATreasureChestItemProxy_OnRep_State_Params params;
	params.OldState = OldState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TreasureChestItemProxy.OnRep_NumDigsLeft
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            PrevNumDigsLeft                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ATreasureChestItemProxy::OnRep_NumDigsLeft(int PrevNumDigsLeft)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TreasureChestItemProxy.OnRep_NumDigsLeft"));}

	ATreasureChestItemProxy_OnRep_NumDigsLeft_Params params;
	params.PrevNumDigsLeft = PrevNumDigsLeft;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MessageInABottleItemProxy.Multicast_Smash
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AMessageInABottleItemProxy::Multicast_Smash()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MessageInABottleItemProxy.Multicast_Smash"));}

	AMessageInABottleItemProxy_Multicast_Smash_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.VotableObjectView.OnVoteRemoved
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TScriptInterface<class UVoterInterface> Voter                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void AVotableObjectView::OnVoteRemoved(const TScriptInterface<class UVoterInterface>& Voter)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VotableObjectView.OnVoteRemoved"));}

	AVotableObjectView_OnVoteRemoved_Params params;
	params.Voter = Voter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.VotableObjectView.OnVoteCompleted
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           IsWinner                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AVotableObjectView::OnVoteCompleted(bool IsWinner)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VotableObjectView.OnVoteCompleted"));}

	AVotableObjectView_OnVoteCompleted_Params params;
	params.IsWinner = IsWinner;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.VotableObjectView.OnVoteAdded
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TScriptInterface<class UVoterInterface> Voter                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void AVotableObjectView::OnVoteAdded(const TScriptInterface<class UVoterInterface>& Voter)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VotableObjectView.OnVoteAdded"));}

	AVotableObjectView_OnVoteAdded_Params params;
	params.Voter = Voter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.VotableObjectView.GetVoter
// (FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// int                            Index                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TScriptInterface<class UVoterInterface> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TScriptInterface<class UVoterInterface> AVotableObjectView::GetVoter(int Index)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VotableObjectView.GetVoter"));}

	AVotableObjectView_GetVoter_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InteractablesTestFunctions.SpawnLargeShipForMPTesting
// (FUNC_BlueprintCosmetic, FUNC_NetServer)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 Position                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FRotator                Rotation                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AShip*                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AShip* UInteractablesTestFunctions::SpawnLargeShipForMPTesting(class UObject* WorldContextObject, const struct FVector& Position, const struct FRotator& Rotation)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InteractablesTestFunctions.SpawnLargeShipForMPTesting"));}

	UInteractablesTestFunctions_SpawnLargeShipForMPTesting_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Position = Position;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InteractablesTestFunctions.SetupServerSideAndSpawnShip
// (FUNC_BlueprintCosmetic, FUNC_Delegate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          CapstanPosition                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          SailsLoweredPosition           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AShip*                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AShip* UInteractablesTestFunctions::SetupServerSideAndSpawnShip(class UObject* WorldContextObject, float CapstanPosition, float SailsLoweredPosition)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InteractablesTestFunctions.SetupServerSideAndSpawnShip"));}

	UInteractablesTestFunctions_SetupServerSideAndSpawnShip_Params params;
	params.WorldContextObject = WorldContextObject;
	params.CapstanPosition = CapstanPosition;
	params.SailsLoweredPosition = SailsLoweredPosition;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InteractablesTestFunctions.SetupClientSide
// (FUNC_Protected)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AShip*                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AShip* UInteractablesTestFunctions::SetupClientSide(class UObject* WorldContextObject)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InteractablesTestFunctions.SetupClientSide"));}

	UInteractablesTestFunctions_SetupClientSide_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InteractionCompositeInputHandler.OnSecondaryInteractReleased
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UInteractionCompositeInputHandler::OnSecondaryInteractReleased()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InteractionCompositeInputHandler.OnSecondaryInteractReleased"));}

	UInteractionCompositeInputHandler_OnSecondaryInteractReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InteractionCompositeInputHandler.OnSecondaryInteract
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UInteractionCompositeInputHandler::OnSecondaryInteract()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InteractionCompositeInputHandler.OnSecondaryInteract"));}

	UInteractionCompositeInputHandler_OnSecondaryInteract_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InteractionCompositeInputHandler.OnPrimaryInteractReleased
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UInteractionCompositeInputHandler::OnPrimaryInteractReleased()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InteractionCompositeInputHandler.OnPrimaryInteractReleased"));}

	UInteractionCompositeInputHandler_OnPrimaryInteractReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InteractionCompositeInputHandler.OnPrimaryInteract
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UInteractionCompositeInputHandler::OnPrimaryInteract()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InteractionCompositeInputHandler.OnPrimaryInteract"));}

	UInteractionCompositeInputHandler_OnPrimaryInteract_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InteractionPoliciesTestFunctions.WithinInteractionAngleValidationPolicy_WithInteractorBehindTheObject_IsInvalidReturnsFalse
// (FUNC_Final, FUNC_Delegate)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  InInteractable                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UInteractionPoliciesTestFunctions::WithinInteractionAngleValidationPolicy_WithInteractorBehindTheObject_IsInvalidReturnsFalse(class AAthenaCharacter* InCharacter, class AActor* InInteractable)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InteractionPoliciesTestFunctions.WithinInteractionAngleValidationPolicy_WithInteractorBehindTheObject_IsInvalidReturnsFalse"));}

	UInteractionPoliciesTestFunctions_WithinInteractionAngleValidationPolicy_WithInteractorBehindTheObject_IsInvalidReturnsFalse_Params params;
	params.InCharacter = InCharacter;
	params.InInteractable = InInteractable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InteractionPoliciesTestFunctions.WithinInteractionAngleValidationPolicy_WithinInteractionAngleInteractor_IsValidReturnsTrue
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected, FUNC_Delegate)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          InInteractionRegionDegrees     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UInteractableArea*       InRegionInteractor             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UInteractionPoliciesTestFunctions::WithinInteractionAngleValidationPolicy_WithinInteractionAngleInteractor_IsValidReturnsTrue(class AAthenaCharacter* InCharacter, float InInteractionRegionDegrees, class UInteractableArea* InRegionInteractor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InteractionPoliciesTestFunctions.WithinInteractionAngleValidationPolicy_WithinInteractionAngleInteractor_IsValidReturnsTrue"));}

	UInteractionPoliciesTestFunctions_WithinInteractionAngleValidationPolicy_WithinInteractionAngleInteractor_IsValidReturnsTrue_Params params;
	params.InCharacter = InCharacter;
	params.InInteractionRegionDegrees = InInteractionRegionDegrees;
	params.InRegionInteractor = InRegionInteractor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InteractionPoliciesTestFunctions.WithinInteractionAngleValidationPolicy_OutsideInteractionAngleInteractor_IsValidReturnsFalse
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected, FUNC_Delegate)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          InInteractionRegionDegrees     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UInteractableArea*       InOutOfRegionInteractor        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UInteractionPoliciesTestFunctions::WithinInteractionAngleValidationPolicy_OutsideInteractionAngleInteractor_IsValidReturnsFalse(class AAthenaCharacter* InCharacter, float InInteractionRegionDegrees, class UInteractableArea* InOutOfRegionInteractor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InteractionPoliciesTestFunctions.WithinInteractionAngleValidationPolicy_OutsideInteractionAngleInteractor_IsValidReturnsFalse"));}

	UInteractionPoliciesTestFunctions_WithinInteractionAngleValidationPolicy_OutsideInteractionAngleInteractor_IsValidReturnsFalse_Params params;
	params.InCharacter = InCharacter;
	params.InInteractionRegionDegrees = InInteractionRegionDegrees;
	params.InOutOfRegionInteractor = InOutOfRegionInteractor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InteractionPoliciesTestFunctions.ClosestToPlayerSortingPolicy_WithTwoInteractablesClosestAndFurthest_ClosestTakesHighestPrecedent
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected, FUNC_Delegate)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UInteractableArea*       InClosestInteractable          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UInteractableArea*       InFurthestInteractable         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UInteractionPoliciesTestFunctions::ClosestToPlayerSortingPolicy_WithTwoInteractablesClosestAndFurthest_ClosestTakesHighestPrecedent(class AAthenaCharacter* InCharacter, class UInteractableArea* InClosestInteractable, class UInteractableArea* InFurthestInteractable)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InteractionPoliciesTestFunctions.ClosestToPlayerSortingPolicy_WithTwoInteractablesClosestAndFurthest_ClosestTakesHighestPrecedent"));}

	UInteractionPoliciesTestFunctions_ClosestToPlayerSortingPolicy_WithTwoInteractablesClosestAndFurthest_ClosestTakesHighestPrecedent_Params params;
	params.InCharacter = InCharacter;
	params.InClosestInteractable = InClosestInteractable;
	params.InFurthestInteractable = InFurthestInteractable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InteractionPoliciesTestFunctions.CenterOfScreenDistanceSortingPolicy_ExecuteTakesHighestPrecedent
// (FUNC_Final, FUNC_NetServer)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UInteractableArea*       InLhsInteractor                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UInteractableArea*       InRhsInteractor                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          InPlayerDistanceDelta          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          InCenterDistanceDelta          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UInteractionPoliciesTestFunctions::CenterOfScreenDistanceSortingPolicy_ExecuteTakesHighestPrecedent(class AAthenaCharacter* InCharacter, class UInteractableArea* InLhsInteractor, class UInteractableArea* InRhsInteractor, float InPlayerDistanceDelta, float InCenterDistanceDelta)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InteractionPoliciesTestFunctions.CenterOfScreenDistanceSortingPolicy_ExecuteTakesHighestPrecedent"));}

	UInteractionPoliciesTestFunctions_CenterOfScreenDistanceSortingPolicy_ExecuteTakesHighestPrecedent_Params params;
	params.InCharacter = InCharacter;
	params.InLhsInteractor = InLhsInteractor;
	params.InRhsInteractor = InRhsInteractor;
	params.InPlayerDistanceDelta = InPlayerDistanceDelta;
	params.InCenterDistanceDelta = InCenterDistanceDelta;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InteractionPoliciesTestFunctions.CanInteractValidationPolicy_WithCantInteractInteractor_IsValidReturnsFalse
// (FUNC_Final, FUNC_Delegate)
// Parameters:
// class AActor*                  InCharacter                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UInteractableArea*       InCanInteractInteractor        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UInteractionPoliciesTestFunctions::CanInteractValidationPolicy_WithCantInteractInteractor_IsValidReturnsFalse(class AActor* InCharacter, class UInteractableArea* InCanInteractInteractor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InteractionPoliciesTestFunctions.CanInteractValidationPolicy_WithCantInteractInteractor_IsValidReturnsFalse"));}

	UInteractionPoliciesTestFunctions_CanInteractValidationPolicy_WithCantInteractInteractor_IsValidReturnsFalse_Params params;
	params.InCharacter = InCharacter;
	params.InCanInteractInteractor = InCanInteractInteractor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InteractionPoliciesTestFunctions.CanInteractValidationPolicy_WithCanInteractInteractor_IsValidReturnsTrue
// (FUNC_Final, FUNC_Delegate)
// Parameters:
// class AActor*                  InCharacter                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UInteractableArea*       InCanInteractInteractor        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UInteractionPoliciesTestFunctions::CanInteractValidationPolicy_WithCanInteractInteractor_IsValidReturnsTrue(class AActor* InCharacter, class UInteractableArea* InCanInteractInteractor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InteractionPoliciesTestFunctions.CanInteractValidationPolicy_WithCanInteractInteractor_IsValidReturnsTrue"));}

	UInteractionPoliciesTestFunctions_CanInteractValidationPolicy_WithCanInteractInteractor_IsValidReturnsTrue_Params params;
	params.InCharacter = InCharacter;
	params.InCanInteractInteractor = InCanInteractInteractor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InteractionPoliciesTestFunctions.AirbornePolicy_ExecuteCanInteract
// (FUNC_Final, FUNC_Delegate)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  InInteractable                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UInteractionPoliciesTestFunctions::AirbornePolicy_ExecuteCanInteract(class AAthenaCharacter* InCharacter, class AActor* InInteractable)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InteractionPoliciesTestFunctions.AirbornePolicy_ExecuteCanInteract"));}

	UInteractionPoliciesTestFunctions_AirbornePolicy_ExecuteCanInteract_Params params;
	params.InCharacter = InCharacter;
	params.InInteractable = InInteractable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InteractObjectActionStateId.PushCharacterIntoInteractObjectActionState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  InteractObject                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UInteractObjectActionStateId::PushCharacterIntoInteractObjectActionState(class AActor* InteractObject, class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InteractObjectActionStateId.PushCharacterIntoInteractObjectActionState"));}

	UInteractObjectActionStateId_PushCharacterIntoInteractObjectActionState_Params params;
	params.InteractObject = InteractObject;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryManipulatorComponent.WieldItemByActor
// (FUNC_RequiredAPI, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Protected)
// Parameters:
// class AActor*                  Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           UnwieldFast                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EWieldItemReturnCode> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EWieldItemReturnCode> UInventoryManipulatorComponent::WieldItemByActor(class AActor* Item, bool UnwieldFast)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.WieldItemByActor"));}

	UInventoryManipulatorComponent_WieldItemByActor_Params params;
	params.Item = Item;
	params.UnwieldFast = UnwieldFast;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorComponent.WieldItem
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            ItemIndex                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           Fast                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UInventoryManipulatorComponent::WieldItem(int ItemIndex, bool Fast)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.WieldItem"));}

	UInventoryManipulatorComponent_WieldItem_Params params;
	params.ItemIndex = ItemIndex;
	params.Fast = Fast;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryManipulatorComponent.ToggleWieldItem
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UInventoryManipulatorComponent::ToggleWieldItem()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.ToggleWieldItem"));}

	UInventoryManipulatorComponent_ToggleWieldItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryManipulatorComponent.Server_DropItemRPC
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UInventoryManipulatorComponent::Server_DropItemRPC(class AActor* Item)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.Server_DropItemRPC"));}

	UInventoryManipulatorComponent_Server_DropItemRPC_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryManipulatorComponent.RemoveItem
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AItemInfo*               Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UInventoryManipulatorComponent::RemoveItem(class AItemInfo* Item)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.RemoveItem"));}

	UInventoryManipulatorComponent_RemoveItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorComponent.QuickSelectItemOfType
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EItemType>         ItemType                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            TypedItemIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UInventoryManipulatorComponent::QuickSelectItemOfType(TEnumAsByte<EItemType> ItemType, int TypedItemIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.QuickSelectItemOfType"));}

	UInventoryManipulatorComponent_QuickSelectItemOfType_Params params;
	params.ItemType = ItemType;
	params.TypedItemIndex = TypedItemIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryManipulatorComponent.QuickSelectItemOfCategory
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  Category                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            IndexIntoCategory              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UInventoryManipulatorComponent::QuickSelectItemOfCategory(class UClass* Category, int IndexIntoCategory)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.QuickSelectItemOfCategory"));}

	UInventoryManipulatorComponent_QuickSelectItemOfCategory_Params params;
	params.Category = Category;
	params.IndexIntoCategory = IndexIntoCategory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryManipulatorComponent.QuickSelectItem
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            ItemIndex                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UInventoryManipulatorComponent::QuickSelectItem(int ItemIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.QuickSelectItem"));}

	UInventoryManipulatorComponent_QuickSelectItem_Params params;
	params.ItemIndex = ItemIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryManipulatorComponent.PickUpItem
// (FUNC_RequiredAPI, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Protected)
// Parameters:
// class AItemInfo*               ItemInfo                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           AndWield                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UInventoryManipulatorComponent::PickUpItem(class AItemInfo* ItemInfo, bool AndWield)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.PickUpItem"));}

	UInventoryManipulatorComponent_PickUpItem_Params params;
	params.ItemInfo = ItemInfo;
	params.AndWield = AndWield;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorComponent.Multicast_ItemPickedUpRPC
// (FUNC_RequiredAPI, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EWieldableItemSize> ItemSize                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           WasEmptyHanded                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UInventoryManipulatorComponent::Multicast_ItemPickedUpRPC(TEnumAsByte<EWieldableItemSize> ItemSize, bool WasEmptyHanded)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.Multicast_ItemPickedUpRPC"));}

	UInventoryManipulatorComponent_Multicast_ItemPickedUpRPC_Params params;
	params.ItemSize = ItemSize;
	params.WasEmptyHanded = WasEmptyHanded;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryManipulatorComponent.Multicast_CurrentItemActorIndexChangedRPC
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            NewIndex                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UInventoryManipulatorComponent::Multicast_CurrentItemActorIndexChangedRPC(int NewIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.Multicast_CurrentItemActorIndexChangedRPC"));}

	UInventoryManipulatorComponent_Multicast_CurrentItemActorIndexChangedRPC_Params params;
	params.NewIndex = NewIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryManipulatorComponent.IsIdle
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UInventoryManipulatorComponent::IsIdle()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.IsIdle"));}

	UInventoryManipulatorComponent_IsIdle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorComponent.GetNumberOfItemsOfItemCategory
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  ItemSlot                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UInventoryManipulatorComponent::GetNumberOfItemsOfItemCategory(class UClass* ItemSlot)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.GetNumberOfItemsOfItemCategory"));}

	UInventoryManipulatorComponent_GetNumberOfItemsOfItemCategory_Params params;
	params.ItemSlot = ItemSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorComponent.GetCurrentItemIndex
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UInventoryManipulatorComponent::GetCurrentItemIndex()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.GetCurrentItemIndex"));}

	UInventoryManipulatorComponent_GetCurrentItemIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorComponent.DropWieldedItem
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EDropItemReturnCode> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EDropItemReturnCode> UInventoryManipulatorComponent::DropWieldedItem()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.DropWieldedItem"));}

	UInventoryManipulatorComponent_DropWieldedItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorComponent.DropOrDestroyLargeWieldedItem
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UInventoryManipulatorComponent::DropOrDestroyLargeWieldedItem()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.DropOrDestroyLargeWieldedItem"));}

	UInventoryManipulatorComponent_DropOrDestroyLargeWieldedItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryManipulatorComponent.DetermineDropPos
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_Private, FUNC_Protected, FUNC_HasDefaults)
// Parameters:
// struct FVector                 InSpawnPos                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// struct FHitResult              OutHit                         (CPF_Parm, CPF_OutParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UInventoryManipulatorComponent::DetermineDropPos(const struct FVector& InSpawnPos, struct FHitResult* OutHit)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.DetermineDropPos"));}

	UInventoryManipulatorComponent_DetermineDropPos_Params params;
	params.InSpawnPos = InSpawnPos;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHit != nullptr)
		*OutHit = params.OutHit;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorComponent.CycleItemUp
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UInventoryManipulatorComponent::CycleItemUp()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.CycleItemUp"));}

	UInventoryManipulatorComponent_CycleItemUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryManipulatorComponent.CycleItemType
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EItemType>         ItemType                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UInventoryManipulatorComponent::CycleItemType(TEnumAsByte<EItemType> ItemType)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.CycleItemType"));}

	UInventoryManipulatorComponent_CycleItemType_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryManipulatorComponent.CycleItemDown
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UInventoryManipulatorComponent::CycleItemDown()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.CycleItemDown"));}

	UInventoryManipulatorComponent_CycleItemDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryManipulatorComponent.CycleItemCategory
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  Category                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UInventoryManipulatorComponent::CycleItemCategory(class UClass* Category)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.CycleItemCategory"));}

	UInventoryManipulatorComponent_CycleItemCategory_Params params;
	params.Category = Category;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.InventoryManipulatorComponent.ConsumeItem
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AItemInfo*               Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UInventoryManipulatorComponent::ConsumeItem(class AItemInfo* Item)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.ConsumeItem"));}

	UInventoryManipulatorComponent_ConsumeItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorComponent.CanDropWieldedItem
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EDropItemReturnCode> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EDropItemReturnCode> UInventoryManipulatorComponent::CanDropWieldedItem()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.CanDropWieldedItem"));}

	UInventoryManipulatorComponent_CanDropWieldedItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorComponent.CanAddItemOfItemCategory
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  ItemSlot                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<ECanAddItemQueryResult> ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<ECanAddItemQueryResult> UInventoryManipulatorComponent::CanAddItemOfItemCategory(class UClass* ItemSlot)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.CanAddItemOfItemCategory"));}

	UInventoryManipulatorComponent_CanAddItemOfItemCategory_Params params;
	params.ItemSlot = ItemSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorComponent.AddItem
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AItemInfo*               Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UInventoryManipulatorComponent::AddItem(class AItemInfo* Item)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponent.AddItem"));}

	UInventoryManipulatorComponent_AddItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.InventoryManipulatorComponentMock.ForceDroppedItemToAttachToHitActor
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           InValue                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UInventoryManipulatorComponentMock::ForceDroppedItemToAttachToHitActor(bool InValue)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.InventoryManipulatorComponentMock.ForceDroppedItemToAttachToHitActor"));}

	UInventoryManipulatorComponentMock_ForceDroppedItemToAttachToHitActor_Params params;
	params.InValue = InValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaGameState.OnRep_ReplicatedWindService
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaGameState::OnRep_ReplicatedWindService()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaGameState.OnRep_ReplicatedWindService"));}

	AAthenaGameState_OnRep_ReplicatedWindService_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaGameState.OnRep_ReplicatedWaterService
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaGameState::OnRep_ReplicatedWaterService()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaGameState.OnRep_ReplicatedWaterService"));}

	AAthenaGameState_OnRep_ReplicatedWaterService_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaGameState.OnRep_ReplicatedTimeService
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaGameState::OnRep_ReplicatedTimeService()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaGameState.OnRep_ReplicatedTimeService"));}

	AAthenaGameState_OnRep_ReplicatedTimeService_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaGameState.OnRep_ReplicatedStormService
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaGameState::OnRep_ReplicatedStormService()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaGameState.OnRep_ReplicatedStormService"));}

	AAthenaGameState_OnRep_ReplicatedStormService_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaGameState.OnRep_ReplicatedShipwrightService
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaGameState::OnRep_ReplicatedShipwrightService()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaGameState.OnRep_ReplicatedShipwrightService"));}

	AAthenaGameState_OnRep_ReplicatedShipwrightService_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaGameState.OnRep_ReplicatedShipService
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaGameState::OnRep_ReplicatedShipService()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaGameState.OnRep_ReplicatedShipService"));}

	AAthenaGameState_OnRep_ReplicatedShipService_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaGameState.OnRep_ReplicatedPlayerManagerService
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaGameState::OnRep_ReplicatedPlayerManagerService()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaGameState.OnRep_ReplicatedPlayerManagerService"));}

	AAthenaGameState_OnRep_ReplicatedPlayerManagerService_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaGameState.OnRep_ReplicatedKrakenService
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaGameState::OnRep_ReplicatedKrakenService()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaGameState.OnRep_ReplicatedKrakenService"));}

	AAthenaGameState_OnRep_ReplicatedKrakenService_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaGameState.OnRep_ReplicatedIslandService
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaGameState::OnRep_ReplicatedIslandService()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaGameState.OnRep_ReplicatedIslandService"));}

	AAthenaGameState_OnRep_ReplicatedIslandService_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaGameState.OnRep_ReplicatedDrawDebugService
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaGameState::OnRep_ReplicatedDrawDebugService()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaGameState.OnRep_ReplicatedDrawDebugService"));}

	AAthenaGameState_OnRep_ReplicatedDrawDebugService_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.AthenaGameState.OnRep_ReplicatedCrewService
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AAthenaGameState::OnRep_ReplicatedCrewService()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.AthenaGameState.OnRep_ReplicatedCrewService"));}

	AAthenaGameState_OnRep_ReplicatedCrewService_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.IslandData.OnOverlapEnd
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Other                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AIslandData::OnOverlapEnd(class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.IslandData.OnOverlapEnd"));}

	AIslandData_OnOverlapEnd_Params params;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.IslandData.OnOverlapBegin
// (FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Other                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bFromSweep                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FHitResult              OverlapInfo                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void AIslandData::OnOverlapBegin(class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.IslandData.OnOverlapBegin"));}

	AIslandData_OnOverlapBegin_Params params;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.OverlapInfo = OverlapInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.IslandData.MakeFIsland
// (FUNC_BlueprintCosmetic, FUNC_Net)
// Parameters:
// struct FIsland                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FIsland AIslandData::MakeFIsland()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.IslandData.MakeFIsland"));}

	AIslandData_MakeFIsland_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.IslandLocationVerifierInterface.VerifyLocation
// (FUNC_BlueprintAuthorityOnly, FUNC_Delegate)
// Parameters:
// struct FVector                 Location                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           RequiresNavMesh                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FIslandLocationVerifierResult ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FIslandLocationVerifierResult UIslandLocationVerifierInterface::VerifyLocation(const struct FVector& Location, bool RequiresNavMesh)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.IslandLocationVerifierInterface.VerifyLocation"));}

	UIslandLocationVerifierInterface_VerifyLocation_Params params;
	params.Location = Location;
	params.RequiresNavMesh = RequiresNavMesh;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.IslandService.OnRep_ReplicatedIslandArray
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AIslandService::OnRep_ReplicatedIslandArray()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.IslandService.OnRep_ReplicatedIslandArray"));}

	AIslandService_OnRep_ReplicatedIslandArray_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.IslandService.CollectLandmarksFromWorld
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AIslandService::CollectLandmarksFromWorld()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.IslandService.CollectLandmarksFromWorld"));}

	AIslandService_CollectLandmarksFromWorld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.IslandService.CollectIslandDataFromWorld
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AIslandService::CollectIslandDataFromWorld()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.IslandService.CollectIslandDataFromWorld"));}

	AIslandService_CollectIslandDataFromWorld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ItemFactoryFunctions.SpawnItemAsWieldable
// (FUNC_Net, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// class UObject*                 WorldContext                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  What                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FTransform              Where                          (CPF_Parm, CPF_IsPlainOldData)
// class AActor*                  Owner                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AWieldableItem*          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AWieldableItem* UItemFactoryFunctions::SpawnItemAsWieldable(class UObject* WorldContext, class UClass* What, const struct FTransform& Where, class AActor* Owner)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemFactoryFunctions.SpawnItemAsWieldable"));}

	UItemFactoryFunctions_SpawnItemAsWieldable_Params params;
	params.WorldContext = WorldContext;
	params.What = What;
	params.Where = Where;
	params.Owner = Owner;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemFactoryFunctions.SpawnItemAsProxy
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_HasOutParms)
// Parameters:
// class UObject*                 WorldContext                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  What                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FTransform              Where                          (CPF_Parm, CPF_IsPlainOldData)
// class AItemProxy*              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AItemProxy* UItemFactoryFunctions::SpawnItemAsProxy(class UObject* WorldContext, class UClass* What, const struct FTransform& Where)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemFactoryFunctions.SpawnItemAsProxy"));}

	UItemFactoryFunctions_SpawnItemAsProxy_Params params;
	params.WorldContext = WorldContext;
	params.What = What;
	params.Where = Where;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemFactoryFunctions.SpawnItem
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_HasOutParms)
// Parameters:
// class UObject*                 WorldContext                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  What                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FTransform              Where                          (CPF_Parm, CPF_IsPlainOldData)
// class AItemInfo*               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AItemInfo* UItemFactoryFunctions::SpawnItem(class UObject* WorldContext, class UClass* What, const struct FTransform& Where)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemFactoryFunctions.SpawnItem"));}

	UItemFactoryFunctions_SpawnItem_Params params;
	params.WorldContext = WorldContext;
	params.What = What;
	params.Where = Where;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemLoadoutControlInterface.SetItemLoadout
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FItemLoadout            InItemLoadout                  (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UItemLoadoutControlInterface::SetItemLoadout(const struct FItemLoadout& InItemLoadout)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemLoadoutControlInterface.SetItemLoadout"));}

	UItemLoadoutControlInterface_SetItemLoadout_Params params;
	params.InItemLoadout = InItemLoadout;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ItemLoadoutControlInterface.RemoveItem
// (FUNC_RequiredAPI, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Protected)
// Parameters:
// class AItemInfo*               InItem                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EItemLoadoutDestroyBehaviour> InDestroyBehaviour             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UItemLoadoutControlInterface::RemoveItem(class AItemInfo* InItem, TEnumAsByte<EItemLoadoutDestroyBehaviour> InDestroyBehaviour)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemLoadoutControlInterface.RemoveItem"));}

	UItemLoadoutControlInterface_RemoveItem_Params params;
	params.InItem = InItem;
	params.InDestroyBehaviour = InDestroyBehaviour;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemLoadoutControlInterface.PushItem
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AItemInfo*               InItem                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UItemLoadoutControlInterface::PushItem(class AItemInfo* InItem)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemLoadoutControlInterface.PushItem"));}

	UItemLoadoutControlInterface_PushItem_Params params;
	params.InItem = InItem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemLoadoutControlInterface.EquipWeapon
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Private, FUNC_Protected)
// Parameters:
// class UClass*                  InItemDesc                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            InIndex                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UItemLoadoutControlInterface::EquipWeapon(class UClass* InItemDesc, int InIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemLoadoutControlInterface.EquipWeapon"));}

	UItemLoadoutControlInterface_EquipWeapon_Params params;
	params.InItemDesc = InItemDesc;
	params.InIndex = InIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemLoadoutControlInterface.EquipItem
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  InItemDesc                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UItemLoadoutControlInterface::EquipItem(class UClass* InItemDesc)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemLoadoutControlInterface.EquipItem"));}

	UItemLoadoutControlInterface_EquipItem_Params params;
	params.InItemDesc = InItemDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ItemLoadoutComponent.OnRep_Slots
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UItemLoadoutComponent::OnRep_Slots()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemLoadoutComponent.OnRep_Slots"));}

	UItemLoadoutComponent_OnRep_Slots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ItemLoadoutComponent.OnItemDestroyed
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  InActor                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UItemLoadoutComponent::OnItemDestroyed(class AActor* InActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemLoadoutComponent.OnItemDestroyed"));}

	UItemLoadoutComponent_OnItemDestroyed_Params params;
	params.InActor = InActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ItemPickupBlueprintFunctionLibrary.IsActorWieldingLargeItem
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  WieldingActor                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UItemPickupBlueprintFunctionLibrary::IsActorWieldingLargeItem(class AActor* WieldingActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ItemPickupBlueprintFunctionLibrary.IsActorWieldingLargeItem"));}

	UItemPickupBlueprintFunctionLibrary_IsActorWieldingLargeItem_Params params;
	params.WieldingActor = WieldingActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.KrakenAnimatedTentacle.TestToggleInstantStateSwitching
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AKrakenAnimatedTentacle::TestToggleInstantStateSwitching()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.KrakenAnimatedTentacle.TestToggleInstantStateSwitching"));}

	AKrakenAnimatedTentacle_TestToggleInstantStateSwitching_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.KrakenAnimatedTentacle.SetMinHoldingTargetTime
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          HoldingTime                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AKrakenAnimatedTentacle::SetMinHoldingTargetTime(float HoldingTime)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.KrakenAnimatedTentacle.SetMinHoldingTargetTime"));}

	AKrakenAnimatedTentacle_SetMinHoldingTargetTime_Params params;
	params.HoldingTime = HoldingTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.KrakenAnimatedTentacle.SetCurrentTarget
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaCharacter*        Target                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AKrakenAnimatedTentacle::SetCurrentTarget(class AAthenaCharacter* Target)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.KrakenAnimatedTentacle.SetCurrentTarget"));}

	AKrakenAnimatedTentacle_SetCurrentTarget_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.KrakenAnimatedTentacle.RequestState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  NewState                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AKrakenAnimatedTentacle::RequestState(class UClass* NewState)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.KrakenAnimatedTentacle.RequestState"));}

	AKrakenAnimatedTentacle_RequestState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.KrakenAnimatedTentacle.RequestIdleState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  IdleState                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AKrakenAnimatedTentacle::RequestIdleState(class UClass* IdleState)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.KrakenAnimatedTentacle.RequestIdleState"));}

	AKrakenAnimatedTentacle_RequestIdleState_Params params;
	params.IdleState = IdleState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.KrakenAnimatedTentacle.OnRep_TentacleYaw
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          OldTentacleYaw                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AKrakenAnimatedTentacle::OnRep_TentacleYaw(float OldTentacleYaw)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.KrakenAnimatedTentacle.OnRep_TentacleYaw"));}

	AKrakenAnimatedTentacle_OnRep_TentacleYaw_Params params;
	params.OldTentacleYaw = OldTentacleYaw;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.KrakenAnimatedTentacle.OnRep_TentacleWorldLocation
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVector                 OldTentacleWorldLocation       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AKrakenAnimatedTentacle::OnRep_TentacleWorldLocation(const struct FVector& OldTentacleWorldLocation)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.KrakenAnimatedTentacle.OnRep_TentacleWorldLocation"));}

	AKrakenAnimatedTentacle_OnRep_TentacleWorldLocation_Params params;
	params.OldTentacleWorldLocation = OldTentacleWorldLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.KrakenAnimatedTentacle.OnRep_PendingState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AKrakenAnimatedTentacle::OnRep_PendingState()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.KrakenAnimatedTentacle.OnRep_PendingState"));}

	AKrakenAnimatedTentacle_OnRep_PendingState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.KrakenAnimatedTentacle.OnRep_CurrentTarget
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AKrakenAnimatedTentacle::OnRep_CurrentTarget()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.KrakenAnimatedTentacle.OnRep_CurrentTarget"));}

	AKrakenAnimatedTentacle_OnRep_CurrentTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.KrakenAnimatedTentacle.OnRep_CurrentState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AKrakenAnimatedTentacle::OnRep_CurrentState()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.KrakenAnimatedTentacle.OnRep_CurrentState"));}

	AKrakenAnimatedTentacle_OnRep_CurrentState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.KrakenAnimatedTentacle.OnRep_AnimationProgression
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AKrakenAnimatedTentacle::OnRep_AnimationProgression()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.KrakenAnimatedTentacle.OnRep_AnimationProgression"));}

	AKrakenAnimatedTentacle_OnRep_AnimationProgression_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.KrakenAnimatedTentacle.IsAnimationLooping
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AKrakenAnimatedTentacle::IsAnimationLooping()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.KrakenAnimatedTentacle.IsAnimationLooping"));}

	AKrakenAnimatedTentacle_IsAnimationLooping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.KrakenAnimatedTentacle.GetCurrentTarget
// (FUNC_BlueprintCosmetic)
// Parameters:
// class AAthenaCharacter*        ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AAthenaCharacter* AKrakenAnimatedTentacle::GetCurrentTarget()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.KrakenAnimatedTentacle.GetCurrentTarget"));}

	AKrakenAnimatedTentacle_GetCurrentTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.KrakenAnimatedTentacle.GetCurrentState
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UClass*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UClass* AKrakenAnimatedTentacle::GetCurrentState()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.KrakenAnimatedTentacle.GetCurrentState"));}

	AKrakenAnimatedTentacle_GetCurrentState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.KrakenAnimatedTentacle.DockToActor
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  ActorToDockTo                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AKrakenAnimatedTentacle::DockToActor(class AActor* ActorToDockTo)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.KrakenAnimatedTentacle.DockToActor"));}

	AKrakenAnimatedTentacle_DockToActor_Params params;
	params.ActorToDockTo = ActorToDockTo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.KrakenAnimatedTentacleRecordingAnimationInstance.StartRecordingAllAnimations
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UKrakenAnimatedTentacleRecordingAnimationInstance::StartRecordingAllAnimations()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.KrakenAnimatedTentacleRecordingAnimationInstance.StartRecordingAllAnimations"));}

	UKrakenAnimatedTentacleRecordingAnimationInstance_StartRecordingAllAnimations_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.KrakenDebugFunctionLibrary.SpawnTentacleAndSuckTarget
// (FUNC_Net, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FLatentActionInfo       LatentInfo                     (CPF_Parm)
// class UClass*                  TentacleClass                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 SpawnLocation                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AAthenaCharacter*        AthenaCharacter                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          AnimPlayRate                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          SuckingTellTime                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AKrakenAnimatedTentacle* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AKrakenAnimatedTentacle* UKrakenDebugFunctionLibrary::SpawnTentacleAndSuckTarget(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class UClass* TentacleClass, const struct FVector& SpawnLocation, class AAthenaCharacter* AthenaCharacter, float AnimPlayRate, float SuckingTellTime)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.KrakenDebugFunctionLibrary.SpawnTentacleAndSuckTarget"));}

	UKrakenDebugFunctionLibrary_SpawnTentacleAndSuckTarget_Params params;
	params.WorldContextObject = WorldContextObject;
	params.LatentInfo = LatentInfo;
	params.TentacleClass = TentacleClass;
	params.SpawnLocation = SpawnLocation;
	params.AthenaCharacter = AthenaCharacter;
	params.AnimPlayRate = AnimPlayRate;
	params.SuckingTellTime = SuckingTellTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.KrakenDebugFunctionLibrary.RequestKrakenWithShip
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AShip*                   ShipTarget                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UKrakenDebugFunctionLibrary::RequestKrakenWithShip(class UObject* WorldContextObject, class AShip* ShipTarget)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.KrakenDebugFunctionLibrary.RequestKrakenWithShip"));}

	UKrakenDebugFunctionLibrary_RequestKrakenWithShip_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ShipTarget = ShipTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.KrakenDebugFunctionLibrary.OverridePlayRateScaleInKrakenServiceParams
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          OverridePlayRateScale          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UKrakenDebugFunctionLibrary::OverridePlayRateScaleInKrakenServiceParams(class UObject* WorldContextObject, float OverridePlayRateScale)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.KrakenDebugFunctionLibrary.OverridePlayRateScaleInKrakenServiceParams"));}

	UKrakenDebugFunctionLibrary_OverridePlayRateScaleInKrakenServiceParams_Params params;
	params.WorldContextObject = WorldContextObject;
	params.OverridePlayRateScale = OverridePlayRateScale;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.KrakenDebugFunctionLibrary.OverrideNumberOfTentaclesSpawnedInKrakenServiceParams
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            OverrideNumberOfTentacles      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UKrakenDebugFunctionLibrary::OverrideNumberOfTentaclesSpawnedInKrakenServiceParams(class UObject* WorldContextObject, int OverrideNumberOfTentacles)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.KrakenDebugFunctionLibrary.OverrideNumberOfTentaclesSpawnedInKrakenServiceParams"));}

	UKrakenDebugFunctionLibrary_OverrideNumberOfTentaclesSpawnedInKrakenServiceParams_Params params;
	params.WorldContextObject = WorldContextObject;
	params.OverrideNumberOfTentacles = OverrideNumberOfTentacles;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.KrakenDebugFunctionLibrary.OverrideNewTargetTimeoutInKrakenServiceParams
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          OverrideNewTargetTimeout       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UKrakenDebugFunctionLibrary::OverrideNewTargetTimeoutInKrakenServiceParams(class UObject* WorldContextObject, float OverrideNewTargetTimeout)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.KrakenDebugFunctionLibrary.OverrideNewTargetTimeoutInKrakenServiceParams"));}

	UKrakenDebugFunctionLibrary_OverrideNewTargetTimeoutInKrakenServiceParams_Params params;
	params.WorldContextObject = WorldContextObject;
	params.OverrideNewTargetTimeout = OverrideNewTargetTimeout;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.KrakenDebugFunctionLibrary.GenerateKrakenSpawnLocationDistribution
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_Protected, FUNC_Delegate, FUNC_NetServer)
// Parameters:
// TArray<struct FKrakenSpawnLocationExclusionZone> SeaRockExclusionZones          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm)
// TArray<struct FKrakenSpawnLocationExclusionZone> IslandExclusionZones           (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm)
// float                          DistributionWidth              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          DistributionHeight             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          MinDistanceBetweenSamplePoints (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Seed                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FKrakenSpawnLocationParams SpawnLocationParams            (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// TArray<struct FVector>         ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<struct FVector> UKrakenDebugFunctionLibrary::GenerateKrakenSpawnLocationDistribution(TArray<struct FKrakenSpawnLocationExclusionZone> SeaRockExclusionZones, TArray<struct FKrakenSpawnLocationExclusionZone> IslandExclusionZones, float DistributionWidth, float DistributionHeight, float MinDistanceBetweenSamplePoints, int Seed, const struct FKrakenSpawnLocationParams& SpawnLocationParams)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.KrakenDebugFunctionLibrary.GenerateKrakenSpawnLocationDistribution"));}

	UKrakenDebugFunctionLibrary_GenerateKrakenSpawnLocationDistribution_Params params;
	params.SeaRockExclusionZones = SeaRockExclusionZones;
	params.IslandExclusionZones = IslandExclusionZones;
	params.DistributionWidth = DistributionWidth;
	params.DistributionHeight = DistributionHeight;
	params.MinDistanceBetweenSamplePoints = MinDistanceBetweenSamplePoints;
	params.Seed = Seed;
	params.SpawnLocationParams = SpawnLocationParams;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LadderBlueprintFunctionLibrary.GetRelativePositionAtHeight
// (FUNC_Private, FUNC_Delegate)
// Parameters:
// TScriptInterface<class ULadderInterface> LadderInterface                (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// float                          Height                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector ULadderBlueprintFunctionLibrary::GetRelativePositionAtHeight(const TScriptInterface<class ULadderInterface>& LadderInterface, float Height)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LadderBlueprintFunctionLibrary.GetRelativePositionAtHeight"));}

	ULadderBlueprintFunctionLibrary_GetRelativePositionAtHeight_Params params;
	params.LadderInterface = LadderInterface;
	params.Height = Height;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.OverlapTriggerComponent.OnActivationRegionOverlapEnd
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UOverlapTriggerComponent::OnActivationRegionOverlapEnd(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.OverlapTriggerComponent.OnActivationRegionOverlapEnd"));}

	UOverlapTriggerComponent_OnActivationRegionOverlapEnd_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.OverlapTriggerComponent.OnActivationRegionOverlapBegin
// (FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Other                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bFromSweep                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FHitResult              OverlapInfo                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UOverlapTriggerComponent::OnActivationRegionOverlapBegin(class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.OverlapTriggerComponent.OnActivationRegionOverlapBegin"));}

	UOverlapTriggerComponent_OnActivationRegionOverlapBegin_Params params;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.OverlapInfo = OverlapInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Landmark.TriggerLandmarkReactionForNearbyPlayersExplicitList
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            LandmarkReactionIndex          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<class AAthenaPlayerCharacter*> Players                        (CPF_Parm, CPF_ZeroConstructor)

void ALandmark::TriggerLandmarkReactionForNearbyPlayersExplicitList(int LandmarkReactionIndex, TArray<class AAthenaPlayerCharacter*> Players)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Landmark.TriggerLandmarkReactionForNearbyPlayersExplicitList"));}

	ALandmark_TriggerLandmarkReactionForNearbyPlayersExplicitList_Params params;
	params.LandmarkReactionIndex = LandmarkReactionIndex;
	params.Players = Players;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.VomitProjectile.SetImpactCallback
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FScriptDelegate         Callback                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm)

void AVomitProjectile::SetImpactCallback(const struct FScriptDelegate& Callback)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VomitProjectile.SetImpactCallback"));}

	AVomitProjectile_SetImpactCallback_Params params;
	params.Callback = Callback;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.VomitProjectile.SetChannelToIgnoreInShip
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<ECollisionChannel> Channel                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AVomitProjectile::SetChannelToIgnoreInShip(TEnumAsByte<ECollisionChannel> Channel)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VomitProjectile.SetChannelToIgnoreInShip"));}

	AVomitProjectile_SetChannelToIgnoreInShip_Params params;
	params.Channel = Channel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.VomitProjectile.LaunchVomitProjectile
// (FUNC_BlueprintCosmetic, FUNC_NetServer)
// Parameters:
// class AActor*                  Vomiter                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FName                   LaunchSocketName               (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// float                          Speed                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          AdditionalLiftAngle            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Radius                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AVomitProjectile*        ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AVomitProjectile* AVomitProjectile::LaunchVomitProjectile(class AActor* Vomiter, const struct FName& LaunchSocketName, float Speed, float AdditionalLiftAngle, float Radius)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VomitProjectile.LaunchVomitProjectile"));}

	AVomitProjectile_LaunchVomitProjectile_Params params;
	params.Vomiter = Vomiter;
	params.LaunchSocketName = LaunchSocketName;
	params.Speed = Speed;
	params.AdditionalLiftAngle = AdditionalLiftAngle;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LaunchedFromKrakenActionStateId.PushCharacterIntoLaunchedFromKrakenActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  FiringActor                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AKrakenAnimatedTentacle* Tentacle                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ULaunchedFromKrakenActionStateId::PushCharacterIntoLaunchedFromKrakenActionState(class AActor* Character, class AActor* FiringActor, class AKrakenAnimatedTentacle* Tentacle)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LaunchedFromKrakenActionStateId.PushCharacterIntoLaunchedFromKrakenActionState"));}

	ULaunchedFromKrakenActionStateId_PushCharacterIntoLaunchedFromKrakenActionState_Params params;
	params.Character = Character;
	params.FiringActor = FiringActor;
	params.Tentacle = Tentacle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LaunchedFromKrakenActionStateId.PopCharacterOutOfLaunchedFromKrakenActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ULaunchedFromKrakenActionStateId::PopCharacterOutOfLaunchedFromKrakenActionState(class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LaunchedFromKrakenActionStateId.PopCharacterOutOfLaunchedFromKrakenActionState"));}

	ULaunchedFromKrakenActionStateId_PopCharacterOutOfLaunchedFromKrakenActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LauncherParentInterface.GetProjectileIgnoreActors
// ()
// Parameters:
// TArray<class AActor*>          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class AActor*> ULauncherParentInterface::GetProjectileIgnoreActors()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LauncherParentInterface.GetProjectileIgnoreActors"));}

	ULauncherParentInterface_GetProjectileIgnoreActors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LauncherParentInterface.GetInheritedLaunchVelocity
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector ULauncherParentInterface::GetInheritedLaunchVelocity()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LauncherParentInterface.GetInheritedLaunchVelocity"));}

	ULauncherParentInterface_GetInheritedLaunchVelocity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LeaveGhostShipActionStateId.PushCharacterIntoLeaveGhostShipActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ULeaveGhostShipActionStateId::PushCharacterIntoLeaveGhostShipActionState(class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LeaveGhostShipActionStateId.PushCharacterIntoLeaveGhostShipActionState"));}

	ULeaveGhostShipActionStateId_PushCharacterIntoLeaveGhostShipActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LightingControllerSettings.GetOutput
// (FUNC_NetReliable, FUNC_NetRequest, FUNC_Exec, FUNC_Private, FUNC_Protected)
// Parameters:
// class ULightingControllerSettings* Settings                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Input                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FLightingControllerSettingsOutput ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FLightingControllerSettingsOutput ULightingControllerSettings::GetOutput(class ULightingControllerSettings* Settings, float Input)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LightingControllerSettings.GetOutput"));}

	ULightingControllerSettings_GetOutput_Params params;
	params.Settings = Settings;
	params.Input = Input;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LightingZoneInterface.GetLightingZoneParameters
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic)
// Parameters:
// struct FLightingZoneParametersAndLocation ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FLightingZoneParametersAndLocation ULightingZoneInterface::GetLightingZoneParameters()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LightingZoneInterface.GetLightingZoneParameters"));}

	ULightingZoneInterface_GetLightingZoneParameters_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RainZoneInterface.GetRainZoneParametersAtTime
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// double                         InTime                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FRainZoneParametersAndLocation ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FRainZoneParametersAndLocation URainZoneInterface::GetRainZoneParametersAtTime(double InTime)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RainZoneInterface.GetRainZoneParametersAtTime"));}

	URainZoneInterface_GetRainZoneParametersAtTime_Params params;
	params.InTime = InTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RainZoneInterface.GetRainZoneParameters
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// struct FRainZoneParametersAndLocation ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FRainZoneParametersAndLocation URainZoneInterface::GetRainZoneParameters()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RainZoneInterface.GetRainZoneParameters"));}

	URainZoneInterface_GetRainZoneParameters_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LightingController.IsPlayingInEditor
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ALightingController::IsPlayingInEditor()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LightingController.IsPlayingInEditor"));}

	ALightingController_IsPlayingInEditor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LightingController.IsPlayerInBoatSpace
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ALightingController::IsPlayerInBoatSpace()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LightingController.IsPlayerInBoatSpace"));}

	ALightingController_IsPlayerInBoatSpace_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LightingController.GetZoneWeights
// ()
// Parameters:
// TArray<struct FLightingZoneBlendValues> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<struct FLightingZoneBlendValues> ALightingController::GetZoneWeights()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LightingController.GetZoneWeights"));}

	ALightingController_GetZoneWeights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LightingController.GetRainWeight
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ALightingController::GetRainWeight()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LightingController.GetRainWeight"));}

	ALightingController_GetRainWeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LightingZoneServiceInterface.UnregisterLightingZoneFromService
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TScriptInterface<class ULightingZoneInterface> LightingZone                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ULightingZoneServiceInterface::UnregisterLightingZoneFromService(const TScriptInterface<class ULightingZoneInterface>& LightingZone)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LightingZoneServiceInterface.UnregisterLightingZoneFromService"));}

	ULightingZoneServiceInterface_UnregisterLightingZoneFromService_Params params;
	params.LightingZone = LightingZone;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LightingZoneServiceInterface.RegisterLightingZoneWithService
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TScriptInterface<class ULightingZoneInterface> LightingZone                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ULightingZoneServiceInterface::RegisterLightingZoneWithService(const TScriptInterface<class ULightingZoneInterface>& LightingZone)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LightingZoneServiceInterface.RegisterLightingZoneWithService"));}

	ULightingZoneServiceInterface_RegisterLightingZoneWithService_Params params;
	params.LightingZone = LightingZone;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LightingZoneServiceInterface.GetNumberOfLightingZones
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int ULightingZoneServiceInterface::GetNumberOfLightingZones()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LightingZoneServiceInterface.GetNumberOfLightingZones"));}

	ULightingZoneServiceInterface_GetNumberOfLightingZones_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LightingZoneServiceInterface.GetLightingZone
// (FUNC_Private)
// Parameters:
// int                            LightingZoneIndex              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FLightingZoneParametersAndLocation ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FLightingZoneParametersAndLocation ULightingZoneServiceInterface::GetLightingZone(int LightingZoneIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LightingZoneServiceInterface.GetLightingZone"));}

	ULightingZoneServiceInterface_GetLightingZone_Params params;
	params.LightingZoneIndex = LightingZoneIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LightingZoneServiceInterface.GetAllLightingZones
// ()
// Parameters:
// TArray<struct FLightingZoneParametersAndLocation> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<struct FLightingZoneParametersAndLocation> ULightingZoneServiceInterface::GetAllLightingZones()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LightingZoneServiceInterface.GetAllLightingZones"));}

	ULightingZoneServiceInterface_GetAllLightingZones_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LimpingComponent.TestForceLimpingOffLocally
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ULimpingComponent::TestForceLimpingOffLocally()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LimpingComponent.TestForceLimpingOffLocally"));}

	ULimpingComponent_TestForceLimpingOffLocally_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LimpingComponent.StartLimping
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ULimpingComponent::StartLimping()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LimpingComponent.StartLimping"));}

	ULimpingComponent_StartLimping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LimpingComponent.PredictStartLimping
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ULimpingComponent::PredictStartLimping()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LimpingComponent.PredictStartLimping"));}

	ULimpingComponent_PredictStartLimping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LimpingComponent.OnRep_IsLimping
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ULimpingComponent::OnRep_IsLimping()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LimpingComponent.OnRep_IsLimping"));}

	ULimpingComponent_OnRep_IsLimping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LimpingComponent.IsLimpingPredicted
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ULimpingComponent::IsLimpingPredicted()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LimpingComponent.IsLimpingPredicted"));}

	ULimpingComponent_IsLimpingPredicted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LimpingComponent.IsLimping
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ULimpingComponent::IsLimping()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LimpingComponent.IsLimping"));}

	ULimpingComponent_IsLimping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LimpingComponent.GetHasActiveCameraModifiers
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ULimpingComponent::GetHasActiveCameraModifiers()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LimpingComponent.GetHasActiveCameraModifiers"));}

	ULimpingComponent_GetHasActiveCameraModifiers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LimpingComponent.GetCheatPenaltyTimeLeft
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ULimpingComponent::GetCheatPenaltyTimeLeft()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LimpingComponent.GetCheatPenaltyTimeLeft"));}

	ULimpingComponent_GetCheatPenaltyTimeLeft_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LiquidContainerInterface.SetLiquidLevel
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Level                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ULiquidContainerInterface::SetLiquidLevel(float Level)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LiquidContainerInterface.SetLiquidLevel"));}

	ULiquidContainerInterface_SetLiquidLevel_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LiquidContainerInterface.GetWantedLiquidLevel
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ULiquidContainerInterface::GetWantedLiquidLevel()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LiquidContainerInterface.GetWantedLiquidLevel"));}

	ULiquidContainerInterface_GetWantedLiquidLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LiquidContainerInterface.GetLiquidLevel
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ULiquidContainerInterface::GetLiquidLevel()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LiquidContainerInterface.GetLiquidLevel"));}

	ULiquidContainerInterface_GetLiquidLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LiquidContainerComponent.SetLiquidType
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<ELiquidType>       LiquidType                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ULiquidContainerComponent::SetLiquidType(TEnumAsByte<ELiquidType> LiquidType)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LiquidContainerComponent.SetLiquidType"));}

	ULiquidContainerComponent_SetLiquidType_Params params;
	params.LiquidType = LiquidType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LiquidContainerComponent.SetLiquidLevel
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Level                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ULiquidContainerComponent::SetLiquidLevel(float Level)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LiquidContainerComponent.SetLiquidLevel"));}

	ULiquidContainerComponent_SetLiquidLevel_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LiquidContainerComponent.GetLiquidLevel
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ULiquidContainerComponent::GetLiquidLevel()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LiquidContainerComponent.GetLiquidLevel"));}

	ULiquidContainerComponent_GetLiquidLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LiquidContainerComponent.CollectLiquidMaterials
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UMeshComponent*          MeshComponent                  (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)

void ULiquidContainerComponent::CollectLiquidMaterials(class UMeshComponent* MeshComponent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LiquidContainerComponent.CollectLiquidMaterials"));}

	ULiquidContainerComponent_CollectLiquidMaterials_Params params;
	params.MeshComponent = MeshComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LoadableInterface.IsLoaded
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ULoadableInterface::IsLoaded()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LoadableInterface.IsLoaded"));}

	ULoadableInterface_IsLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LoadableInterface.CanBeUnloaded
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ULoadableInterface::CanBeUnloaded()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LoadableInterface.CanBeUnloaded"));}

	ULoadableInterface_CanBeUnloaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LoadableInterface.CanBeLoaded
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ULoadableInterface::CanBeLoaded()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LoadableInterface.CanBeLoaded"));}

	ULoadableInterface_CanBeLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LoadableComponent.OnRepLoadedItem
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 PrevLoadedItem                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ULoadableComponent::OnRepLoadedItem(class UObject* PrevLoadedItem)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LoadableComponent.OnRepLoadedItem"));}

	ULoadableComponent_OnRepLoadedItem_Params params;
	params.PrevLoadedItem = PrevLoadedItem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LoadableComponent.OnRepLoadableState
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<ELoadableState>    PrevLoadableState              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ULoadableComponent::OnRepLoadableState(TEnumAsByte<ELoadableState> PrevLoadableState)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LoadableComponent.OnRepLoadableState"));}

	ULoadableComponent_OnRepLoadableState_Params params;
	params.PrevLoadableState = PrevLoadableState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LoadItemActionStateId.PushCharacterIntoLoadItemActionState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  LoadableActor                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Interactable                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  DefaultItemDesc                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ULoadItemActionStateId::PushCharacterIntoLoadItemActionState(class AActor* Character, class AActor* LoadableActor, class AActor* Interactable, class UClass* DefaultItemDesc)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LoadItemActionStateId.PushCharacterIntoLoadItemActionState"));}

	ULoadItemActionStateId_PushCharacterIntoLoadItemActionState_Params params;
	params.Character = Character;
	params.LoadableActor = LoadableActor;
	params.Interactable = Interactable;
	params.DefaultItemDesc = DefaultItemDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LoadItemActionStateId.PopCharacterOutOfLoadItemActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ULoadItemActionStateId::PopCharacterOutOfLoadItemActionState(class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LoadItemActionStateId.PopCharacterOutOfLoadItemActionState"));}

	ULoadItemActionStateId_PopCharacterOutOfLoadItemActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LoadoutControlInterface.IsRequestLoadoutCompleted
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ULoadoutControlInterface::IsRequestLoadoutCompleted()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LoadoutControlInterface.IsRequestLoadoutCompleted"));}

	ULoadoutControlInterface_IsRequestLoadoutCompleted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LoadPlayerActionStateId.PushCharacterIntoLoadPlayerActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  InCharacter                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  InLoadable                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  InInteractable                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ULoadPlayerActionStateId::PushCharacterIntoLoadPlayerActionState(class AActor* InCharacter, class AActor* InLoadable, class AActor* InInteractable)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LoadPlayerActionStateId.PushCharacterIntoLoadPlayerActionState"));}

	ULoadPlayerActionStateId_PushCharacterIntoLoadPlayerActionState_Params params;
	params.InCharacter = InCharacter;
	params.InLoadable = InLoadable;
	params.InInteractable = InInteractable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LocomotionActionStateId.PushCharacterIntoLocomotionActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ULocomotionActionStateId::PushCharacterIntoLocomotionActionState(class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionActionStateId.PushCharacterIntoLocomotionActionState"));}

	ULocomotionActionStateId_PushCharacterIntoLocomotionActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.LocomotionCompositeInputHandler.OnWalkActivate
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnWalkActivate()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnWalkActivate"));}

	ULocomotionCompositeInputHandler_OnWalkActivate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnTurnRate
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnTurnRate(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnTurnRate"));}

	ULocomotionCompositeInputHandler_OnTurnRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnTurn
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnTurn(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnTurn"));}

	ULocomotionCompositeInputHandler_OnTurn_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnToggleItem
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnToggleItem()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnToggleItem"));}

	ULocomotionCompositeInputHandler_OnToggleItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnSprintActivate
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnSprintActivate()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnSprintActivate"));}

	ULocomotionCompositeInputHandler_OnSprintActivate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnSecondaryItemUseReleased
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnSecondaryItemUseReleased()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnSecondaryItemUseReleased"));}

	ULocomotionCompositeInputHandler_OnSecondaryItemUseReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnSecondaryItemUsePressed
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnSecondaryItemUsePressed()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnSecondaryItemUsePressed"));}

	ULocomotionCompositeInputHandler_OnSecondaryItemUsePressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickSwitchWeapon
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickSwitchWeapon()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnQuickSwitchWeapon"));}

	ULocomotionCompositeInputHandler_OnQuickSwitchWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickSwitchSecondaryWeapon
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickSwitchSecondaryWeapon()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnQuickSwitchSecondaryWeapon"));}

	ULocomotionCompositeInputHandler_OnQuickSwitchSecondaryWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickSwitchPrimaryWeapon
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickSwitchPrimaryWeapon()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnQuickSwitchPrimaryWeapon"));}

	ULocomotionCompositeInputHandler_OnQuickSwitchPrimaryWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickSelectItemOfCategory
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Private, FUNC_Protected)
// Parameters:
// class UClass*                  Category                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            IndexIntoCategory              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickSelectItemOfCategory(class UClass* Category, int IndexIntoCategory)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnQuickSelectItemOfCategory"));}

	ULocomotionCompositeInputHandler_OnQuickSelectItemOfCategory_Params params;
	params.Category = Category;
	params.IndexIntoCategory = IndexIntoCategory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToWoodPlank
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToWoodPlank()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToWoodPlank"));}

	ULocomotionCompositeInputHandler_OnQuickCycleToWoodPlank_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToTankard
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToTankard()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToTankard"));}

	ULocomotionCompositeInputHandler_OnQuickCycleToTankard_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToSpyglass
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToSpyglass()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToSpyglass"));}

	ULocomotionCompositeInputHandler_OnQuickCycleToSpyglass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToShovel
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToShovel()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToShovel"));}

	ULocomotionCompositeInputHandler_OnQuickCycleToShovel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToPocketWatch
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToPocketWatch()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToPocketWatch"));}

	ULocomotionCompositeInputHandler_OnQuickCycleToPocketWatch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToLantern
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToLantern()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToLantern"));}

	ULocomotionCompositeInputHandler_OnQuickCycleToLantern_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToInstrument
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToInstrument()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToInstrument"));}

	ULocomotionCompositeInputHandler_OnQuickCycleToInstrument_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToFruit
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToFruit()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToFruit"));}

	ULocomotionCompositeInputHandler_OnQuickCycleToFruit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToCompass
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToCompass()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToCompass"));}

	ULocomotionCompositeInputHandler_OnQuickCycleToCompass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToCannonball
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToCannonball()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToCannonball"));}

	ULocomotionCompositeInputHandler_OnQuickCycleToCannonball_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToBucket
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleToBucket()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleToBucket"));}

	ULocomotionCompositeInputHandler_OnQuickCycleToBucket_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnQuickCycleItemsOfCategory
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  Category                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnQuickCycleItemsOfCategory(class UClass* Category)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnQuickCycleItemsOfCategory"));}

	ULocomotionCompositeInputHandler_OnQuickCycleItemsOfCategory_Params params;
	params.Category = Category;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnPrimaryItemUseReleased
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnPrimaryItemUseReleased()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnPrimaryItemUseReleased"));}

	ULocomotionCompositeInputHandler_OnPrimaryItemUseReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnPrimaryItemUsePressed
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnPrimaryItemUsePressed()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnPrimaryItemUsePressed"));}

	ULocomotionCompositeInputHandler_OnPrimaryItemUsePressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnMoveRight
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnMoveRight(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnMoveRight"));}

	ULocomotionCompositeInputHandler_OnMoveRight_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnMoveForward
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnMoveForward(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnMoveForward"));}

	ULocomotionCompositeInputHandler_OnMoveForward_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnLookUpRate
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnLookUpRate(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnLookUpRate"));}

	ULocomotionCompositeInputHandler_OnLookUpRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnLookUp
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnLookUp(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnLookUp"));}

	ULocomotionCompositeInputHandler_OnLookUp_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnJump
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnJump()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnJump"));}

	ULocomotionCompositeInputHandler_OnJump_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnDropLargeWieldedItem
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnDropLargeWieldedItem()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnDropLargeWieldedItem"));}

	ULocomotionCompositeInputHandler_OnDropLargeWieldedItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnCycleItemUp
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnCycleItemUp()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnCycleItemUp"));}

	ULocomotionCompositeInputHandler_OnCycleItemUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LocomotionCompositeInputHandler.OnCycleItemDown
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULocomotionCompositeInputHandler::OnCycleItemDown()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LocomotionCompositeInputHandler.OnCycleItemDown"));}

	ULocomotionCompositeInputHandler_OnCycleItemDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LookAtOffsetCompositeInputHandler.OnYawRate
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULookAtOffsetCompositeInputHandler::OnYawRate(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LookAtOffsetCompositeInputHandler.OnYawRate"));}

	ULookAtOffsetCompositeInputHandler_OnYawRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LookAtOffsetCompositeInputHandler.OnYaw
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULookAtOffsetCompositeInputHandler::OnYaw(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LookAtOffsetCompositeInputHandler.OnYaw"));}

	ULookAtOffsetCompositeInputHandler_OnYaw_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LookAtOffsetCompositeInputHandler.OnPitchRate
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULookAtOffsetCompositeInputHandler::OnPitchRate(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LookAtOffsetCompositeInputHandler.OnPitchRate"));}

	ULookAtOffsetCompositeInputHandler_OnPitchRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LookAtOffsetCompositeInputHandler.OnPitch
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> ULookAtOffsetCompositeInputHandler::OnPitch(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LookAtOffsetCompositeInputHandler.OnPitch"));}

	ULookAtOffsetCompositeInputHandler_OnPitch_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ControlIntentCompositeInputHandler.OnRightTriggerAnalog
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UControlIntentCompositeInputHandler::OnRightTriggerAnalog(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControlIntentCompositeInputHandler.OnRightTriggerAnalog"));}

	UControlIntentCompositeInputHandler_OnRightTriggerAnalog_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ControlIntentCompositeInputHandler.OnChangeIntent
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UControlIntentCompositeInputHandler::OnChangeIntent(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControlIntentCompositeInputHandler.OnChangeIntent"));}

	UControlIntentCompositeInputHandler_OnChangeIntent_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ControlWheelCompositeInputHandler.OnRightTrigger
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UControlWheelCompositeInputHandler::OnRightTrigger(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControlWheelCompositeInputHandler.OnRightTrigger"));}

	UControlWheelCompositeInputHandler_OnRightTrigger_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ControlWheelCompositeInputHandler.OnMoveRight
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UControlWheelCompositeInputHandler::OnMoveRight(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ControlWheelCompositeInputHandler.OnMoveRight"));}

	UControlWheelCompositeInputHandler_OnMoveRight_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.UseLadderCompositeInputHandler.OnClimbLadder
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UUseLadderCompositeInputHandler::OnClimbLadder(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UseLadderCompositeInputHandler.OnClimbLadder"));}

	UUseLadderCompositeInputHandler_OnClimbLadder_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LookAtOffsetFunctions.IsLookAtEnabled
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Net, FUNC_NetReliable, FUNC_Protected, FUNC_Delegate, FUNC_HasOutParms, FUNC_HasDefaults)
// Parameters:
// struct FLookAtOffset           LookAtOffset                   (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ULookAtOffsetFunctions::IsLookAtEnabled(const struct FLookAtOffset& LookAtOffset)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LookAtOffsetFunctions.IsLookAtEnabled"));}

	ULookAtOffsetFunctions_IsLookAtEnabled_Params params;
	params.LookAtOffset = LookAtOffset;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LookAtOffsetFunctions.GetLookAtYaw
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Net, FUNC_NetReliable, FUNC_Protected, FUNC_Delegate, FUNC_HasOutParms, FUNC_HasDefaults)
// Parameters:
// struct FLookAtOffset           LookAtOffset                   (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ULookAtOffsetFunctions::GetLookAtYaw(const struct FLookAtOffset& LookAtOffset)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LookAtOffsetFunctions.GetLookAtYaw"));}

	ULookAtOffsetFunctions_GetLookAtYaw_Params params;
	params.LookAtOffset = LookAtOffset;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LookAtOffsetFunctions.GetLookAtWorldLocation
// (FUNC_BlueprintAuthorityOnly, FUNC_Net, FUNC_NetReliable, FUNC_Protected, FUNC_Delegate, FUNC_HasOutParms, FUNC_HasDefaults)
// Parameters:
// struct FLookAtOffset           LookAtOffset                   (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector ULookAtOffsetFunctions::GetLookAtWorldLocation(const struct FLookAtOffset& LookAtOffset)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LookAtOffsetFunctions.GetLookAtWorldLocation"));}

	ULookAtOffsetFunctions_GetLookAtWorldLocation_Params params;
	params.LookAtOffset = LookAtOffset;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LookAtOffsetFunctions.GetLookAtPitch
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Net, FUNC_NetReliable, FUNC_Protected, FUNC_Delegate, FUNC_HasOutParms, FUNC_HasDefaults)
// Parameters:
// struct FLookAtOffset           LookAtOffset                   (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ULookAtOffsetFunctions::GetLookAtPitch(const struct FLookAtOffset& LookAtOffset)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LookAtOffsetFunctions.GetLookAtPitch"));}

	ULookAtOffsetFunctions_GetLookAtPitch_Params params;
	params.LookAtOffset = LookAtOffset;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.LookAtOffsetFunctions.AddYawInput
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Net, FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FLookAtOffset           LookAtOffset                   (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// float                          YawInput                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ULookAtOffsetFunctions::AddYawInput(float YawInput, struct FLookAtOffset* LookAtOffset)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LookAtOffsetFunctions.AddYawInput"));}

	ULookAtOffsetFunctions_AddYawInput_Params params;
	params.YawInput = YawInput;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (LookAtOffset != nullptr)
		*LookAtOffset = params.LookAtOffset;
}


// Function Athena.LookAtOffsetFunctions.AddPitchInput
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Net, FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FLookAtOffset           LookAtOffset                   (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// float                          PitchInput                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ULookAtOffsetFunctions::AddPitchInput(float PitchInput, struct FLookAtOffset* LookAtOffset)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LookAtOffsetFunctions.AddPitchInput"));}

	ULookAtOffsetFunctions_AddPitchInput_Params params;
	params.PitchInput = PitchInput;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (LookAtOffset != nullptr)
		*LookAtOffset = params.LookAtOffset;
}


// Function Athena.LPVReferenceFrameAdaptationFunctionLibrary.TickLPVAdaptation
// (FUNC_BlueprintAuthorityOnly, FUNC_Net, FUNC_Exec, FUNC_Native, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FLPVAdaptationState     InOutLPVAdaptationState        (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// struct FPostProcessSettings    InOutPostProcessSettings       (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// struct FTransform              InCurrentShipTransform         (CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData)
// float                          InDeltaTime                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ULPVReferenceFrameAdaptationFunctionLibrary::TickLPVAdaptation(float InDeltaTime, struct FLPVAdaptationState* InOutLPVAdaptationState, struct FPostProcessSettings* InOutPostProcessSettings, struct FTransform* InCurrentShipTransform)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LPVReferenceFrameAdaptationFunctionLibrary.TickLPVAdaptation"));}

	ULPVReferenceFrameAdaptationFunctionLibrary_TickLPVAdaptation_Params params;
	params.InDeltaTime = InDeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (InOutLPVAdaptationState != nullptr)
		*InOutLPVAdaptationState = params.InOutLPVAdaptationState;
	if (InOutPostProcessSettings != nullptr)
		*InOutPostProcessSettings = params.InOutPostProcessSettings;
	if (InCurrentShipTransform != nullptr)
		*InCurrentShipTransform = params.InCurrentShipTransform;
}


// Function Athena.LPVReferenceFrameAdaptationFunctionLibrary.SetLPVAdaptationState
// (FUNC_Final, FUNC_NetRequest, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FLPVAdaptationState     InOutLPVAdaptationState        (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// struct FVector                 InPlayerPawnLocation           (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// struct FTransform              InCurrentShipTransform         (CPF_Parm, CPF_OutParm, CPF_ReferenceParm, CPF_IsPlainOldData)
// bool                           bInIsPlayerInLPVRefFrameArea   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ULPVReferenceFrameAdaptationFunctionLibrary::SetLPVAdaptationState(bool bInIsPlayerInLPVRefFrameArea, struct FLPVAdaptationState* InOutLPVAdaptationState, struct FVector* InPlayerPawnLocation, struct FTransform* InCurrentShipTransform)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LPVReferenceFrameAdaptationFunctionLibrary.SetLPVAdaptationState"));}

	ULPVReferenceFrameAdaptationFunctionLibrary_SetLPVAdaptationState_Params params;
	params.bInIsPlayerInLPVRefFrameArea = bInIsPlayerInLPVRefFrameArea;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (InOutLPVAdaptationState != nullptr)
		*InOutLPVAdaptationState = params.InOutLPVAdaptationState;
	if (InPlayerPawnLocation != nullptr)
		*InPlayerPawnLocation = params.InPlayerPawnLocation;
	if (InCurrentShipTransform != nullptr)
		*InCurrentShipTransform = params.InCurrentShipTransform;
}


// Function Athena.LPVReferenceFrameAdaptationFunctionLibrary.InitializeLPVAdaptationStateDefaultOptions
// (FUNC_NetRequest, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FLPVAdaptationState     InOutLPVAdaptationState        (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// TEnumAsByte<ELPVAdaptationType> InAdaptationType               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          InRotationBlendTime            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          InTranslationBlendTime         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          InAdditionalBlendTime          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ULPVReferenceFrameAdaptationFunctionLibrary::InitializeLPVAdaptationStateDefaultOptions(TEnumAsByte<ELPVAdaptationType> InAdaptationType, float InRotationBlendTime, float InTranslationBlendTime, float InAdditionalBlendTime, struct FLPVAdaptationState* InOutLPVAdaptationState)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.LPVReferenceFrameAdaptationFunctionLibrary.InitializeLPVAdaptationStateDefaultOptions"));}

	ULPVReferenceFrameAdaptationFunctionLibrary_InitializeLPVAdaptationStateDefaultOptions_Params params;
	params.InAdaptationType = InAdaptationType;
	params.InRotationBlendTime = InRotationBlendTime;
	params.InTranslationBlendTime = InTranslationBlendTime;
	params.InAdditionalBlendTime = InAdditionalBlendTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (InOutLPVAdaptationState != nullptr)
		*InOutLPVAdaptationState = params.InOutLPVAdaptationState;
}


// Function Athena.MapTable.Server_SetPins
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TArray<struct FVector2D>       InMapPins                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm)

void AMapTable::Server_SetPins(TArray<struct FVector2D> InMapPins)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MapTable.Server_SetPins"));}

	AMapTable_Server_SetPins_Params params;
	params.InMapPins = InMapPins;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MapTable.Server_MoveMap
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVector2D               CentreLocation                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          ZoomLevel                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMapTable::Server_MoveMap(const struct FVector2D& CentreLocation, float ZoomLevel)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MapTable.Server_MoveMap"));}

	AMapTable_Server_MoveMap_Params params;
	params.CentreLocation = CentreLocation;
	params.ZoomLevel = ZoomLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MapTable.Server_LeaveTable
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Controller                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMapTable::Server_LeaveTable(class AActor* Controller)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MapTable.Server_LeaveTable"));}

	AMapTable_Server_LeaveTable_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MapTable.Server_JoinTable
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Controller                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMapTable::Server_JoinTable(class AActor* Controller)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MapTable.Server_JoinTable"));}

	AMapTable_Server_JoinTable_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MapTable.OnRep_ZoomLevel
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AMapTable::OnRep_ZoomLevel()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MapTable.OnRep_ZoomLevel"));}

	AMapTable_OnRep_ZoomLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MapTable.OnRep_MapPins
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AMapTable::OnRep_MapPins()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MapTable.OnRep_MapPins"));}

	AMapTable_OnRep_MapPins_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MapTable.OnRep_CentreLocation
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AMapTable::OnRep_CentreLocation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MapTable.OnRep_CentreLocation"));}

	AMapTable_OnRep_CentreLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MapTable.OnMapMove
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVector2D               CentreLocation                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          ZoomLevel                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMapTable::OnMapMove(const struct FVector2D& CentreLocation, float ZoomLevel)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MapTable.OnMapMove"));}

	AMapTable_OnMapMove_Params params;
	params.CentreLocation = CentreLocation;
	params.ZoomLevel = ZoomLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MapTable.OnMapActivate
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           IsMapActive                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UTextureRenderTarget2D*  Texture                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMapTable::OnMapActivate(bool IsMapActive, class UTextureRenderTarget2D* Texture)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MapTable.OnMapActivate"));}

	AMapTable_OnMapActivate_Params params;
	params.IsMapActive = IsMapActive;
	params.Texture = Texture;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MapTableTestFunctions.ZoomOut
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AMapTable*               MapTable                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          ZoomValue                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UMapTableTestFunctions::ZoomOut(class AMapTable* MapTable, float ZoomValue)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MapTableTestFunctions.ZoomOut"));}

	UMapTableTestFunctions_ZoomOut_Params params;
	params.MapTable = MapTable;
	params.ZoomValue = ZoomValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MapTableTestFunctions.ZoomIn
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AMapTable*               MapTable                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          ZoomValue                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UMapTableTestFunctions::ZoomIn(class AMapTable* MapTable, float ZoomValue)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MapTableTestFunctions.ZoomIn"));}

	UMapTableTestFunctions_ZoomIn_Params params;
	params.MapTable = MapTable;
	params.ZoomValue = ZoomValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MapTableTestFunctions.SetMinZoom
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AMapTable*               MapTable                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          MinValue                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UMapTableTestFunctions::SetMinZoom(class AMapTable* MapTable, float MinValue)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MapTableTestFunctions.SetMinZoom"));}

	UMapTableTestFunctions_SetMinZoom_Params params;
	params.MapTable = MapTable;
	params.MinValue = MinValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MapTableTestFunctions.SetMinPan
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AMapTable*               MapTable                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector2D               MinValue                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UMapTableTestFunctions::SetMinPan(class AMapTable* MapTable, const struct FVector2D& MinValue)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MapTableTestFunctions.SetMinPan"));}

	UMapTableTestFunctions_SetMinPan_Params params;
	params.MapTable = MapTable;
	params.MinValue = MinValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MapTableTestFunctions.SetMaxZoom
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AMapTable*               MapTable                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          MaxValue                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UMapTableTestFunctions::SetMaxZoom(class AMapTable* MapTable, float MaxValue)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MapTableTestFunctions.SetMaxZoom"));}

	UMapTableTestFunctions_SetMaxZoom_Params params;
	params.MapTable = MapTable;
	params.MaxValue = MaxValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MapTableTestFunctions.SetMaxPan
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AMapTable*               MapTable                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector2D               MaxValue                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UMapTableTestFunctions::SetMaxPan(class AMapTable* MapTable, const struct FVector2D& MaxValue)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MapTableTestFunctions.SetMaxPan"));}

	UMapTableTestFunctions_SetMaxPan_Params params;
	params.MapTable = MapTable;
	params.MaxValue = MaxValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MapTableTestFunctions.PanY
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AMapTable*               MapTable                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          PanValue                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UMapTableTestFunctions::PanY(class AMapTable* MapTable, float PanValue)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MapTableTestFunctions.PanY"));}

	UMapTableTestFunctions_PanY_Params params;
	params.MapTable = MapTable;
	params.PanValue = PanValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MapTableTestFunctions.PanX
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AMapTable*               MapTable                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          PanValue                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UMapTableTestFunctions::PanX(class AMapTable* MapTable, float PanValue)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MapTableTestFunctions.PanX"));}

	UMapTableTestFunctions_PanX_Params params;
	params.MapTable = MapTable;
	params.PanValue = PanValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MapTableTestFunctions.IsUnderLocalControl
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AMapTable*               MapTable                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UMapTableTestFunctions::IsUnderLocalControl(class AMapTable* MapTable)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MapTableTestFunctions.IsUnderLocalControl"));}

	UMapTableTestFunctions_IsUnderLocalControl_Params params;
	params.MapTable = MapTable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.MapTableTestFunctions.IsLocationDirty
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AMapTable*               MapTable                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UMapTableTestFunctions::IsLocationDirty(class AMapTable* MapTable)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MapTableTestFunctions.IsLocationDirty"));}

	UMapTableTestFunctions_IsLocationDirty_Params params;
	params.MapTable = MapTable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.MapTableTestFunctions.GetControlPoint
// (FUNC_BlueprintCosmetic, FUNC_Delegate)
// Parameters:
// class AMapTable*               MapTable                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            PointIndex                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AMapTableControlPoint*   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AMapTableControlPoint* UMapTableTestFunctions::GetControlPoint(class AMapTable* MapTable, int PointIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MapTableTestFunctions.GetControlPoint"));}

	UMapTableTestFunctions_GetControlPoint_Params params;
	params.MapTable = MapTable;
	params.PointIndex = PointIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.MapTableTestFunctions.ConsumeLocationChange
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AMapTable*               MapTable                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FWorldMapSetLocation    Event                          (CPF_Parm, CPF_OutParm)

void UMapTableTestFunctions::ConsumeLocationChange(class AMapTable* MapTable, struct FWorldMapSetLocation* Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MapTableTestFunctions.ConsumeLocationChange"));}

	UMapTableTestFunctions_ConsumeLocationChange_Params params;
	params.MapTable = MapTable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Event != nullptr)
		*Event = params.Event;
}


// Function Athena.MastAnimInterface.SetMastAngle
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Angle                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UMastAnimInterface::SetMastAngle(float Angle)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MastAnimInterface.SetMastAngle"));}

	UMastAnimInterface_SetMastAngle_Params params;
	params.Angle = Angle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MastAnimInterface.InitializeMast
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          FallingLimit                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UMastAnimInterface::InitializeMast(float FallingLimit)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MastAnimInterface.InitializeMast"));}

	UMastAnimInterface_InitializeMast_Params params;
	params.FallingLimit = FallingLimit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MaterialInformationServiceBlueprintFunctions.GetVFXInformationForSurface
// (FUNC_Final, FUNC_Delegate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EPhysicalSurface>  SurfaceType                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FMaterialInformationVFXData VFXSurfaceData                 (CPF_Parm, CPF_OutParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UMaterialInformationServiceBlueprintFunctions::GetVFXInformationForSurface(class UObject* WorldContextObject, TEnumAsByte<EPhysicalSurface> SurfaceType, struct FMaterialInformationVFXData* VFXSurfaceData)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MaterialInformationServiceBlueprintFunctions.GetVFXInformationForSurface"));}

	UMaterialInformationServiceBlueprintFunctions_GetVFXInformationForSurface_Params params;
	params.WorldContextObject = WorldContextObject;
	params.SurfaceType = SurfaceType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (VFXSurfaceData != nullptr)
		*VFXSurfaceData = params.VFXSurfaceData;

	return params.ReturnValue;
}


// Function Athena.MaterialInformationServiceBlueprintFunctions.GetAudioInformationForSurface
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Private, FUNC_Protected, FUNC_Delegate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EPhysicalSurface>  SurfaceType                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FMaterialInformationAudioData AudioSurfaceData               (CPF_Parm, CPF_OutParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UMaterialInformationServiceBlueprintFunctions::GetAudioInformationForSurface(class UObject* WorldContextObject, TEnumAsByte<EPhysicalSurface> SurfaceType, struct FMaterialInformationAudioData* AudioSurfaceData)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MaterialInformationServiceBlueprintFunctions.GetAudioInformationForSurface"));}

	UMaterialInformationServiceBlueprintFunctions_GetAudioInformationForSurface_Params params;
	params.WorldContextObject = WorldContextObject;
	params.SurfaceType = SurfaceType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (AudioSurfaceData != nullptr)
		*AudioSurfaceData = params.AudioSurfaceData;

	return params.ReturnValue;
}


// Function Athena.MatineeUtility.Multicast_BroadcastStop
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AMatineeActor*           MatineeActor                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMatineeUtility::Multicast_BroadcastStop(class AMatineeActor* MatineeActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MatineeUtility.Multicast_BroadcastStop"));}

	AMatineeUtility_Multicast_BroadcastStop_Params params;
	params.MatineeActor = MatineeActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MatineeUtility.Multicast_BroadcastSetPosition
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AMatineeActor*           MatineeActor                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          InterpolationPosition          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           Jump                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMatineeUtility::Multicast_BroadcastSetPosition(class AMatineeActor* MatineeActor, float InterpolationPosition, bool Jump)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MatineeUtility.Multicast_BroadcastSetPosition"));}

	AMatineeUtility_Multicast_BroadcastSetPosition_Params params;
	params.MatineeActor = MatineeActor;
	params.InterpolationPosition = InterpolationPosition;
	params.Jump = Jump;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MatineeUtility.Multicast_BroadcastPlay
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AMatineeActor*           MatineeActor                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMatineeUtility::Multicast_BroadcastPlay(class AMatineeActor* MatineeActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MatineeUtility.Multicast_BroadcastPlay"));}

	AMatineeUtility_Multicast_BroadcastPlay_Params params;
	params.MatineeActor = MatineeActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MatineeUtility.HandleCharacterEndPlay
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EEndPlayReason>    EndPlayReason                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMatineeUtility::HandleCharacterEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MatineeUtility.HandleCharacterEndPlay"));}

	AMatineeUtility_HandleCharacterEndPlay_Params params;
	params.EndPlayReason = EndPlayReason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MatineeUtility.HandleCharacterDestroyed
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AMatineeUtility::HandleCharacterDestroyed()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MatineeUtility.HandleCharacterDestroyed"));}

	AMatineeUtility_HandleCharacterDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MatineeUtility.BroadcastStop
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AMatineeActor*           MatineeActor                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMatineeUtility::BroadcastStop(class AMatineeActor* MatineeActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MatineeUtility.BroadcastStop"));}

	AMatineeUtility_BroadcastStop_Params params;
	params.MatineeActor = MatineeActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MatineeUtility.BroadcastSetPosition
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AMatineeActor*           MatineeActor                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          InterpolationPosition          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           Jump                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMatineeUtility::BroadcastSetPosition(class AMatineeActor* MatineeActor, float InterpolationPosition, bool Jump)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MatineeUtility.BroadcastSetPosition"));}

	AMatineeUtility_BroadcastSetPosition_Params params;
	params.MatineeActor = MatineeActor;
	params.InterpolationPosition = InterpolationPosition;
	params.Jump = Jump;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MatineeUtility.BroadcastPlay
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AMatineeActor*           MatineeActor                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMatineeUtility::BroadcastPlay(class AMatineeActor* MatineeActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MatineeUtility.BroadcastPlay"));}

	AMatineeUtility_BroadcastPlay_Params params;
	params.MatineeActor = MatineeActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MeleeAttackProcessorComponent.Multicast_RespondToHit
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FMeleeAttackHitResponseData HitResponseData                (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm)

void UMeleeAttackProcessorComponent::Multicast_RespondToHit(const struct FMeleeAttackHitResponseData& HitResponseData)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MeleeAttackProcessorComponent.Multicast_RespondToHit"));}

	UMeleeAttackProcessorComponent_Multicast_RespondToHit_Params params;
	params.HitResponseData = HitResponseData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MeleeAttackProcessorComponent.Client_AttackCompleted
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UMeleeAttackDataAsset*   AttackCompleted                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UMeleeAttackProcessorComponent::Client_AttackCompleted(class UMeleeAttackDataAsset* AttackCompleted)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MeleeAttackProcessorComponent.Client_AttackCompleted"));}

	UMeleeAttackProcessorComponent_Client_AttackCompleted_Params params;
	params.AttackCompleted = AttackCompleted;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MeleeBlockingActionStateId.PushCharacterIntoMeleeBlockingActionState
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  InputID                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          BlockMovementTime              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UMeleeBlockingActionStateId::PushCharacterIntoMeleeBlockingActionState(class AActor* Character, class UClass* InputID, float BlockMovementTime)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MeleeBlockingActionStateId.PushCharacterIntoMeleeBlockingActionState"));}

	UMeleeBlockingActionStateId_PushCharacterIntoMeleeBlockingActionState_Params params;
	params.Character = Character;
	params.InputID = InputID;
	params.BlockMovementTime = BlockMovementTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MeleeBlockingActionStateId.PopCharacterOutOfMeleeBlockingActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UMeleeBlockingActionStateId::PopCharacterOutOfMeleeBlockingActionState(class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MeleeBlockingActionStateId.PopCharacterOutOfMeleeBlockingActionState"));}

	UMeleeBlockingActionStateId_PopCharacterOutOfMeleeBlockingActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MeleeBlockingCompositeInputHandler.OnDodge
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UMeleeBlockingCompositeInputHandler::OnDodge()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MeleeBlockingCompositeInputHandler.OnDodge"));}

	UMeleeBlockingCompositeInputHandler_OnDodge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.MemoryTestPawn.Server_SetActorLocationAndRotation
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVector                 Location                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FRotator                Rotation                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMemoryTestPawn::Server_SetActorLocationAndRotation(const struct FVector& Location, const struct FRotator& Rotation)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MemoryTestPawn.Server_SetActorLocationAndRotation"));}

	AMemoryTestPawn_Server_SetActorLocationAndRotation_Params params;
	params.Location = Location;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MemoryTestPawn.IsFinished
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AMemoryTestPawn::IsFinished()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MemoryTestPawn.IsFinished"));}

	AMemoryTestPawn_IsFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.MenuInputHandler.OnOpenQuickMenu
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UMenuInputHandler::OnOpenQuickMenu()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MenuInputHandler.OnOpenQuickMenu"));}

	UMenuInputHandler_OnOpenQuickMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.MenuInputHandler.OnOpenEscapeMenu
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UMenuInputHandler::OnOpenEscapeMenu()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MenuInputHandler.OnOpenEscapeMenu"));}

	UMenuInputHandler_OnOpenEscapeMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.MerchantCrateProviderInterface.CollectCrate
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Player                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  CrateDesc                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UMerchantCrateProviderInterface::CollectCrate(class AActor* Player, class UClass* CrateDesc)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MerchantCrateProviderInterface.CollectCrate"));}

	UMerchantCrateProviderInterface_CollectCrate_Params params;
	params.Player = Player;
	params.CrateDesc = CrateDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MermaidServiceInterface.SpawnMermaidForCrewWhoLostShip
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FGuid                   CrewId                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// struct FVector                 LostShipPos                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UMermaidServiceInterface::SpawnMermaidForCrewWhoLostShip(const struct FGuid& CrewId, const struct FVector& LostShipPos)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MermaidServiceInterface.SpawnMermaidForCrewWhoLostShip"));}

	UMermaidServiceInterface_SpawnMermaidForCrewWhoLostShip_Params params;
	params.CrewId = CrewId;
	params.LostShipPos = LostShipPos;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MermaidServiceInterface.DebugEnableMermaidSpawning
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           Flag                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UMermaidServiceInterface::DebugEnableMermaidSpawning(bool Flag)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MermaidServiceInterface.DebugEnableMermaidSpawning"));}

	UMermaidServiceInterface_DebugEnableMermaidSpawning_Params params;
	params.Flag = Flag;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MermaidService.SetParams
// (FUNC_BlueprintAuthorityOnly, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FMermaidServiceParams   P                              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void AMermaidService::SetParams(const struct FMermaidServiceParams& P)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MermaidService.SetParams"));}

	AMermaidService_SetParams_Params params;
	params.P = P;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MermaidService.IsMermaidActive
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AMermaid*                M                              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AMermaidService::IsMermaidActive(class AMermaid* M)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MermaidService.IsMermaidActive"));}

	AMermaidService_IsMermaidActive_Params params;
	params.M = M;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.MermaidService.GetParams
// (FUNC_BlueprintAuthorityOnly, FUNC_Net)
// Parameters:
// struct FMermaidServiceParams   ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FMermaidServiceParams AMermaidService::GetParams()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MermaidService.GetParams"));}

	AMermaidService_GetParams_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.MermaidService.GetNumActiveMermaids
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int AMermaidService::GetNumActiveMermaids()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MermaidService.GetNumActiveMermaids"));}

	AMermaidService_GetNumActiveMermaids_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.MetalAIFormComponent.OnRep_IsWet
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UMetalAIFormComponent::OnRep_IsWet()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MetalAIFormComponent.OnRep_IsWet"));}

	UMetalAIFormComponent_OnRep_IsWet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MigrationActionStateId.PushCharacterIntoMigrationActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaCharacter*        Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UMigrationActionStateId::PushCharacterIntoMigrationActionState(class AAthenaCharacter* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MigrationActionStateId.PushCharacterIntoMigrationActionState"));}

	UMigrationActionStateId_PushCharacterIntoMigrationActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MigrationUIComponent.OnTextCanvasUpdate
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UCanvas*                 Canvas                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Width                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Height                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UMigrationUIComponent::OnTextCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MigrationUIComponent.OnTextCanvasUpdate"));}

	UMigrationUIComponent_OnTextCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.OneShotUsable.Trigger
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  InputID                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  InTriggeringActor              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UOneShotUsable::Trigger(class UClass* InputID, class AActor* InTriggeringActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.OneShotUsable.Trigger"));}

	UOneShotUsable_Trigger_Params params;
	params.InputID = InputID;
	params.InTriggeringActor = InTriggeringActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.OneShotUsable.CanTrigger
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  InTriggeringActor              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UOneShotUsable::CanTrigger(class AActor* InTriggeringActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.OneShotUsable.CanTrigger"));}

	UOneShotUsable_CanTrigger_Params params;
	params.InTriggeringActor = InTriggeringActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Shovel.Server_RequestDigRPC
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AShovel::Server_RequestDigRPC()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Shovel.Server_RequestDigRPC"));}

	AShovel_Server_RequestDigRPC_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Shovel.Multicast_DigRPC
// (FUNC_RequiredAPI, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EShovelDigType>    NewDigType                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EBuriedItemType>   DigUnearthingType              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AShovel::Multicast_DigRPC(TEnumAsByte<EShovelDigType> NewDigType, TEnumAsByte<EBuriedItemType> DigUnearthingType)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Shovel.Multicast_DigRPC"));}

	AShovel_Multicast_DigRPC_Params params;
	params.NewDigType = NewDigType;
	params.DigUnearthingType = DigUnearthingType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Shovel.GetShouldWielderBeLocked
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AShovel::GetShouldWielderBeLocked()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Shovel.GetShouldWielderBeLocked"));}

	AShovel_GetShouldWielderBeLocked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Shovel.GetLastKnownDigTypeOnServer
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EShovelDigType>    ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EShovelDigType> AShovel::GetLastKnownDigTypeOnServer()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Shovel.GetLastKnownDigTypeOnServer"));}

	AShovel_GetLastKnownDigTypeOnServer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Shovel.GetCurrentDigType
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EShovelDigType>    ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EShovelDigType> AShovel::GetCurrentDigType()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Shovel.GetCurrentDigType"));}

	AShovel_GetCurrentDigType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.MockTelemetryDispatcher.ValidateGameEndTelemetryEvent
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Private, FUNC_Protected, FUNC_Delegate)
// Parameters:
// struct FPlayerGameEndTelemetryEvent Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// int                            MinIdleDuration                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            MinActiveDuration              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            MinVoiceChatDuration           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UMockTelemetryDispatcher::ValidateGameEndTelemetryEvent(const struct FPlayerGameEndTelemetryEvent& Event, int MinIdleDuration, int MinActiveDuration, int MinVoiceChatDuration)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.ValidateGameEndTelemetryEvent"));}

	UMockTelemetryDispatcher_ValidateGameEndTelemetryEvent_Params params;
	params.Event = Event;
	params.MinIdleDuration = MinIdleDuration;
	params.MinActiveDuration = MinActiveDuration;
	params.MinVoiceChatDuration = MinVoiceChatDuration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.MockTelemetryDispatcher.SeamlessTravelTo
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaPlayerController* Controller                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UMockTelemetryDispatcher::SeamlessTravelTo(class AAthenaPlayerController* Controller)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.SeamlessTravelTo"));}

	UMockTelemetryDispatcher_SeamlessTravelTo_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnUIScreenTransitionTelemetryEvent
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FUIScreenTransitionTelemetryEvent Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UMockTelemetryDispatcher::OnUIScreenTransitionTelemetryEvent(const struct FUIScreenTransitionTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnUIScreenTransitionTelemetryEvent"));}

	UMockTelemetryDispatcher_OnUIScreenTransitionTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnShovelTelemetryEvent
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FShovelTelemetryEvent   Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UMockTelemetryDispatcher::OnShovelTelemetryEvent(const struct FShovelTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnShovelTelemetryEvent"));}

	UMockTelemetryDispatcher_OnShovelTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnShipSpawnedTelemetryEvent
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FShipSpawnedTelemetryEvent Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UMockTelemetryDispatcher::OnShipSpawnedTelemetryEvent(const struct FShipSpawnedTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnShipSpawnedTelemetryEvent"));}

	UMockTelemetryDispatcher_OnShipSpawnedTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnShipHeartbeatTelemetryEvent
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FShipHeartbeatTelemetryEvent Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UMockTelemetryDispatcher::OnShipHeartbeatTelemetryEvent(const struct FShipHeartbeatTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnShipHeartbeatTelemetryEvent"));}

	UMockTelemetryDispatcher_OnShipHeartbeatTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnShipDestroyedTelemetryEvent
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FShipDestroyedTelemetryEvent Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UMockTelemetryDispatcher::OnShipDestroyedTelemetryEvent(const struct FShipDestroyedTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnShipDestroyedTelemetryEvent"));}

	UMockTelemetryDispatcher_OnShipDestroyedTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnShipDamagedTelemetryEvent
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FShipDamagedTelemetryEvent Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UMockTelemetryDispatcher::OnShipDamagedTelemetryEvent(const struct FShipDamagedTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnShipDamagedTelemetryEvent"));}

	UMockTelemetryDispatcher_OnShipDamagedTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnPlayerSpawnTelemetryEvent
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FPlayerSpawnTelemetryEvent Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UMockTelemetryDispatcher::OnPlayerSpawnTelemetryEvent(const struct FPlayerSpawnTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnPlayerSpawnTelemetryEvent"));}

	UMockTelemetryDispatcher_OnPlayerSpawnTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnPlayerObjectUsageStartTelemetryEvent
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FPlayerObjectUsageStartTelemetryEvent Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UMockTelemetryDispatcher::OnPlayerObjectUsageStartTelemetryEvent(const struct FPlayerObjectUsageStartTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnPlayerObjectUsageStartTelemetryEvent"));}

	UMockTelemetryDispatcher_OnPlayerObjectUsageStartTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnPlayerObjectUsageEndTelemetryEvent
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FPlayerObjectUsageEndTelemetryEvent Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UMockTelemetryDispatcher::OnPlayerObjectUsageEndTelemetryEvent(const struct FPlayerObjectUsageEndTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnPlayerObjectUsageEndTelemetryEvent"));}

	UMockTelemetryDispatcher_OnPlayerObjectUsageEndTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnPlayerItemRetrievalFromContainerTelemetryEvent
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FPlayerItemRetrievalFromContainerTelemetryEvent Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UMockTelemetryDispatcher::OnPlayerItemRetrievalFromContainerTelemetryEvent(const struct FPlayerItemRetrievalFromContainerTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnPlayerItemRetrievalFromContainerTelemetryEvent"));}

	UMockTelemetryDispatcher_OnPlayerItemRetrievalFromContainerTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnPlayerItemEquipTelemetryEvent
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FPlayerItemEquipTelemetryEvent Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UMockTelemetryDispatcher::OnPlayerItemEquipTelemetryEvent(const struct FPlayerItemEquipTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnPlayerItemEquipTelemetryEvent"));}

	UMockTelemetryDispatcher_OnPlayerItemEquipTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnPlayerHealthChangeTelemetryEvent
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FPlayerHealthChangeTelemetryEvent Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UMockTelemetryDispatcher::OnPlayerHealthChangeTelemetryEvent(const struct FPlayerHealthChangeTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnPlayerHealthChangeTelemetryEvent"));}

	UMockTelemetryDispatcher_OnPlayerHealthChangeTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnPlayerGameStartTelemetryEvent
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FPlayerGameStartTelemetryEvent Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UMockTelemetryDispatcher::OnPlayerGameStartTelemetryEvent(const struct FPlayerGameStartTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnPlayerGameStartTelemetryEvent"));}

	UMockTelemetryDispatcher_OnPlayerGameStartTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnPlayerGameEndTelemetryEvent
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FPlayerGameEndTelemetryEvent Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UMockTelemetryDispatcher::OnPlayerGameEndTelemetryEvent(const struct FPlayerGameEndTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnPlayerGameEndTelemetryEvent"));}

	UMockTelemetryDispatcher_OnPlayerGameEndTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnPlayerCapstanUsageStartTelemetryEvent
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FPlayerCapstanUsageStartTelemetryEvent Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UMockTelemetryDispatcher::OnPlayerCapstanUsageStartTelemetryEvent(const struct FPlayerCapstanUsageStartTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnPlayerCapstanUsageStartTelemetryEvent"));}

	UMockTelemetryDispatcher_OnPlayerCapstanUsageStartTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnPlayerCapstanUsageEndTelemetryEvent
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FPlayerCapstanUsageEndTelemetryEvent Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UMockTelemetryDispatcher::OnPlayerCapstanUsageEndTelemetryEvent(const struct FPlayerCapstanUsageEndTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnPlayerCapstanUsageEndTelemetryEvent"));}

	UMockTelemetryDispatcher_OnPlayerCapstanUsageEndTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnPlayerAttackTelemetryEvent
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FPlayerAttackTelemetryEvent Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UMockTelemetryDispatcher::OnPlayerAttackTelemetryEvent(const struct FPlayerAttackTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnPlayerAttackTelemetryEvent"));}

	UMockTelemetryDispatcher_OnPlayerAttackTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnPlayerActionTelemetryEvent
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FPlayerActionTelemetryEvent Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UMockTelemetryDispatcher::OnPlayerActionTelemetryEvent(const struct FPlayerActionTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnPlayerActionTelemetryEvent"));}

	UMockTelemetryDispatcher_OnPlayerActionTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnPlayerActionCannonTelemetryEvent
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FPlayerActionCannonTelemetryEvent Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UMockTelemetryDispatcher::OnPlayerActionCannonTelemetryEvent(const struct FPlayerActionCannonTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnPlayerActionCannonTelemetryEvent"));}

	UMockTelemetryDispatcher_OnPlayerActionCannonTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnLoadingTelemetryEvent
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FLoadingTelemetryEvent  Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UMockTelemetryDispatcher::OnLoadingTelemetryEvent(const struct FLoadingTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnLoadingTelemetryEvent"));}

	UMockTelemetryDispatcher_OnLoadingTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnCrewPlayerLeftTelemetryEvent
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FCrewPlayerLeftTelemetryEvent Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UMockTelemetryDispatcher::OnCrewPlayerLeftTelemetryEvent(const struct FCrewPlayerLeftTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnCrewPlayerLeftTelemetryEvent"));}

	UMockTelemetryDispatcher_OnCrewPlayerLeftTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnCrewPlayerJoinedTelemetryEvent
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FCrewPlayerJoinedTelemetryEvent Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UMockTelemetryDispatcher::OnCrewPlayerJoinedTelemetryEvent(const struct FCrewPlayerJoinedTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnCrewPlayerJoinedTelemetryEvent"));}

	UMockTelemetryDispatcher_OnCrewPlayerJoinedTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnCrewDestroyedTelemetryEvent
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FCrewDestroyedTelemetryEvent Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UMockTelemetryDispatcher::OnCrewDestroyedTelemetryEvent(const struct FCrewDestroyedTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnCrewDestroyedTelemetryEvent"));}

	UMockTelemetryDispatcher_OnCrewDestroyedTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.OnCrewCreatedTelemetryEvent
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FCrewCreatedTelemetryEvent Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UMockTelemetryDispatcher::OnCrewCreatedTelemetryEvent(const struct FCrewCreatedTelemetryEvent& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.OnCrewCreatedTelemetryEvent"));}

	UMockTelemetryDispatcher_OnCrewCreatedTelemetryEvent_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MockTelemetryDispatcher.IsHeartbeatValid
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AAthenaPlayerController* Controller                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UMockTelemetryDispatcher::IsHeartbeatValid(class AAthenaPlayerController* Controller)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MockTelemetryDispatcher.IsHeartbeatValid"));}

	UMockTelemetryDispatcher_IsHeartbeatValid_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ArmoryChestInteraction.Server_ArmoryChestEquipWeapon
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  InItemDesc                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            InIndex                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AArmoryChestInteraction::Server_ArmoryChestEquipWeapon(class UClass* InItemDesc, int InIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ArmoryChestInteraction.Server_ArmoryChestEquipWeapon"));}

	AArmoryChestInteraction_Server_ArmoryChestEquipWeapon_Params params;
	params.InItemDesc = InItemDesc;
	params.InIndex = InIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ClothingChestInteraction.Server_ClothingChestUnequipItem
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  InDesc                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AClothingChestInteraction::Server_ClothingChestUnequipItem(class UClass* InDesc)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ClothingChestInteraction.Server_ClothingChestUnequipItem"));}

	AClothingChestInteraction_Server_ClothingChestUnequipItem_Params params;
	params.InDesc = InDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ClothingChestInteraction.Server_ClothingChestEquipItem
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  InDesc                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AClothingChestInteraction::Server_ClothingChestEquipItem(class UClass* InDesc)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ClothingChestInteraction.Server_ClothingChestEquipItem"));}

	AClothingChestInteraction_Server_ClothingChestEquipItem_Params params;
	params.InDesc = InDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ClothingChestInteraction.Server_ClothingChestChangeClothing
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TArray<class UClass*>          InAdds                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm)
// TArray<class UClass*>          InRemoves                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm)

void AClothingChestInteraction::Server_ClothingChestChangeClothing(TArray<class UClass*> InAdds, TArray<class UClass*> InRemoves)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ClothingChestInteraction.Server_ClothingChestChangeClothing"));}

	AClothingChestInteraction_Server_ClothingChestChangeClothing_Params params;
	params.InAdds = InAdds;
	params.InRemoves = InRemoves;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ClothingChestInteraction.OnRep_Loadout
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AClothingChestInteraction::OnRep_Loadout()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ClothingChestInteraction.OnRep_Loadout"));}

	AClothingChestInteraction_OnRep_Loadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.EquipmentChestInteraction.Server_EquipmentChestEquipItem
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  InItemDesc                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AEquipmentChestInteraction::Server_EquipmentChestEquipItem(class UClass* InItemDesc)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.EquipmentChestInteraction.Server_EquipmentChestEquipItem"));}

	AEquipmentChestInteraction_Server_EquipmentChestEquipItem_Params params;
	params.InItemDesc = InItemDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipCustomizationChestInteraction.Server_ShipCustomizationChestUnequipItem
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  InDesc                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AShipCustomizationChestInteraction::Server_ShipCustomizationChestUnequipItem(class UClass* InDesc)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipCustomizationChestInteraction.Server_ShipCustomizationChestUnequipItem"));}

	AShipCustomizationChestInteraction_Server_ShipCustomizationChestUnequipItem_Params params;
	params.InDesc = InDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipCustomizationChestInteraction.Server_ShipCustomizationChestEquipItem
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  InDesc                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AShipCustomizationChestInteraction::Server_ShipCustomizationChestEquipItem(class UClass* InDesc)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipCustomizationChestInteraction.Server_ShipCustomizationChestEquipItem"));}

	AShipCustomizationChestInteraction_Server_ShipCustomizationChestEquipItem_Params params;
	params.InDesc = InDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.VoyageProposalContainerInteraction.Server_VoyageProposalSelected
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 ProposalDescName               (CPF_Parm, CPF_ZeroConstructor)

void AVoyageProposalContainerInteraction::Server_VoyageProposalSelected(const struct FString& ProposalDescName)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VoyageProposalContainerInteraction.Server_VoyageProposalSelected"));}

	AVoyageProposalContainerInteraction_Server_VoyageProposalSelected_Params params;
	params.ProposalDescName = ProposalDescName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ModalInteractionActionStateId.PushCharacterIntoModalInteractionActionState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AModalInteractionProxy*  InInteractionProxy             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UModalInteractionActionStateId::PushCharacterIntoModalInteractionActionState(class AActor* Character, class AModalInteractionProxy* InInteractionProxy)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ModalInteractionActionStateId.PushCharacterIntoModalInteractionActionState"));}

	UModalInteractionActionStateId_PushCharacterIntoModalInteractionActionState_Params params;
	params.Character = Character;
	params.InInteractionProxy = InInteractionProxy;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ModalInteractionCompositeInputHandler.OnDisengage
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UModalInteractionCompositeInputHandler::OnDisengage()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ModalInteractionCompositeInputHandler.OnDisengage"));}

	UModalInteractionCompositeInputHandler_OnDisengage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.MountpointComponent.OnRep_ReplicatedMountedItem
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UMountpointComponent::OnRep_ReplicatedMountedItem()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MountpointComponent.OnRep_ReplicatedMountedItem"));}

	UMountpointComponent_OnRep_ReplicatedMountedItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.NameplateComponent.GetWorldPosition
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector UNameplateComponent::GetWorldPosition()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.NameplateComponent.GetWorldPosition"));}

	UNameplateComponent_GetWorldPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.NetProxy.OnRep_OwningActor
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ANetProxy::OnRep_OwningActor()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.NetProxy.OnRep_OwningActor"));}

	ANetProxy_OnRep_OwningActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.NetProxy.OnOwningActorDestroyed
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ANetProxy::OnOwningActorDestroyed()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.NetProxy.OnOwningActorDestroyed"));}

	ANetProxy_OnOwningActorDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipNetProxy.OnRep_LanternBits
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AShipNetProxy::OnRep_LanternBits()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipNetProxy.OnRep_LanternBits"));}

	AShipNetProxy_OnRep_LanternBits_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipNetProxy.OnLanternStateChanged
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// unsigned char                  LanternStateBits               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AShipNetProxy::OnLanternStateChanged(unsigned char LanternStateBits)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipNetProxy.OnLanternStateChanged"));}

	AShipNetProxy_OnLanternStateChanged_Params params;
	params.LanternStateBits = LanternStateBits;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipNetProxy.GetLanternBits
// (FUNC_Final)
// Parameters:
// unsigned char                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

unsigned char AShipNetProxy::GetLanternBits()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipNetProxy.GetLanternBits"));}

	AShipNetProxy_GetLanternBits_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.NPCReactionBound.OnActivationRegionOverlapEnd
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UNPCReactionBound::OnActivationRegionOverlapEnd(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.NPCReactionBound.OnActivationRegionOverlapEnd"));}

	UNPCReactionBound_OnActivationRegionOverlapEnd_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.NPCReactionBound.OnActivationRegionOverlapBegin
// (FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Other                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bFromSweep                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FHitResult              OverlapInfo                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UNPCReactionBound::OnActivationRegionOverlapBegin(class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.NPCReactionBound.OnActivationRegionOverlapBegin"));}

	UNPCReactionBound_OnActivationRegionOverlapBegin_Params params;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.OverlapInfo = OverlapInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ObjectUtilities.GetDefaultObject
// (FUNC_Protected)
// Parameters:
// class UClass*                  Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UObject*                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UObject* UObjectUtilities::GetDefaultObject(class UClass* Class)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ObjectUtilities.GetDefaultObject"));}

	UObjectUtilities_GetDefaultObject_Params params;
	params.Class = Class;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ObjectUtilities.CreateObject
// (FUNC_Protected)
// Parameters:
// class UClass*                  Class                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UObject*                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UObject* UObjectUtilities::CreateObject(class UClass* Class)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ObjectUtilities.CreateObject"));}

	UObjectUtilities_CreateObject_Params params;
	params.Class = Class;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.OffBottomTransitionLadderActionStateId.PushCharacterIntoOffBottomTransitionLadderActionState
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EActionStateMachineTrackId> TrackId                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  LadderActor                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          InteractingHeight              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// unsigned char                  ClimbId                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<ELadderTransitionMode> LadderTransitionMode           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FLadderDefinition       LadderDefinition               (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UOffBottomTransitionLadderActionStateId::PushCharacterIntoOffBottomTransitionLadderActionState(TEnumAsByte<EActionStateMachineTrackId> TrackId, class AActor* LadderActor, class AActor* Character, float InteractingHeight, unsigned char ClimbId, TEnumAsByte<ELadderTransitionMode> LadderTransitionMode, const struct FLadderDefinition& LadderDefinition)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.OffBottomTransitionLadderActionStateId.PushCharacterIntoOffBottomTransitionLadderActionState"));}

	UOffBottomTransitionLadderActionStateId_PushCharacterIntoOffBottomTransitionLadderActionState_Params params;
	params.TrackId = TrackId;
	params.LadderActor = LadderActor;
	params.Character = Character;
	params.InteractingHeight = InteractingHeight;
	params.ClimbId = ClimbId;
	params.LadderTransitionMode = LadderTransitionMode;
	params.LadderDefinition = LadderDefinition;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.OffTopTransitionLadderActionStateId.PushCharacterIntoOffTopTransitionLadderActionState
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EActionStateMachineTrackId> TrackId                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  LadderActor                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          InteractingHeight              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// unsigned char                  ClimbId                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<ELadderTransitionMode> LadderTransitionMode           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FLadderDefinition       LadderDefinition               (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UOffTopTransitionLadderActionStateId::PushCharacterIntoOffTopTransitionLadderActionState(TEnumAsByte<EActionStateMachineTrackId> TrackId, class AActor* LadderActor, class AActor* Character, float InteractingHeight, unsigned char ClimbId, TEnumAsByte<ELadderTransitionMode> LadderTransitionMode, const struct FLadderDefinition& LadderDefinition)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.OffTopTransitionLadderActionStateId.PushCharacterIntoOffTopTransitionLadderActionState"));}

	UOffTopTransitionLadderActionStateId_PushCharacterIntoOffTopTransitionLadderActionState_Params params;
	params.TrackId = TrackId;
	params.LadderActor = LadderActor;
	params.Character = Character;
	params.InteractingHeight = InteractingHeight;
	params.ClimbId = ClimbId;
	params.LadderTransitionMode = LadderTransitionMode;
	params.LadderDefinition = LadderDefinition;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.OnBottomTransitionLadderActionStateId.PushCharacterIntoOnBottomTransitionLadderActionState
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EActionStateMachineTrackId> TrackId                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  LadderActor                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          InteractingHeight              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// unsigned char                  ClimbId                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<ELadderTransitionMode> LadderTransitionMode           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FLadderDefinition       LadderDefinition               (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UOnBottomTransitionLadderActionStateId::PushCharacterIntoOnBottomTransitionLadderActionState(TEnumAsByte<EActionStateMachineTrackId> TrackId, class AActor* LadderActor, class AActor* Character, float InteractingHeight, unsigned char ClimbId, TEnumAsByte<ELadderTransitionMode> LadderTransitionMode, const struct FLadderDefinition& LadderDefinition)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.OnBottomTransitionLadderActionStateId.PushCharacterIntoOnBottomTransitionLadderActionState"));}

	UOnBottomTransitionLadderActionStateId_PushCharacterIntoOnBottomTransitionLadderActionState_Params params;
	params.TrackId = TrackId;
	params.LadderActor = LadderActor;
	params.Character = Character;
	params.InteractingHeight = InteractingHeight;
	params.ClimbId = ClimbId;
	params.LadderTransitionMode = LadderTransitionMode;
	params.LadderDefinition = LadderDefinition;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.OnTopTransitionLadderActionStateId.PushCharacterIntoOnTopTransitionLadderActionState
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EActionStateMachineTrackId> TrackId                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  LadderActor                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          InteractingHeight              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// unsigned char                  ClimbId                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<ELadderTransitionMode> LadderTransitionMode           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FLadderDefinition       LadderDefinition               (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UOnTopTransitionLadderActionStateId::PushCharacterIntoOnTopTransitionLadderActionState(TEnumAsByte<EActionStateMachineTrackId> TrackId, class AActor* LadderActor, class AActor* Character, float InteractingHeight, unsigned char ClimbId, TEnumAsByte<ELadderTransitionMode> LadderTransitionMode, const struct FLadderDefinition& LadderDefinition)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.OnTopTransitionLadderActionStateId.PushCharacterIntoOnTopTransitionLadderActionState"));}

	UOnTopTransitionLadderActionStateId_PushCharacterIntoOnTopTransitionLadderActionState_Params params;
	params.TrackId = TrackId;
	params.LadderActor = LadderActor;
	params.Character = Character;
	params.InteractingHeight = InteractingHeight;
	params.ClimbId = ClimbId;
	params.LadderTransitionMode = LadderTransitionMode;
	params.LadderDefinition = LadderDefinition;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PacingComponent.StopPacing
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UPacingComponent::StopPacing()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PacingComponent.StopPacing"));}

	UPacingComponent_StopPacing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PacingComponent.StartPacing
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UPacingComponent::StartPacing()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PacingComponent.StartPacing"));}

	UPacingComponent_StartPacing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PacingComponent.IsPacing
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UPacingComponent::IsPacing()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PacingComponent.IsPacing"));}

	UPacingComponent_IsPacing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PartConnectionMock.Tick
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          DeltaSeconds                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UPartConnectionMock::Tick(class UObject* WorldContextObject, float DeltaSeconds)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PartConnectionMock.Tick"));}

	UPartConnectionMock_Tick_Params params;
	params.WorldContextObject = WorldContextObject;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PartConnectionMock.AddMultipleConnection
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EMockShipConnectionPartType> ConnectionType                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<class AActor*>          ActorFromList                  (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm)
// class AActor*                  ActorTo                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UPartConnectionMock::AddMultipleConnection(class UObject* WorldContextObject, TEnumAsByte<EMockShipConnectionPartType> ConnectionType, TArray<class AActor*> ActorFromList, class AActor* ActorTo)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PartConnectionMock.AddMultipleConnection"));}

	UPartConnectionMock_AddMultipleConnection_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ConnectionType = ConnectionType;
	params.ActorFromList = ActorFromList;
	params.ActorTo = ActorTo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PartConnectionMock.AddConnection
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EMockShipConnectionPartType> ConnectionType                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  ActorFrom                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  ActorTo                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UPartConnectionMock::AddConnection(class UObject* WorldContextObject, TEnumAsByte<EMockShipConnectionPartType> ConnectionType, class AActor* ActorFrom, class AActor* ActorTo)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PartConnectionMock.AddConnection"));}

	UPartConnectionMock_AddConnection_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ConnectionType = ConnectionType;
	params.ActorFrom = ActorFrom;
	params.ActorTo = ActorTo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PhysicsCollisionFunctions.IsWorldSpacePositionInsideVolume
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private, FUNC_Delegate)
// Parameters:
// class UStaticMeshComponent*    Volume                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// struct FVector                 Position                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UPhysicsCollisionFunctions::IsWorldSpacePositionInsideVolume(class UStaticMeshComponent* Volume, const struct FVector& Position)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PhysicsCollisionFunctions.IsWorldSpacePositionInsideVolume"));}

	UPhysicsCollisionFunctions_IsWorldSpacePositionInsideVolume_Params params;
	params.Volume = Volume;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PickupObjectActionStateId.PushCharacterIntoPickupObjectActionState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  InCharacter                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  InPickupableObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UPickupObjectActionStateId::PushCharacterIntoPickupObjectActionState(class AActor* InCharacter, class AActor* InPickupableObject)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PickupObjectActionStateId.PushCharacterIntoPickupObjectActionState"));}

	UPickupObjectActionStateId_PushCharacterIntoPickupObjectActionState_Params params;
	params.InCharacter = InCharacter;
	params.InPickupableObject = InPickupableObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PirateGeneratorServiceInterface.BakeFromDescriptionAsync
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FPirateDescription      Desc                           (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// TEnumAsByte<EPirateBakeFlags>  Flags                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FGuid                   Guid                           (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// struct FScriptDelegate         AsyncResult                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm)

void UPirateGeneratorServiceInterface::BakeFromDescriptionAsync(const struct FPirateDescription& Desc, TEnumAsByte<EPirateBakeFlags> Flags, const struct FGuid& Guid, const struct FScriptDelegate& AsyncResult)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PirateGeneratorServiceInterface.BakeFromDescriptionAsync"));}

	UPirateGeneratorServiceInterface_BakeFromDescriptionAsync_Params params;
	params.Desc = Desc;
	params.Flags = Flags;
	params.Guid = Guid;
	params.AsyncResult = AsyncResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PirateIdentityBlueprintFunctionLibrary.GetServicesScopeId
// (FUNC_NetServer)
// Parameters:
// struct FPirateIdentity         InPirateIdentity               (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// struct FString                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

struct FString UPirateIdentityBlueprintFunctionLibrary::GetServicesScopeId(const struct FPirateIdentity& InPirateIdentity)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PirateIdentityBlueprintFunctionLibrary.GetServicesScopeId"));}

	UPirateIdentityBlueprintFunctionLibrary_GetServicesScopeId_Params params;
	params.InPirateIdentity = InPirateIdentity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PirateIdentityBlueprintFunctionLibrary.GetPirateIdentity
// (FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  InPawn                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FPirateIdentity         ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FPirateIdentity UPirateIdentityBlueprintFunctionLibrary::GetPirateIdentity(class AActor* InPawn)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PirateIdentityBlueprintFunctionLibrary.GetPirateIdentity"));}

	UPirateIdentityBlueprintFunctionLibrary_GetPirateIdentity_Params params;
	params.InPawn = InPawn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PiratePreviewInterface.PreCreatePreview
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UPiratePreviewInterface::PreCreatePreview()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PiratePreviewInterface.PreCreatePreview"));}

	UPiratePreviewInterface_PreCreatePreview_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PirateSelector.WaitForTavernTimerTick
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UPirateSelector::WaitForTavernTimerTick()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PirateSelector.WaitForTavernTimerTick"));}

	UPirateSelector_WaitForTavernTimerTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PirateSelector.RequestOpenAccountPicker
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UPirateSelector::RequestOpenAccountPicker()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PirateSelector.RequestOpenAccountPicker"));}

	UPirateSelector_RequestOpenAccountPicker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PirateSelector.OnPirateGenerateRequested
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UPirateSelector::OnPirateGenerateRequested()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PirateSelector.OnPirateGenerateRequested"));}

	UPirateSelector_OnPirateGenerateRequested_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PirateSelector.IsSelectedPirateSet
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UPirateSelector::IsSelectedPirateSet()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PirateSelector.IsSelectedPirateSet"));}

	UPirateSelector_IsSelectedPirateSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PirateSelector.GetSelectedPirateOutfit
// ()
// Parameters:
// TArray<class UClass*>          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class UClass*> UPirateSelector::GetSelectedPirateOutfit()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PirateSelector.GetSelectedPirateOutfit"));}

	UPirateSelector_GetSelectedPirateOutfit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PirateSelector.GetSelectedPirateDescription
// (FUNC_BlueprintCosmetic, FUNC_Net)
// Parameters:
// struct FPirateDescription      ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FPirateDescription UPirateSelector::GetSelectedPirateDescription()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PirateSelector.GetSelectedPirateDescription"));}

	UPirateSelector_GetSelectedPirateDescription_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PirateSelector.EndCelebration
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UPirateSelector::EndCelebration()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PirateSelector.EndCelebration"));}

	UPirateSelector_EndCelebration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PirateSelector.ConfirmAndSavePirate
// (FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FPirateDescription      Description                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// TArray<class UClass*>          Outfit                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm)

void UPirateSelector::ConfirmAndSavePirate(const struct FPirateDescription& Description, TArray<class UClass*> Outfit)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PirateSelector.ConfirmAndSavePirate"));}

	UPirateSelector_ConfirmAndSavePirate_Params params;
	params.Description = Description;
	params.Outfit = Outfit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PlantAIFormComponent.OnRep_IsWet
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UPlantAIFormComponent::OnRep_IsWet()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlantAIFormComponent.OnRep_IsWet"));}

	UPlantAIFormComponent_OnRep_IsWet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PlantAIFormComponent.OnRep_IsWeak
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UPlantAIFormComponent::OnRep_IsWeak()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlantAIFormComponent.OnRep_IsWeak"));}

	UPlantAIFormComponent_OnRep_IsWeak_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PlayerAtmosphericsAudioComponent.GetPoolDensityFactor
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UWwiseObjectPoolWrapper* PoolDensityWrapper             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UPlayerAtmosphericsAudioComponent::GetPoolDensityFactor(class UWwiseObjectPoolWrapper* PoolDensityWrapper)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerAtmosphericsAudioComponent.GetPoolDensityFactor"));}

	UPlayerAtmosphericsAudioComponent_GetPoolDensityFactor_Params params;
	params.PoolDensityWrapper = PoolDensityWrapper;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PlayerAtmosphericsAudioComponent.GetPoolDensityAveragePosition
// (FUNC_BlueprintAuthorityOnly, FUNC_Protected)
// Parameters:
// class UWwiseObjectPoolWrapper* PoolDensityWrapper             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector UPlayerAtmosphericsAudioComponent::GetPoolDensityAveragePosition(class UWwiseObjectPoolWrapper* PoolDensityWrapper)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerAtmosphericsAudioComponent.GetPoolDensityAveragePosition"));}

	UPlayerAtmosphericsAudioComponent_GetPoolDensityAveragePosition_Params params;
	params.PoolDensityWrapper = PoolDensityWrapper;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PlayerAtmosphericsAudioComponent.GetIsWindAudioPlaying
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UPlayerAtmosphericsAudioComponent::GetIsWindAudioPlaying()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerAtmosphericsAudioComponent.GetIsWindAudioPlaying"));}

	UPlayerAtmosphericsAudioComponent_GetIsWindAudioPlaying_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PlayerCrewComponent.Server_VoteOnSendPlayerToBrig
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaPlayerState*      PlayerState                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           SendIn                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UPlayerCrewComponent::Server_VoteOnSendPlayerToBrig(class AAthenaPlayerState* PlayerState, bool SendIn)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerCrewComponent.Server_VoteOnSendPlayerToBrig"));}

	UPlayerCrewComponent_Server_VoteOnSendPlayerToBrig_Params params;
	params.PlayerState = PlayerState;
	params.SendIn = SendIn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PlayerCrewComponent.Server_VoteOnScuttleShip
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           Scuttle                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UPlayerCrewComponent::Server_VoteOnScuttleShip(bool Scuttle)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerCrewComponent.Server_VoteOnScuttleShip"));}

	UPlayerCrewComponent_Server_VoteOnScuttleShip_Params params;
	params.Scuttle = Scuttle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PlayerCrewComponent.Server_VoteOnReleasePlayerFromBrig
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaPlayerState*      PlayerState                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           Release                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UPlayerCrewComponent::Server_VoteOnReleasePlayerFromBrig(class AAthenaPlayerState* PlayerState, bool Release)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerCrewComponent.Server_VoteOnReleasePlayerFromBrig"));}

	UPlayerCrewComponent_Server_VoteOnReleasePlayerFromBrig_Params params;
	params.PlayerState = PlayerState;
	params.Release = Release;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PlayerCrewComponent.OnRep_CrewShip
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UPlayerCrewComponent::OnRep_CrewShip()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerCrewComponent.OnRep_CrewShip"));}

	UPlayerCrewComponent_OnRep_CrewShip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PlayerCrewComponent.OnRep_CrewMembers
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UPlayerCrewComponent::OnRep_CrewMembers()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerCrewComponent.OnRep_CrewMembers"));}

	UPlayerCrewComponent_OnRep_CrewMembers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PlayerEntitlementBlueprintFunctionLibrary.GetEntitlements
// (FUNC_BlueprintCosmetic, FUNC_Protected, FUNC_Delegate)
// Parameters:
// TScriptInterface<class UPlayerEntitlementViewInterface> InPlayerEntitlementViewInterface (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// class UClass*                  InEntitlementType              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<class UClass*>          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class UClass*> UPlayerEntitlementBlueprintFunctionLibrary::GetEntitlements(const TScriptInterface<class UPlayerEntitlementViewInterface>& InPlayerEntitlementViewInterface, class UClass* InEntitlementType)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerEntitlementBlueprintFunctionLibrary.GetEntitlements"));}

	UPlayerEntitlementBlueprintFunctionLibrary_GetEntitlements_Params params;
	params.InPlayerEntitlementViewInterface = InPlayerEntitlementViewInterface;
	params.InEntitlementType = InEntitlementType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PlayerEntitlementComponent.OnRep_Entitlements
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UPlayerEntitlementComponent::OnRep_Entitlements()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerEntitlementComponent.OnRep_Entitlements"));}

	UPlayerEntitlementComponent_OnRep_Entitlements_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PlayerFunctionLibrary.DebugRemoveLocalPlayer
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            ControllerId                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UPlayerFunctionLibrary::DebugRemoveLocalPlayer(class UObject* WorldContextObject, int ControllerId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerFunctionLibrary.DebugRemoveLocalPlayer"));}

	UPlayerFunctionLibrary_DebugRemoveLocalPlayer_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ControllerId = ControllerId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PlayerHeroStatsComponent.Client_UpdateValue
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// uint32_t                       PlayerStatId                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// uint64_t                       AbsoluteValue                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UPlayerHeroStatsComponent::Client_UpdateValue(uint32_t PlayerStatId, uint64_t AbsoluteValue)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerHeroStatsComponent.Client_UpdateValue"));}

	UPlayerHeroStatsComponent_Client_UpdateValue_Params params;
	params.PlayerStatId = PlayerStatId;
	params.AbsoluteValue = AbsoluteValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PlayerNonVerbalComponent.Server_SendText
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FText                   Message                        (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm)

void UPlayerNonVerbalComponent::Server_SendText(const struct FText& Message)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerNonVerbalComponent.Server_SendText"));}

	UPlayerNonVerbalComponent_Server_SendText_Params params;
	params.Message = Message;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PlayerNonVerbalComponent.Server_SendPhrase
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FString                 PhraseKey                      (CPF_Parm, CPF_ZeroConstructor)

void UPlayerNonVerbalComponent::Server_SendPhrase(const struct FString& PhraseKey)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerNonVerbalComponent.Server_SendPhrase"));}

	UPlayerNonVerbalComponent_Server_SendPhrase_Params params;
	params.PhraseKey = PhraseKey;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PlayerNonVerbalComponent.Client_ReceiveText
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaPlayerState*      SenderPlayerState              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FText                   Message                        (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm)

void UPlayerNonVerbalComponent::Client_ReceiveText(class AAthenaPlayerState* SenderPlayerState, const struct FText& Message)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerNonVerbalComponent.Client_ReceiveText"));}

	UPlayerNonVerbalComponent_Client_ReceiveText_Params params;
	params.SenderPlayerState = SenderPlayerState;
	params.Message = Message;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PlayerNonVerbalComponent.Client_ReceivePhrase
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaPlayerState*      SenderPlayerState              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FString                 PhraseKey                      (CPF_Parm, CPF_ZeroConstructor)

void UPlayerNonVerbalComponent::Client_ReceivePhrase(class AAthenaPlayerState* SenderPlayerState, const struct FString& PhraseKey)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerNonVerbalComponent.Client_ReceivePhrase"));}

	UPlayerNonVerbalComponent_Client_ReceivePhrase_Params params;
	params.SenderPlayerState = SenderPlayerState;
	params.PhraseKey = PhraseKey;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PlayerOceanAudioComponent.GetIsUnderwater
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UPlayerOceanAudioComponent::GetIsUnderwater()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerOceanAudioComponent.GetIsUnderwater"));}

	UPlayerOceanAudioComponent_GetIsUnderwater_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PlayerOceanAudioComponent.GetIsPlaying
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UPlayerOceanAudioComponent::GetIsPlaying()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerOceanAudioComponent.GetIsPlaying"));}

	UPlayerOceanAudioComponent_GetIsPlaying_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PlayerOceanAudioComponent.GetIsOnIsland
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UPlayerOceanAudioComponent::GetIsOnIsland()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerOceanAudioComponent.GetIsOnIsland"));}

	UPlayerOceanAudioComponent_GetIsOnIsland_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PlayerOceanAudioComponent.GetEmitterPosition
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector UPlayerOceanAudioComponent::GetEmitterPosition()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerOceanAudioComponent.GetEmitterPosition"));}

	UPlayerOceanAudioComponent_GetEmitterPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.TestPlayerPermissionsComponent.SetAllowExecuteOnServer
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           AllowAccess                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UTestPlayerPermissionsComponent::SetAllowExecuteOnServer(bool AllowAccess)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestPlayerPermissionsComponent.SetAllowExecuteOnServer"));}

	UTestPlayerPermissionsComponent_SetAllowExecuteOnServer_Params params;
	params.AllowAccess = AllowAccess;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestPlayerPermissionsComponent.SetAllowDebugMenuButtonShortcutsAccess
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           AllowAccess                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UTestPlayerPermissionsComponent::SetAllowDebugMenuButtonShortcutsAccess(bool AllowAccess)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestPlayerPermissionsComponent.SetAllowDebugMenuButtonShortcutsAccess"));}

	UTestPlayerPermissionsComponent_SetAllowDebugMenuButtonShortcutsAccess_Params params;
	params.AllowAccess = AllowAccess;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestPlayerPermissionsComponent.SetAllowDebugMenuAccess
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           AllowAccess                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UTestPlayerPermissionsComponent::SetAllowDebugMenuAccess(bool AllowAccess)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestPlayerPermissionsComponent.SetAllowDebugMenuAccess"));}

	UTestPlayerPermissionsComponent_SetAllowDebugMenuAccess_Params params;
	params.AllowAccess = AllowAccess;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestPlayerPermissionsComponent.GrantDebugMenuPermissions
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           AllowAccess                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UTestPlayerPermissionsComponent::GrantDebugMenuPermissions(bool AllowAccess)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestPlayerPermissionsComponent.GrantDebugMenuPermissions"));}

	UTestPlayerPermissionsComponent_GrantDebugMenuPermissions_Params params;
	params.AllowAccess = AllowAccess;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PlayerWalletComponent.OnRep_BalanceUpdated
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UPlayerWalletComponent::OnRep_BalanceUpdated()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PlayerWalletComponent.OnRep_BalanceUpdated"));}

	UPlayerWalletComponent_OnRep_BalanceUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PosablePirate.OnEndGeneratingPirate
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void APosablePirate::OnEndGeneratingPirate()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PosablePirate.OnEndGeneratingPirate"));}

	APosablePirate_OnEndGeneratingPirate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PosablePirate.OnBeginGeneratingPirate
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void APosablePirate::OnBeginGeneratingPirate()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PosablePirate.OnBeginGeneratingPirate"));}

	APosablePirate_OnBeginGeneratingPirate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PosablePirate.IsPirateLoaded
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool APosablePirate::IsPirateLoaded()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PosablePirate.IsPirateLoaded"));}

	APosablePirate_IsPirateLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PosablePirate.GetCurrentOutfit
// ()
// Parameters:
// TArray<class UClass*>          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class UClass*> APosablePirate::GetCurrentOutfit()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PosablePirate.GetCurrentOutfit"));}

	APosablePirate_GetCurrentOutfit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PosablePirate.GetCurrentDescription
// (FUNC_BlueprintCosmetic, FUNC_Net)
// Parameters:
// struct FPirateDescription      ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FPirateDescription APosablePirate::GetCurrentDescription()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PosablePirate.GetCurrentDescription"));}

	APosablePirate_GetCurrentDescription_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PosablePirate.BeginGeneratingPirate
// (FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FPirateDescription      Desc                           (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// TArray<class UClass*>          Outfit                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm)

void APosablePirate::BeginGeneratingPirate(const struct FPirateDescription& Desc, TArray<class UClass*> Outfit)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PosablePirate.BeginGeneratingPirate"));}

	APosablePirate_BeginGeneratingPirate_Params params;
	params.Desc = Desc;
	params.Outfit = Outfit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.PrimitiveComponentTestFunctionLibrary.CheckWeldParentMatches
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UPrimitiveComponent*     TestComponent                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// class UPrimitiveComponent*     ExpectedParentComponent        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)

void UPrimitiveComponentTestFunctionLibrary::CheckWeldParentMatches(class UPrimitiveComponent* TestComponent, class UPrimitiveComponent* ExpectedParentComponent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PrimitiveComponentTestFunctionLibrary.CheckWeldParentMatches"));}

	UPrimitiveComponentTestFunctionLibrary_CheckWeldParentMatches_Params params;
	params.TestComponent = TestComponent;
	params.ExpectedParentComponent = ExpectedParentComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ProjectileWeapon.ScopeTick
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          DeltaSeconds                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AProjectileWeapon::ScopeTick(float DeltaSeconds)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ProjectileWeapon.ScopeTick"));}

	AProjectileWeapon_ScopeTick_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ProjectileWeapon.ScopeOn
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AProjectileWeapon::ScopeOn()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ProjectileWeapon.ScopeOn"));}

	AProjectileWeapon_ScopeOn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ProjectileWeapon.ScopeOffImmediate
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AProjectileWeapon::ScopeOffImmediate()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ProjectileWeapon.ScopeOffImmediate"));}

	AProjectileWeapon_ScopeOffImmediate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ProjectileWeapon.ScopeOff
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AProjectileWeapon::ScopeOff()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ProjectileWeapon.ScopeOff"));}

	AProjectileWeapon_ScopeOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ProjectileWeapon.RadialBlurOn
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AProjectileWeapon::RadialBlurOn()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ProjectileWeapon.RadialBlurOn"));}

	AProjectileWeapon_RadialBlurOn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ProjectileWeapon.RadialBlurOff
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AProjectileWeapon::RadialBlurOff()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ProjectileWeapon.RadialBlurOff"));}

	AProjectileWeapon_RadialBlurOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ProjectileWeapon.OnWeaponFired
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AProjectileWeapon::OnWeaponFired()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ProjectileWeapon.OnWeaponFired"));}

	AProjectileWeapon_OnWeaponFired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ProjectileWeapon.OnRep_State
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AProjectileWeapon::OnRep_State()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ProjectileWeapon.OnRep_State"));}

	AProjectileWeapon_OnRep_State_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ProjectileWeapon.OnRep_AmmoLeft
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            PreviousAmmo                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AProjectileWeapon::OnRep_AmmoLeft(int PreviousAmmo)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ProjectileWeapon.OnRep_AmmoLeft"));}

	AProjectileWeapon_OnRep_AmmoLeft_Params params;
	params.PreviousAmmo = PreviousAmmo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ProjectileWeapon.Multicast_ReceiveFire
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FFireBroadcast          Broadcast                      (CPF_Parm)

void AProjectileWeapon::Multicast_ReceiveFire(const struct FFireBroadcast& Broadcast)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ProjectileWeapon.Multicast_ReceiveFire"));}

	AProjectileWeapon_Multicast_ReceiveFire_Params params;
	params.Broadcast = Broadcast;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ProjectileWeapon.Multicast_ReceiveDryFire
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AProjectileWeapon::Multicast_ReceiveDryFire()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ProjectileWeapon.Multicast_ReceiveDryFire"));}

	AProjectileWeapon_Multicast_ReceiveDryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ProjectileWeapon.GlintOn
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AProjectileWeapon::GlintOn()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ProjectileWeapon.GlintOn"));}

	AProjectileWeapon_GlintOn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ProjectileWeapon.GlintOff
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AProjectileWeapon::GlintOff()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ProjectileWeapon.GlintOff"));}

	AProjectileWeapon_GlintOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ProjectileWeapon.GetNumShotsLeftInClip
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int AProjectileWeapon::GetNumShotsLeftInClip()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ProjectileWeapon.GetNumShotsLeftInClip"));}

	AProjectileWeapon_GetNumShotsLeftInClip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ProjectileWeapon.GetLastAttackId
// ()
// Parameters:
// struct FGuid                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FGuid AProjectileWeapon::GetLastAttackId()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ProjectileWeapon.GetLastAttackId"));}

	AProjectileWeapon_GetLastAttackId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ProjectileWeapon.Client_RequestDenied
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AProjectileWeapon::Client_RequestDenied()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ProjectileWeapon.Client_RequestDenied"));}

	AProjectileWeapon_Client_RequestDenied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ProjectileWeapon.Client_CorrectPredictedMiss
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TArray<struct FHitResult>      CorrectedServerHits            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm)

void AProjectileWeapon::Client_CorrectPredictedMiss(TArray<struct FHitResult> CorrectedServerHits)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ProjectileWeapon.Client_CorrectPredictedMiss"));}

	AProjectileWeapon_Client_CorrectPredictedMiss_Params params;
	params.CorrectedServerHits = CorrectedServerHits;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ProjectileWeapon.CanFire
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AProjectileWeapon::CanFire()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ProjectileWeapon.CanFire"));}

	AProjectileWeapon_CanFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ProjectileWeapon.AddBulletsToClip
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            NumBullets                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           DoClipSizeCheck                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AProjectileWeapon::AddBulletsToClip(int NumBullets, bool DoClipSizeCheck)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ProjectileWeapon.AddBulletsToClip"));}

	AProjectileWeapon_AddBulletsToClip_Params params;
	params.NumBullets = NumBullets;
	params.DoClipSizeCheck = DoClipSizeCheck;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ProjectileWeaponValidationFunctionLibrary.ClampAimPositionToWeapon
// (FUNC_Net, FUNC_Delegate, FUNC_NetServer)
// Parameters:
// class AProjectileWeapon*       ProjectileWeapon               (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FProjectileAim          InAim                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// double                         RewindTime                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FProjectileAim          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FProjectileAim UProjectileWeaponValidationFunctionLibrary::ClampAimPositionToWeapon(class AProjectileWeapon* ProjectileWeapon, const struct FProjectileAim& InAim, double RewindTime)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ProjectileWeaponValidationFunctionLibrary.ClampAimPositionToWeapon"));}

	UProjectileWeaponValidationFunctionLibrary_ClampAimPositionToWeapon_Params params;
	params.ProjectileWeapon = ProjectileWeapon;
	params.InAim = InAim;
	params.RewindTime = RewindTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.EmotesRadialCompositeInputHandler.OnEmotesRadialTriggerNextSetOfPhrases
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UEmotesRadialCompositeInputHandler::OnEmotesRadialTriggerNextSetOfPhrases()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.EmotesRadialCompositeInputHandler.OnEmotesRadialTriggerNextSetOfPhrases"));}

	UEmotesRadialCompositeInputHandler_OnEmotesRadialTriggerNextSetOfPhrases_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.EmotesRadialCompositeInputHandler.OnEmotesRadialDeactivatedKeyboard
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UEmotesRadialCompositeInputHandler::OnEmotesRadialDeactivatedKeyboard()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.EmotesRadialCompositeInputHandler.OnEmotesRadialDeactivatedKeyboard"));}

	UEmotesRadialCompositeInputHandler_OnEmotesRadialDeactivatedKeyboard_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.EmotesRadialCompositeInputHandler.OnEmotesRadialDeactivatedGamepad
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UEmotesRadialCompositeInputHandler::OnEmotesRadialDeactivatedGamepad()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.EmotesRadialCompositeInputHandler.OnEmotesRadialDeactivatedGamepad"));}

	UEmotesRadialCompositeInputHandler_OnEmotesRadialDeactivatedGamepad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.EmotesRadialCompositeInputHandler.OnEmotesRadialActivatedKeyboard
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UEmotesRadialCompositeInputHandler::OnEmotesRadialActivatedKeyboard()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.EmotesRadialCompositeInputHandler.OnEmotesRadialActivatedKeyboard"));}

	UEmotesRadialCompositeInputHandler_OnEmotesRadialActivatedKeyboard_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.EmotesRadialCompositeInputHandler.OnEmotesRadialActivatedGamepad
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UEmotesRadialCompositeInputHandler::OnEmotesRadialActivatedGamepad()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.EmotesRadialCompositeInputHandler.OnEmotesRadialActivatedGamepad"));}

	UEmotesRadialCompositeInputHandler_OnEmotesRadialActivatedGamepad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PhrasesRadialCompositeInputHandler.OnPhrasesRadialTriggerNextSetOfPhrases
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UPhrasesRadialCompositeInputHandler::OnPhrasesRadialTriggerNextSetOfPhrases()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PhrasesRadialCompositeInputHandler.OnPhrasesRadialTriggerNextSetOfPhrases"));}

	UPhrasesRadialCompositeInputHandler_OnPhrasesRadialTriggerNextSetOfPhrases_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PhrasesRadialCompositeInputHandler.OnPhrasesRadialInventoryDeactivatedKeyboard
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UPhrasesRadialCompositeInputHandler::OnPhrasesRadialInventoryDeactivatedKeyboard()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PhrasesRadialCompositeInputHandler.OnPhrasesRadialInventoryDeactivatedKeyboard"));}

	UPhrasesRadialCompositeInputHandler_OnPhrasesRadialInventoryDeactivatedKeyboard_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PhrasesRadialCompositeInputHandler.OnPhrasesRadialInventoryDeactivatedGamepad
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UPhrasesRadialCompositeInputHandler::OnPhrasesRadialInventoryDeactivatedGamepad()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PhrasesRadialCompositeInputHandler.OnPhrasesRadialInventoryDeactivatedGamepad"));}

	UPhrasesRadialCompositeInputHandler_OnPhrasesRadialInventoryDeactivatedGamepad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PhrasesRadialCompositeInputHandler.OnPhrasesRadialInventoryActivatedKeyboard
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UPhrasesRadialCompositeInputHandler::OnPhrasesRadialInventoryActivatedKeyboard()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PhrasesRadialCompositeInputHandler.OnPhrasesRadialInventoryActivatedKeyboard"));}

	UPhrasesRadialCompositeInputHandler_OnPhrasesRadialInventoryActivatedKeyboard_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PhrasesRadialCompositeInputHandler.OnPhrasesRadialInventoryActivatedGamepad
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UPhrasesRadialCompositeInputHandler::OnPhrasesRadialInventoryActivatedGamepad()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PhrasesRadialCompositeInputHandler.OnPhrasesRadialInventoryActivatedGamepad"));}

	UPhrasesRadialCompositeInputHandler_OnPhrasesRadialInventoryActivatedGamepad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.PhrasesRadialCompositeInputHandler.OnBlock
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UPhrasesRadialCompositeInputHandler::OnBlock()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.PhrasesRadialCompositeInputHandler.OnBlock"));}

	UPhrasesRadialCompositeInputHandler_OnBlock_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialInventoryCompositeInputHandler.OnMapRadialInventoryDeactivatedKeyboard
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> URadialInventoryCompositeInputHandler::OnMapRadialInventoryDeactivatedKeyboard()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryCompositeInputHandler.OnMapRadialInventoryDeactivatedKeyboard"));}

	URadialInventoryCompositeInputHandler_OnMapRadialInventoryDeactivatedKeyboard_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialInventoryCompositeInputHandler.OnMapRadialInventoryDeactivatedGamepad
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> URadialInventoryCompositeInputHandler::OnMapRadialInventoryDeactivatedGamepad()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryCompositeInputHandler.OnMapRadialInventoryDeactivatedGamepad"));}

	URadialInventoryCompositeInputHandler_OnMapRadialInventoryDeactivatedGamepad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialInventoryCompositeInputHandler.OnMapRadialInventoryActivatedKeyboard
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> URadialInventoryCompositeInputHandler::OnMapRadialInventoryActivatedKeyboard()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryCompositeInputHandler.OnMapRadialInventoryActivatedKeyboard"));}

	URadialInventoryCompositeInputHandler_OnMapRadialInventoryActivatedKeyboard_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialInventoryCompositeInputHandler.OnMapRadialInventoryActivatedGamepad
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> URadialInventoryCompositeInputHandler::OnMapRadialInventoryActivatedGamepad()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryCompositeInputHandler.OnMapRadialInventoryActivatedGamepad"));}

	URadialInventoryCompositeInputHandler_OnMapRadialInventoryActivatedGamepad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialInventoryCompositeInputHandler.OnItemRadialTriggerNextSetOfItems
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> URadialInventoryCompositeInputHandler::OnItemRadialTriggerNextSetOfItems()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryCompositeInputHandler.OnItemRadialTriggerNextSetOfItems"));}

	URadialInventoryCompositeInputHandler_OnItemRadialTriggerNextSetOfItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialInventoryCompositeInputHandler.OnItemRadialInventoryDeactivatedKeyboard
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> URadialInventoryCompositeInputHandler::OnItemRadialInventoryDeactivatedKeyboard()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryCompositeInputHandler.OnItemRadialInventoryDeactivatedKeyboard"));}

	URadialInventoryCompositeInputHandler_OnItemRadialInventoryDeactivatedKeyboard_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialInventoryCompositeInputHandler.OnItemRadialInventoryDeactivatedGamepad
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> URadialInventoryCompositeInputHandler::OnItemRadialInventoryDeactivatedGamepad()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryCompositeInputHandler.OnItemRadialInventoryDeactivatedGamepad"));}

	URadialInventoryCompositeInputHandler_OnItemRadialInventoryDeactivatedGamepad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialInventoryCompositeInputHandler.OnItemRadialInventoryActivatedKeyboard
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> URadialInventoryCompositeInputHandler::OnItemRadialInventoryActivatedKeyboard()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryCompositeInputHandler.OnItemRadialInventoryActivatedKeyboard"));}

	URadialInventoryCompositeInputHandler_OnItemRadialInventoryActivatedKeyboard_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RadialInventoryCompositeInputHandler.OnItemRadialInventoryActivatedGamepad
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> URadialInventoryCompositeInputHandler::OnItemRadialInventoryActivatedGamepad()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RadialInventoryCompositeInputHandler.OnItemRadialInventoryActivatedGamepad"));}

	URadialInventoryCompositeInputHandler_OnItemRadialInventoryActivatedGamepad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RainZoneServiceInterface.UnregisterRainZoneFromService
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TScriptInterface<class URainZoneInterface> RainZone                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void URainZoneServiceInterface::UnregisterRainZoneFromService(const TScriptInterface<class URainZoneInterface>& RainZone)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RainZoneServiceInterface.UnregisterRainZoneFromService"));}

	URainZoneServiceInterface_UnregisterRainZoneFromService_Params params;
	params.RainZone = RainZone;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RainZoneServiceInterface.RegisterRainZoneWithService
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TScriptInterface<class URainZoneInterface> RainZone                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void URainZoneServiceInterface::RegisterRainZoneWithService(const TScriptInterface<class URainZoneInterface>& RainZone)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RainZoneServiceInterface.RegisterRainZoneWithService"));}

	URainZoneServiceInterface_RegisterRainZoneWithService_Params params;
	params.RainZone = RainZone;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RainZoneServiceInterface.GetRainZone
// (FUNC_BlueprintCosmetic, FUNC_Private)
// Parameters:
// int                            RainZoneIndex                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FRainZoneParametersAndLocation ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FRainZoneParametersAndLocation URainZoneServiceInterface::GetRainZone(int RainZoneIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RainZoneServiceInterface.GetRainZone"));}

	URainZoneServiceInterface_GetRainZone_Params params;
	params.RainZoneIndex = RainZoneIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RainZoneServiceInterface.GetRainStrengthAtTime
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Protected, FUNC_Delegate)
// Parameters:
// struct FVector                 Position                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// double                         InTime                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float URainZoneServiceInterface::GetRainStrengthAtTime(const struct FVector& Position, double InTime)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RainZoneServiceInterface.GetRainStrengthAtTime"));}

	URainZoneServiceInterface_GetRainStrengthAtTime_Params params;
	params.Position = Position;
	params.InTime = InTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RainZoneServiceInterface.GetRainStrength
// (FUNC_Private, FUNC_Protected)
// Parameters:
// struct FVector                 Position                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float URainZoneServiceInterface::GetRainStrength(const struct FVector& Position)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RainZoneServiceInterface.GetRainStrength"));}

	URainZoneServiceInterface_GetRainStrength_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RainZoneServiceInterface.GetNumberOfRainZones
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int URainZoneServiceInterface::GetNumberOfRainZones()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RainZoneServiceInterface.GetNumberOfRainZones"));}

	URainZoneServiceInterface_GetNumberOfRainZones_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RainZoneServiceInterface.GetAllRainZones
// ()
// Parameters:
// TArray<struct FRainZoneParametersAndLocation> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<struct FRainZoneParametersAndLocation> URainZoneServiceInterface::GetAllRainZones()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RainZoneServiceInterface.GetAllRainZones"));}

	URainZoneServiceInterface_GetAllRainZones_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RendererSettingsFunctionLibrary.UpdateRendererSettings
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void URendererSettingsFunctionLibrary::UpdateRendererSettings()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RendererSettingsFunctionLibrary.UpdateRendererSettings"));}

	URendererSettingsFunctionLibrary_UpdateRendererSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RepairingInterface.GetRepairType
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UClass*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UClass* URepairingInterface::GetRepairType()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RepairingInterface.GetRepairType"));}

	URepairingInterface_GetRepairType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RepairObjectActionStateId.PushCharacterIntoRepairObjectActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  RepairableActor                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  InputID                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void URepairObjectActionStateId::PushCharacterIntoRepairObjectActionState(class AActor* RepairableActor, class AActor* Character, class UClass* InputID)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RepairObjectActionStateId.PushCharacterIntoRepairObjectActionState"));}

	URepairObjectActionStateId_PushCharacterIntoRepairObjectActionState_Params params;
	params.RepairableActor = RepairableActor;
	params.Character = Character;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RepairObjectActionStateId.PopCharacterOutOfRepairObjectActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void URepairObjectActionStateId::PopCharacterOutOfRepairObjectActionState(class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RepairObjectActionStateId.PopCharacterOutOfRepairObjectActionState"));}

	URepairObjectActionStateId_PopCharacterOutOfRepairObjectActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RewardComponent.Client_OnRewardRequestSucceededEvent
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FRewardRequestSucceededEvent RewardRequestSucceededEvent    (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm)

void URewardComponent::Client_OnRewardRequestSucceededEvent(const struct FRewardRequestSucceededEvent& RewardRequestSucceededEvent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RewardComponent.Client_OnRewardRequestSucceededEvent"));}

	URewardComponent_Client_OnRewardRequestSucceededEvent_Params params;
	params.RewardRequestSucceededEvent = RewardRequestSucceededEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RewardComponent.Client_OnRewardRequestFailedEvent
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FRewardRequestFailedEvent RewardRequestFailedEvent       (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm)

void URewardComponent::Client_OnRewardRequestFailedEvent(const struct FRewardRequestFailedEvent& RewardRequestFailedEvent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RewardComponent.Client_OnRewardRequestFailedEvent"));}

	URewardComponent_Client_OnRewardRequestFailedEvent_Params params;
	params.RewardRequestFailedEvent = RewardRequestFailedEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Rudder.SetRudderAngleRatio
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          InRudderAngleRatio             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ARudder::SetRudderAngleRatio(float InRudderAngleRatio)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Rudder.SetRudderAngleRatio"));}

	ARudder_SetRudderAngleRatio_Params params;
	params.InRudderAngleRatio = InRudderAngleRatio;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Rudder.GetServerAngleRatio
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ARudder::GetServerAngleRatio()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Rudder.GetServerAngleRatio"));}

	ARudder_GetServerAngleRatio_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.RumbleHandlerComponent.EventFired
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FName                   InTag                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void URumbleHandlerComponent::EventFired(const struct FName& InTag)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RumbleHandlerComponent.EventFired"));}

	URumbleHandlerComponent_EventFired_Params params;
	params.InTag = InTag;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Sail.SetTurbulence
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          InTurbulence                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ASail::SetTurbulence(float InTurbulence)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Sail.SetTurbulence"));}

	ASail_SetTurbulence_Params params;
	params.InTurbulence = InTurbulence;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Sail.SetSailLoweredProportion
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Proportion                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ASail::SetSailLoweredProportion(float Proportion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Sail.SetSailLoweredProportion"));}

	ASail_SetSailLoweredProportion_Params params;
	params.Proportion = Proportion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Sail.SetSailAngleRatio
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          AngleRatio                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ASail::SetSailAngleRatio(float AngleRatio)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Sail.SetSailAngleRatio"));}

	ASail_SetSailAngleRatio_Params params;
	params.AngleRatio = AngleRatio;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Sail.SetForceScalarFromBPParams
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Scalar                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ASail::SetForceScalarFromBPParams(float Scalar)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Sail.SetForceScalarFromBPParams"));}

	ASail_SetForceScalarFromBPParams_Params params;
	params.Scalar = Scalar;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Sail.SetDamageScalar
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Scalar                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ASail::SetDamageScalar(float Scalar)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Sail.SetDamageScalar"));}

	ASail_SetDamageScalar_Params params;
	params.Scalar = Scalar;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Sail.SetBillowAmount
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          InBillowingAmount              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ASail::SetBillowAmount(float InBillowingAmount)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Sail.SetBillowAmount"));}

	ASail_SetBillowAmount_Params params;
	params.InBillowingAmount = InBillowingAmount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Sail.GetVisualBillowAmount
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ASail::GetVisualBillowAmount()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Sail.GetVisualBillowAmount"));}

	ASail_GetVisualBillowAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Sail.GetSailLoweredProportion
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ASail::GetSailLoweredProportion()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Sail.GetSailLoweredProportion"));}

	ASail_GetSailLoweredProportion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Sail.GetSailAngleRatio
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ASail::GetSailAngleRatio()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Sail.GetSailAngleRatio"));}

	ASail_GetSailAngleRatio_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Sail.GetSailAngle
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ASail::GetSailAngle()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Sail.GetSailAngle"));}

	ASail_GetSailAngle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Sail.GetMaxRotation
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ASail::GetMaxRotation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Sail.GetMaxRotation"));}

	ASail_GetMaxRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Sail.GetBillowAmount
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ASail::GetBillowAmount()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Sail.GetBillowAmount"));}

	ASail_GetBillowAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Sail.CalculateFurlValue
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ASail::CalculateFurlValue()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Sail.CalculateFurlValue"));}

	ASail_CalculateFurlValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SailAnimInterface.UpdateParameters
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Turning                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Billow                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          WindStrength                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          SailHeight                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Falling                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            FallingAnimation               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void USailAnimInterface::UpdateParameters(float Turning, float Billow, float WindStrength, float SailHeight, float Falling, int FallingAnimation)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailAnimInterface.UpdateParameters"));}

	USailAnimInterface_UpdateParameters_Params params;
	params.Turning = Turning;
	params.Billow = Billow;
	params.WindStrength = WindStrength;
	params.SailHeight = SailHeight;
	params.Falling = Falling;
	params.FallingAnimation = FallingAnimation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SailAnimInterface.InitialiseSail
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          PlayRateMultiplier             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           MainSail                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void USailAnimInterface::InitialiseSail(float PlayRateMultiplier, bool MainSail)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailAnimInterface.InitialiseSail"));}

	USailAnimInterface_InitialiseSail_Params params;
	params.PlayRateMultiplier = PlayRateMultiplier;
	params.MainSail = MainSail;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SailAnimInterface.InitialiseMast
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          MastFallingLimit               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void USailAnimInterface::InitialiseMast(float MastFallingLimit)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailAnimInterface.InitialiseMast"));}

	USailAnimInterface_InitialiseMast_Params params;
	params.MastFallingLimit = MastFallingLimit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SailHoistTestFunctions.SetupSailHoistServerSide
// (FUNC_BlueprintCosmetic, FUNC_NetServer)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 SpawnLocation                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  SailHoistClass                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class ASailHoist*              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class ASailHoist* USailHoistTestFunctions::SetupSailHoistServerSide(class UObject* WorldContextObject, const struct FVector& SpawnLocation, class UClass* SailHoistClass)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailHoistTestFunctions.SetupSailHoistServerSide"));}

	USailHoistTestFunctions_SetupSailHoistServerSide_Params params;
	params.WorldContextObject = WorldContextObject;
	params.SpawnLocation = SpawnLocation;
	params.SailHoistClass = SailHoistClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SailHoistTestFunctions.SetupSailHoistClientSideWithProvidedHoist
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class ASailHoist*              Hoist                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void USailHoistTestFunctions::SetupSailHoistClientSideWithProvidedHoist(class UObject* WorldContextObject, class ASailHoist* Hoist)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailHoistTestFunctions.SetupSailHoistClientSideWithProvidedHoist"));}

	USailHoistTestFunctions_SetupSailHoistClientSideWithProvidedHoist_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Hoist = Hoist;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SailHoistTestFunctions.SetupSailHoistClientSide
// (FUNC_Protected)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class ASailHoist*              ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class ASailHoist* USailHoistTestFunctions::SetupSailHoistClientSide(class UObject* WorldContextObject)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SailHoistTestFunctions.SetupSailHoistClientSide"));}

	USailHoistTestFunctions_SetupSailHoistClientSide_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Seagulls.Multicast_DismissSeagulls
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ASeagulls::Multicast_DismissSeagulls()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Seagulls.Multicast_DismissSeagulls"));}

	ASeagulls_Multicast_DismissSeagulls_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Seagulls.FadeOut
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ASeagulls::FadeOut()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Seagulls.FadeOut"));}

	ASeagulls_FadeOut_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Seagulls.FadeIn
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ASeagulls::FadeIn()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Seagulls.FadeIn"));}

	ASeagulls_FadeIn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ServiceProviderInterfaceTestFunctions.TestRegisterAndGetService
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UServiceProviderInterfaceTestFunctions::TestRegisterAndGetService(class UObject* WorldContextObject)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ServiceProviderInterfaceTestFunctions.TestRegisterAndGetService"));}

	UServiceProviderInterfaceTestFunctions_TestRegisterAndGetService_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ServiceProviderInterfaceTestFunctions.TestGetServiceUnregistered
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UServiceProviderInterfaceTestFunctions::TestGetServiceUnregistered(class UObject* WorldContextObject)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ServiceProviderInterfaceTestFunctions.TestGetServiceUnregistered"));}

	UServiceProviderInterfaceTestFunctions_TestGetServiceUnregistered_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShadowAIFormComponent.OnRep_CurrentState
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EShadowAIFormState> PreviousState                  (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UShadowAIFormComponent::OnRep_CurrentState(TEnumAsByte<EShadowAIFormState> PreviousState)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShadowAIFormComponent.OnRep_CurrentState"));}

	UShadowAIFormComponent_OnRep_CurrentState_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShadowAIFormComponent.Multicast_ChangedToState
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EShadowAIFormState> InState                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UShadowAIFormComponent::Multicast_ChangedToState(TEnumAsByte<EShadowAIFormState> InState)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShadowAIFormComponent.Multicast_ChangedToState"));}

	UShadowAIFormComponent_Multicast_ChangedToState_Params params;
	params.InState = InState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShantyInterface.RequestInstrumentStop
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  InstrumentActor                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UShantyInterface::RequestInstrumentStop(class AActor* InstrumentActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShantyInterface.RequestInstrumentStop"));}

	UShantyInterface_RequestInstrumentStop_Params params;
	params.InstrumentActor = InstrumentActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShantyInterface.RequestInstrumentPlay
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  InstrumentActor                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TScriptInterface<class UPlayerEntitlementViewInterface> EntitlementInterface           (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UShantyInterface::RequestInstrumentPlay(class AActor* InstrumentActor, const TScriptInterface<class UPlayerEntitlementViewInterface>& EntitlementInterface)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShantyInterface.RequestInstrumentPlay"));}

	UShantyInterface_RequestInstrumentPlay_Params params;
	params.InstrumentActor = InstrumentActor;
	params.EntitlementInterface = EntitlementInterface;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShantyInterface.GetNumberOfShantiesPlaying
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UShantyInterface::GetNumberOfShantiesPlaying()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShantyInterface.GetNumberOfShantiesPlaying"));}

	UShantyInterface_GetNumberOfShantiesPlaying_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShantyInterface.GetNumberOfInstrumentsPlayingOnEnsemble
// (FUNC_BlueprintCosmetic, FUNC_Private)
// Parameters:
// int                            EnsembleIndex                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UShantyInterface::GetNumberOfInstrumentsPlayingOnEnsemble(int EnsembleIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShantyInterface.GetNumberOfInstrumentsPlayingOnEnsemble"));}

	UShantyInterface_GetNumberOfInstrumentsPlayingOnEnsemble_Params params;
	params.EnsembleIndex = EnsembleIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SharkPawn.SetAIStrategy
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  InStrategy                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ASharkPawn::SetAIStrategy(class UClass* InStrategy)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SharkPawn.SetAIStrategy"));}

	ASharkPawn_SetAIStrategy_Params params;
	params.InStrategy = InStrategy;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SharkPawn.OnRep_CurrentAIStrategy
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  OldAIStrategy                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ASharkPawn::OnRep_CurrentAIStrategy(class UClass* OldAIStrategy)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SharkPawn.OnRep_CurrentAIStrategy"));}

	ASharkPawn_OnRep_CurrentAIStrategy_Params params;
	params.OldAIStrategy = OldAIStrategy;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SharkPawn.Multicast_PlayMontageRPC
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            AnimIndex                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           PlayAsDynamicMontage           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ASharkPawn::Multicast_PlayMontageRPC(int AnimIndex, bool PlayAsDynamicMontage)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SharkPawn.Multicast_PlayMontageRPC"));}

	ASharkPawn_Multicast_PlayMontageRPC_Params params;
	params.AnimIndex = AnimIndex;
	params.PlayAsDynamicMontage = PlayAsDynamicMontage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SharkPawn.Multicast_DespawnRPC
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ASharkPawn::Multicast_DespawnRPC()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SharkPawn.Multicast_DespawnRPC"));}

	ASharkPawn_Multicast_DespawnRPC_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SharkPawn.IsDoingQuickDeath
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ASharkPawn::IsDoingQuickDeath()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SharkPawn.IsDoingQuickDeath"));}

	ASharkPawn_IsDoingQuickDeath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SharkPawn.GetIndexForMontage
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UObject*                 Montage                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int ASharkPawn::GetIndexForMontage(class UObject* Montage)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SharkPawn.GetIndexForMontage"));}

	ASharkPawn_GetIndexForMontage_Params params;
	params.Montage = Montage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SharkPawn.GetCreatureDistanceFromWaterHeight
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ASharkPawn::GetCreatureDistanceFromWaterHeight()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SharkPawn.GetCreatureDistanceFromWaterHeight"));}

	ASharkPawn_GetCreatureDistanceFromWaterHeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SharkPawn.GetAIStrategy
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UClass*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UClass* ASharkPawn::GetAIStrategy()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SharkPawn.GetAIStrategy"));}

	ASharkPawn_GetAIStrategy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.TeleportLocationInterface.GetTeleportLocationForCharacter
// (FUNC_Protected)
// Parameters:
// class AAthenaCharacter*        Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FTeleportLocation       ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FTeleportLocation UTeleportLocationInterface::GetTeleportLocationForCharacter(class AAthenaCharacter* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TeleportLocationInterface.GetTeleportLocationForCharacter"));}

	UTeleportLocationInterface_GetTeleportLocationForCharacter_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.TeleportLocationInterface.GetAllTeleportLocationsForCharacter
// (FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AAthenaCharacter*        Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<struct FTeleportLocation> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<struct FTeleportLocation> UTeleportLocationInterface::GetAllTeleportLocationsForCharacter(class AAthenaCharacter* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TeleportLocationInterface.GetAllTeleportLocationsForCharacter"));}

	UTeleportLocationInterface_GetAllTeleportLocationsForCharacter_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SurfaceWaterComponent.SetSimulationActive
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           IsActive                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void USurfaceWaterComponent::SetSimulationActive(bool IsActive)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SurfaceWaterComponent.SetSimulationActive"));}

	USurfaceWaterComponent_SetSimulationActive_Params params;
	params.IsActive = IsActive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SurfaceWaterComponent.OnRep_AddWater
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void USurfaceWaterComponent::OnRep_AddWater()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SurfaceWaterComponent.OnRep_AddWater"));}

	USurfaceWaterComponent_OnRep_AddWater_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SurfaceWaterComponent.GetWaterTexture
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UTexture*                ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UTexture* USurfaceWaterComponent::GetWaterTexture()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SurfaceWaterComponent.GetWaterTexture"));}

	USurfaceWaterComponent_GetWaterTexture_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SurfaceWaterComponent.GetNormalTexture
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UTexture*                ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UTexture* USurfaceWaterComponent::GetNormalTexture()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SurfaceWaterComponent.GetNormalTexture"));}

	USurfaceWaterComponent_GetNormalTexture_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SurfaceWaterComponent.ConvertToWaterSpace
// (FUNC_BlueprintCosmetic, FUNC_Private, FUNC_Protected)
// Parameters:
// struct FVector                 WorldSpacePosition             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector USurfaceWaterComponent::ConvertToWaterSpace(const struct FVector& WorldSpacePosition)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SurfaceWaterComponent.ConvertToWaterSpace"));}

	USurfaceWaterComponent_ConvertToWaterSpace_Params params;
	params.WorldSpacePosition = WorldSpacePosition;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SurfaceWaterComponent.ClearWaterTexture
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FLinearColor            ClearColor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void USurfaceWaterComponent::ClearWaterTexture(const struct FLinearColor& ClearColor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SurfaceWaterComponent.ClearWaterTexture"));}

	USurfaceWaterComponent_ClearWaterTexture_Params params;
	params.ClearColor = ClearColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SurfaceWaterComponent.AddWater
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVector                 Position                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Radius                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Strength                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           CheckBounds                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void USurfaceWaterComponent::AddWater(const struct FVector& Position, float Radius, float Strength, bool CheckBounds)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SurfaceWaterComponent.AddWater"));}

	USurfaceWaterComponent_AddWater_Params params;
	params.Position = Position;
	params.Radius = Radius;
	params.Strength = Strength;
	params.CheckBounds = CheckBounds;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Ship.ToggleShipWaterReflections
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           EnableReflections              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AShip::ToggleShipWaterReflections(bool EnableReflections)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.ToggleShipWaterReflections"));}

	AShip_ToggleShipWaterReflections_Params params;
	params.EnableReflections = EnableReflections;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Ship.SetVelocity
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVector                 Velocity                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AShip::SetVelocity(const struct FVector& Velocity)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.SetVelocity"));}

	AShip_SetVelocity_Params params;
	params.Velocity = Velocity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Ship.SetDebugKeelOverSpeedScalar
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Scalar                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AShip::SetDebugKeelOverSpeedScalar(float Scalar)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.SetDebugKeelOverSpeedScalar"));}

	AShip_SetDebugKeelOverSpeedScalar_Params params;
	params.Scalar = Scalar;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Ship.Replenish
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AShip::Replenish()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.Replenish"));}

	AShip_Replenish_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Ship.ReduceWaterOcclusionZone
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          ReduceWaterOcclusionZoneTime   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AShip::ReduceWaterOcclusionZone(float ReduceWaterOcclusionZoneTime)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.ReduceWaterOcclusionZone"));}

	AShip_ReduceWaterOcclusionZone_Params params;
	params.ReduceWaterOcclusionZoneTime = ReduceWaterOcclusionZoneTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Ship.OnShipPartUnregistered
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FName                   PartName                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// class AActor*                  PartActor                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AShip::OnShipPartUnregistered(const struct FName& PartName, class AActor* PartActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.OnShipPartUnregistered"));}

	AShip_OnShipPartUnregistered_Params params;
	params.PartName = PartName;
	params.PartActor = PartActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Ship.OnShipPartRegistered
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FName                   PartName                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// class AActor*                  PartActor                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AShip::OnShipPartRegistered(const struct FName& PartName, class AActor* PartActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.OnShipPartRegistered"));}

	AShip_OnShipPartRegistered_Params params;
	params.PartName = PartName;
	params.PartActor = PartActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Ship.OnRep_CrewShipManifest
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AShip::OnRep_CrewShipManifest()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.OnRep_CrewShipManifest"));}

	AShip_OnRep_CrewShipManifest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Ship.OnOverlapEnd
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AShip::OnOverlapEnd(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.OnOverlapEnd"));}

	AShip_OnOverlapEnd_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Ship.OnOverlapBegin
// (FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           FromSweep                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FHitResult              SweepResult                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void AShip::OnOverlapBegin(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool FromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.OnOverlapBegin"));}

	AShip_OnOverlapBegin_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.FromSweep = FromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Ship.Multicast_DisableAllShipInteractables
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AShip::Multicast_DisableAllShipInteractables()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.Multicast_DisableAllShipInteractables"));}

	AShip_Multicast_DisableAllShipInteractables_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Ship.IsWorldSpacePositionBelowTopDeckPlane
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Private, FUNC_Protected)
// Parameters:
// struct FVector                 Position                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AShip::IsWorldSpacePositionBelowTopDeckPlane(const struct FVector& Position)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.IsWorldSpacePositionBelowTopDeckPlane"));}

	AShip_IsWorldSpacePositionBelowTopDeckPlane_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Ship.IsWorldSpacePositionBelowMidDeckPlane
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Private, FUNC_Protected)
// Parameters:
// struct FVector                 Position                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AShip::IsWorldSpacePositionBelowMidDeckPlane(const struct FVector& Position)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.IsWorldSpacePositionBelowMidDeckPlane"));}

	AShip_IsWorldSpacePositionBelowMidDeckPlane_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Ship.IsOcclusionZoneFullyReduced
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AShip::IsOcclusionZoneFullyReduced()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.IsOcclusionZoneFullyReduced"));}

	AShip_IsOcclusionZoneFullyReduced_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Ship.GetShipLocatorPositionChecked
// (FUNC_Private)
// Parameters:
// TEnumAsByte<EShipLocation>     LocatorID                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector AShip::GetShipLocatorPositionChecked(TEnumAsByte<EShipLocation> LocatorID)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.GetShipLocatorPositionChecked"));}

	AShip_GetShipLocatorPositionChecked_Params params;
	params.LocatorID = LocatorID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Ship.GetShipLocatorPosition
// (FUNC_Final, FUNC_Delegate)
// Parameters:
// TEnumAsByte<EShipLocation>     LocatorName                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 LocatorPosition                (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AShip::GetShipLocatorPosition(TEnumAsByte<EShipLocation> LocatorName, struct FVector* LocatorPosition)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.GetShipLocatorPosition"));}

	AShip_GetShipLocatorPosition_Params params;
	params.LocatorName = LocatorName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (LocatorPosition != nullptr)
		*LocatorPosition = params.LocatorPosition;

	return params.ReturnValue;
}


// Function Athena.Ship.GetSampledSpeed
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector AShip::GetSampledSpeed()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.GetSampledSpeed"));}

	AShip_GetSampledSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Ship.GetInternalWater
// (FUNC_BlueprintCosmetic)
// Parameters:
// class AShipInternalWater*      ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AShipInternalWater* AShip::GetInternalWater()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.GetInternalWater"));}

	AShip_GetInternalWater_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Ship.GetHullSubmersedPercentage
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float AShip::GetHullSubmersedPercentage()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.GetHullSubmersedPercentage"));}

	AShip_GetHullSubmersedPercentage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Ship.GetHasShipEverSetSail
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AShip::GetHasShipEverSetSail()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.GetHasShipEverSetSail"));}

	AShip_GetHasShipEverSetSail_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Ship.GetEmpiricalMaxShipSpeedInMPS
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float AShip::GetEmpiricalMaxShipSpeedInMPS()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.GetEmpiricalMaxShipSpeedInMPS"));}

	AShip_GetEmpiricalMaxShipSpeedInMPS_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Ship.GetDeckSurfaceWater
// (FUNC_BlueprintCosmetic)
// Parameters:
// class USurfaceWaterComponent*  ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData)

class USurfaceWaterComponent* AShip::GetDeckSurfaceWater()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.GetDeckSurfaceWater"));}

	AShip_GetDeckSurfaceWater_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Ship.GetCurrentVelocity
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic)
// Parameters:
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector AShip::GetCurrentVelocity()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.GetCurrentVelocity"));}

	AShip_GetCurrentVelocity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Ship.EnableCalmWaterBobbing
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           bEnable                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AShip::EnableCalmWaterBobbing(bool bEnable)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.EnableCalmWaterBobbing"));}

	AShip_EnableCalmWaterBobbing_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Ship.Deplete
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AShip::Deplete()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.Deplete"));}

	AShip_Deplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Ship.CanBeReplenished
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AShip::CanBeReplenished()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.CanBeReplenished"));}

	AShip_CanBeReplenished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Ship.AreShipInteractablesDisabled
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AShip::AreShipInteractablesDisabled()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Ship.AreShipInteractablesDisabled"));}

	AShip_AreShipInteractablesDisabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipCustomizationLoadoutControlInterface.UnequipShipCustomization
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  InDesc                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UShipCustomizationLoadoutControlInterface::UnequipShipCustomization(class UClass* InDesc)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipCustomizationLoadoutControlInterface.UnequipShipCustomization"));}

	UShipCustomizationLoadoutControlInterface_UnequipShipCustomization_Params params;
	params.InDesc = InDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipCustomizationLoadoutControlInterface.SetShipCustomizationLoadout
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FShipCustomizationLoadout InLoadout                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UShipCustomizationLoadoutControlInterface::SetShipCustomizationLoadout(const struct FShipCustomizationLoadout& InLoadout)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipCustomizationLoadoutControlInterface.SetShipCustomizationLoadout"));}

	UShipCustomizationLoadoutControlInterface_SetShipCustomizationLoadout_Params params;
	params.InLoadout = InLoadout;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipCustomizationLoadoutControlInterface.SetInitialShipCustomizations
// (FUNC_Final, FUNC_Delegate)
// Parameters:
// TArray<class UClass*>          InInitialCustomizations        (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UShipCustomizationLoadoutControlInterface::SetInitialShipCustomizations(TArray<class UClass*> InInitialCustomizations)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipCustomizationLoadoutControlInterface.SetInitialShipCustomizations"));}

	UShipCustomizationLoadoutControlInterface_SetInitialShipCustomizations_Params params;
	params.InInitialCustomizations = InInitialCustomizations;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipCustomizationLoadoutControlInterface.EquipShipCustomization
// (FUNC_Final, FUNC_Delegate)
// Parameters:
// class UClass*                  InDesc                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  InInstigator                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UShipCustomizationLoadoutControlInterface::EquipShipCustomization(class UClass* InDesc, class AActor* InInstigator)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipCustomizationLoadoutControlInterface.EquipShipCustomization"));}

	UShipCustomizationLoadoutControlInterface_EquipShipCustomization_Params params;
	params.InDesc = InDesc;
	params.InInstigator = InInstigator;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipCustomizationLoadoutViewInterface.GetShipCustomizationLoadout
// (FUNC_BlueprintCosmetic)
// Parameters:
// struct FShipCustomizationLoadout ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReturnParm, CPF_ReferenceParm)

struct FShipCustomizationLoadout UShipCustomizationLoadoutViewInterface::GetShipCustomizationLoadout()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipCustomizationLoadoutViewInterface.GetShipCustomizationLoadout"));}

	UShipCustomizationLoadoutViewInterface_GetShipCustomizationLoadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipCustomizationLoadoutViewInterface.GetInitialShipCustomizations
// ()
// Parameters:
// TArray<class UClass*>          ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm)

TArray<class UClass*> UShipCustomizationLoadoutViewInterface::GetInitialShipCustomizations()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipCustomizationLoadoutViewInterface.GetInitialShipCustomizations"));}

	UShipCustomizationLoadoutViewInterface_GetInitialShipCustomizations_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipCustomizationLoadoutViewInterface.GetActivePartCustomizations
// ()
// Parameters:
// TArray<struct FPartDesc>       ReturnValue                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_ReferenceParm)

TArray<struct FPartDesc> UShipCustomizationLoadoutViewInterface::GetActivePartCustomizations()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipCustomizationLoadoutViewInterface.GetActivePartCustomizations"));}

	UShipCustomizationLoadoutViewInterface_GetActivePartCustomizations_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipCustomizationLoadoutComponent.OnRep_Loadout
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UShipCustomizationLoadoutComponent::OnRep_Loadout()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipCustomizationLoadoutComponent.OnRep_Loadout"));}

	UShipCustomizationLoadoutComponent_OnRep_Loadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipDescConversionFunctions.ShipDescToJson
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Net, FUNC_Protected, FUNC_Delegate, FUNC_HasOutParms)
// Parameters:
// struct FShipDesc               ShipDesc                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// struct FString                 JsonString                     (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UShipDescConversionFunctions::ShipDescToJson(const struct FShipDesc& ShipDesc, struct FString* JsonString)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipDescConversionFunctions.ShipDescToJson"));}

	UShipDescConversionFunctions_ShipDescToJson_Params params;
	params.ShipDesc = ShipDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (JsonString != nullptr)
		*JsonString = params.JsonString;

	return params.ReturnValue;
}


// Function Athena.ShipDescConversionFunctions.ShipDescFromJson
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Net, FUNC_Protected, FUNC_Delegate, FUNC_HasOutParms)
// Parameters:
// struct FString                 JsonString                     (CPF_Parm, CPF_ZeroConstructor)
// struct FShipDesc               ShipDesc                       (CPF_Parm, CPF_OutParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UShipDescConversionFunctions::ShipDescFromJson(const struct FString& JsonString, struct FShipDesc* ShipDesc)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipDescConversionFunctions.ShipDescFromJson"));}

	UShipDescConversionFunctions_ShipDescFromJson_Params params;
	params.JsonString = JsonString;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ShipDesc != nullptr)
		*ShipDesc = params.ShipDesc;

	return params.ReturnValue;
}


// Function Athena.ShipDescGeneratorTestFunctionLibrary.GenerateShipDescForTestLargeShip
// (FUNC_BlueprintCosmetic, FUNC_Net)
// Parameters:
// struct FShipDesc               ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FShipDesc UShipDescGeneratorTestFunctionLibrary::GenerateShipDescForTestLargeShip()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipDescGeneratorTestFunctionLibrary.GenerateShipDescForTestLargeShip"));}

	UShipDescGeneratorTestFunctionLibrary_GenerateShipDescForTestLargeShip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipFactory.SpawnSyncWithDatabase
// (FUNC_NetReliable, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FShipDesc               Desc                           (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// TScriptInterface<class UShipAssetClassDatabaseInterface> ShipAssetClassDatabaseInterface (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 Position                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FRotator                Rotation                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* UShipFactory::SpawnSyncWithDatabase(class UObject* WorldContextObject, const struct FShipDesc& Desc, const TScriptInterface<class UShipAssetClassDatabaseInterface>& ShipAssetClassDatabaseInterface, const struct FVector& Position, const struct FRotator& Rotation)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipFactory.SpawnSyncWithDatabase"));}

	UShipFactory_SpawnSyncWithDatabase_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Desc = Desc;
	params.ShipAssetClassDatabaseInterface = ShipAssetClassDatabaseInterface;
	params.Position = Position;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipFactory.SpawnSync
// (FUNC_Net, FUNC_Protected, FUNC_NetServer, FUNC_HasOutParms)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FShipDesc               Desc                           (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// struct FVector                 Position                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FRotator                Rotation                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* UShipFactory::SpawnSync(class UObject* WorldContextObject, const struct FShipDesc& Desc, const struct FVector& Position, const struct FRotator& Rotation)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipFactory.SpawnSync"));}

	UShipFactory_SpawnSync_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Desc = Desc;
	params.Position = Position;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipFactory.MakeShipFactory
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UShipFactory*            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UShipFactory* UShipFactory::MakeShipFactory()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipFactory.MakeShipFactory"));}

	UShipFactory_MakeShipFactory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipFactorySpawnCallbackCounter.OnSuccess
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  InActor                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UShipFactorySpawnCallbackCounter::OnSuccess(class AActor* InActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipFactorySpawnCallbackCounter.OnSuccess"));}

	UShipFactorySpawnCallbackCounter_OnSuccess_Params params;
	params.InActor = InActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipFactorySpawnCallbackCounter.OnFailure
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UShipFactorySpawnCallbackCounter::OnFailure()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipFactorySpawnCallbackCounter.OnFailure"));}

	UShipFactorySpawnCallbackCounter_OnFailure_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipFunctionLibrary.SpawnShip
// (FUNC_Protected, FUNC_Delegate)
// Parameters:
// struct FVector                 Pos                            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FRotator                Rotation                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* UShipFunctionLibrary::SpawnShip(const struct FVector& Pos, const struct FRotator& Rotation)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipFunctionLibrary.SpawnShip"));}

	UShipFunctionLibrary_SpawnShip_Params params;
	params.Pos = Pos;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipFunctionLibrary.SpawnFunctioningSmallShipWithCrewId
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVector                 Pos                            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FRotator                Rotation                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FGuid                   CrewId                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UShipFunctionLibrary::SpawnFunctioningSmallShipWithCrewId(const struct FVector& Pos, const struct FRotator& Rotation, const struct FGuid& CrewId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipFunctionLibrary.SpawnFunctioningSmallShipWithCrewId"));}

	UShipFunctionLibrary_SpawnFunctioningSmallShipWithCrewId_Params params;
	params.Pos = Pos;
	params.Rotation = Rotation;
	params.CrewId = CrewId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipFunctionLibrary.SpawnFunctioningSmallShip
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVector                 Pos                            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FRotator                Rotation                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UShipFunctionLibrary::SpawnFunctioningSmallShip(const struct FVector& Pos, const struct FRotator& Rotation)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipFunctionLibrary.SpawnFunctioningSmallShip"));}

	UShipFunctionLibrary_SpawnFunctioningSmallShip_Params params;
	params.Pos = Pos;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipFunctionLibrary.SpawnFunctioningLargeShip
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVector                 Pos                            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FRotator                Rotation                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UShipFunctionLibrary::SpawnFunctioningLargeShip(const struct FVector& Pos, const struct FRotator& Rotation)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipFunctionLibrary.SpawnFunctioningLargeShip"));}

	UShipFunctionLibrary_SpawnFunctioningLargeShip_Params params;
	params.Pos = Pos;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipFunctionLibrary.GetWheels
// (FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  Actor                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<class AWheel*>          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class AWheel*> UShipFunctionLibrary::GetWheels(class AActor* Actor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipFunctionLibrary.GetWheels"));}

	UShipFunctionLibrary_GetWheels_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipFunctionLibrary.GetSailHoists
// (FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  Actor                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<class ASailHoist*>      ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class ASailHoist*> UShipFunctionLibrary::GetSailHoists(class AActor* Actor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipFunctionLibrary.GetSailHoists"));}

	UShipFunctionLibrary_GetSailHoists_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipFunctionLibrary.GetSailAnglers
// (FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  Actor                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<class ASailAngle*>      ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class ASailAngle*> UShipFunctionLibrary::GetSailAnglers(class AActor* Actor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipFunctionLibrary.GetSailAnglers"));}

	UShipFunctionLibrary_GetSailAnglers_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipFunctionLibrary.GetLadders
// (FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  Actor                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<class ALadder*>         ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class ALadder*> UShipFunctionLibrary::GetLadders(class AActor* Actor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipFunctionLibrary.GetLadders"));}

	UShipFunctionLibrary_GetLadders_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipFunctionLibrary.GetInteractablesOfClass
// (FUNC_Delegate)
// Parameters:
// class AActor*                  Actor                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  Class                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<class AActor*>          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class AActor*> UShipFunctionLibrary::GetInteractablesOfClass(class AActor* Actor, class UClass* Class)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipFunctionLibrary.GetInteractablesOfClass"));}

	UShipFunctionLibrary_GetInteractablesOfClass_Params params;
	params.Actor = Actor;
	params.Class = Class;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipFunctionLibrary.GetInteractables
// (FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  Actor                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<class AActor*>          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class AActor*> UShipFunctionLibrary::GetInteractables(class AActor* Actor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipFunctionLibrary.GetInteractables"));}

	UShipFunctionLibrary_GetInteractables_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipFunctionLibrary.GetCannons
// (FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  Actor                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<class ACannon*>         ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class ACannon*> UShipFunctionLibrary::GetCannons(class AActor* Actor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipFunctionLibrary.GetCannons"));}

	UShipFunctionLibrary_GetCannons_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipHullCollisionComponent.StopShipImpactSfx_RPC
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UShipHullCollisionComponent::StopShipImpactSfx_RPC()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipHullCollisionComponent.StopShipImpactSfx_RPC"));}

	UShipHullCollisionComponent_StopShipImpactSfx_RPC_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipHullCollisionComponent.PlayShipImpactSfx_RPC
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UShipHullCollisionComponent::PlayShipImpactSfx_RPC()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipHullCollisionComponent.PlayShipImpactSfx_RPC"));}

	UShipHullCollisionComponent_PlayShipImpactSfx_RPC_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipHullCollisionComponent.IsWorldSpacePositionInsideHull
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Private, FUNC_Protected)
// Parameters:
// struct FVector                 Position                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UShipHullCollisionComponent::IsWorldSpacePositionInsideHull(const struct FVector& Position)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipHullCollisionComponent.IsWorldSpacePositionInsideHull"));}

	UShipHullCollisionComponent_IsWorldSpacePositionInsideHull_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipHullCollisionComponent.IsWorldSpacePositionInsideCabin
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Private, FUNC_Protected)
// Parameters:
// struct FVector                 Position                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UShipHullCollisionComponent::IsWorldSpacePositionInsideCabin(const struct FVector& Position)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipHullCollisionComponent.IsWorldSpacePositionInsideCabin"));}

	UShipHullCollisionComponent_IsWorldSpacePositionInsideCabin_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipHullCollisionComponent.GetIsShipInContactWithSolidHits
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UShipHullCollisionComponent::GetIsShipInContactWithSolidHits()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipHullCollisionComponent.GetIsShipInContactWithSolidHits"));}

	UShipHullCollisionComponent_GetIsShipInContactWithSolidHits_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipHullCollisionComponent.GetIsShipInContactWithLand
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UShipHullCollisionComponent::GetIsShipInContactWithLand()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipHullCollisionComponent.GetIsShipInContactWithLand"));}

	UShipHullCollisionComponent_GetIsShipInContactWithLand_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipPartCustomization.MakeSyncShipPartCustomization
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UShipPartCustomization*  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UShipPartCustomization* UShipPartCustomization::MakeSyncShipPartCustomization()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipPartCustomization.MakeSyncShipPartCustomization"));}

	UShipPartCustomization_MakeSyncShipPartCustomization_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipPartCustomization.MakeAsyncShipPartCustomization
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UShipPartCustomization*  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UShipPartCustomization* UShipPartCustomization::MakeAsyncShipPartCustomization()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipPartCustomization.MakeAsyncShipPartCustomization"));}

	UShipPartCustomization_MakeAsyncShipPartCustomization_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipPartCustomization.Customize
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AShip*                   InShip                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FPartDesc               PartDesc                       (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// struct FScriptDelegate         OnSuccessCallback              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm)
// struct FScriptDelegate         OnFailureCallback              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm)

void UShipPartCustomization::Customize(class AShip* InShip, const struct FPartDesc& PartDesc, const struct FScriptDelegate& OnSuccessCallback, const struct FScriptDelegate& OnFailureCallback)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipPartCustomization.Customize"));}

	UShipPartCustomization_Customize_Params params;
	params.InShip = InShip;
	params.PartDesc = PartDesc;
	params.OnSuccessCallback = OnSuccessCallback;
	params.OnFailureCallback = OnFailureCallback;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipPartCustomizationTestCallbacks.OnSuccess
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  InActor                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UShipPartCustomizationTestCallbacks::OnSuccess(class AActor* InActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipPartCustomizationTestCallbacks.OnSuccess"));}

	UShipPartCustomizationTestCallbacks_OnSuccess_Params params;
	params.InActor = InActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipPartCustomizationTestCallbacks.OnFailure
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EShipPartCustomizationErrorCode> InErrorCode                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UShipPartCustomizationTestCallbacks::OnFailure(TEnumAsByte<EShipPartCustomizationErrorCode> InErrorCode)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipPartCustomizationTestCallbacks.OnFailure"));}

	UShipPartCustomizationTestCallbacks_OnFailure_Params params;
	params.InErrorCode = InErrorCode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipPartCustomizationTestLibrary.ApplyCustomization
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected, FUNC_NetServer)
// Parameters:
// class UShipPartCustomizationComponent* CustomizationComponent         (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// struct FPartDesc               InPartDesc                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UShipPartCustomizationTestLibrary::ApplyCustomization(class UShipPartCustomizationComponent* CustomizationComponent, const struct FPartDesc& InPartDesc)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipPartCustomizationTestLibrary.ApplyCustomization"));}

	UShipPartCustomizationTestLibrary_ApplyCustomization_Params params;
	params.CustomizationComponent = CustomizationComponent;
	params.InPartDesc = InPartDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipService.IsWorldPosInsideHull
// (FUNC_BlueprintCosmetic, FUNC_Delegate)
// Parameters:
// struct FVector                 Pos                            (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// class AShip*                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AShip* AShipService::IsWorldPosInsideHull(const struct FVector& Pos)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipService.IsWorldPosInsideHull"));}

	AShipService_IsWorldPosInsideHull_Params params;
	params.Pos = Pos;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipService.IsWorldPosInsideCabin
// (FUNC_BlueprintCosmetic, FUNC_Delegate)
// Parameters:
// struct FVector                 Pos                            (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// class AShip*                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AShip* AShipService::IsWorldPosInsideCabin(const struct FVector& Pos)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipService.IsWorldPosInsideCabin"));}

	AShipService_IsWorldPosInsideCabin_Params params;
	params.Pos = Pos;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipStuckDetectionComponent.GetDoesShipAppearCurrentlyStuck
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UShipStuckDetectionComponent::GetDoesShipAppearCurrentlyStuck()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipStuckDetectionComponent.GetDoesShipAppearCurrentlyStuck"));}

	UShipStuckDetectionComponent_GetDoesShipAppearCurrentlyStuck_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipTelemetryComponent.SetShipHeartbeatInterval
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Interval                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UShipTelemetryComponent::SetShipHeartbeatInterval(float Interval)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipTelemetryComponent.SetShipHeartbeatInterval"));}

	UShipTelemetryComponent_SetShipHeartbeatInterval_Params params;
	params.Interval = Interval;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipTelemetryComponent.GetShipIdForWebServices
// ()
// Parameters:
// struct FGuid                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FGuid UShipTelemetryComponent::GetShipIdForWebServices()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipTelemetryComponent.GetShipIdForWebServices"));}

	UShipTelemetryComponent_GetShipIdForWebServices_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipTrackerComponent.IsPlayerAbandoned
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UShipTrackerComponent::IsPlayerAbandoned()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipTrackerComponent.IsPlayerAbandoned"));}

	UShipTrackerComponent_IsPlayerAbandoned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Shipwreck.OnOverlapEnd
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Other                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AShipwreck::OnOverlapEnd(class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Shipwreck.OnOverlapEnd"));}

	AShipwreck_OnOverlapEnd_Params params;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Shipwreck.OnOverlapBegin
// (FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Other                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bFromSweep                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FHitResult              OverlapInfo                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void AShipwreck::OnOverlapBegin(class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Shipwreck.OnOverlapBegin"));}

	AShipwreck_OnOverlapBegin_Params params;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.OverlapInfo = OverlapInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipwreckSiteGeneratorSimulator.SetIslands
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AShipwreckSiteGeneratorSimulator::SetIslands()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipwreckSiteGeneratorSimulator.SetIslands"));}

	AShipwreckSiteGeneratorSimulator_SetIslands_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipwreckSiteGeneratorSimulator.ResetShipwrecks
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AShipwreckSiteGeneratorSimulator::ResetShipwrecks()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipwreckSiteGeneratorSimulator.ResetShipwrecks"));}

	AShipwreckSiteGeneratorSimulator_ResetShipwrecks_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipwreckSiteGeneratorSimulator.ResetDebugDrawing
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AShipwreckSiteGeneratorSimulator::ResetDebugDrawing()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipwreckSiteGeneratorSimulator.ResetDebugDrawing"));}

	AShipwreckSiteGeneratorSimulator_ResetDebugDrawing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.ShipwreckSiteGeneratorSimulator.GetIslands
// ()
// Parameters:
// TArray<struct FIsland>         ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<struct FIsland> AShipwreckSiteGeneratorSimulator::GetIslands()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipwreckSiteGeneratorSimulator.GetIslands"));}

	AShipwreckSiteGeneratorSimulator_GetIslands_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.ShipwreckSiteGeneratorSimulator.GenerateWreck
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AShipwreckSiteGeneratorSimulator::GenerateWreck()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.ShipwreckSiteGeneratorSimulator.GenerateWreck"));}

	AShipwreckSiteGeneratorSimulator_GenerateWreck_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SinkingComponent.SinkShip
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void USinkingComponent::SinkShip()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SinkingComponent.SinkShip"));}

	USinkingComponent_SinkShip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SinkingComponent.SetSinkingParams
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FSinkingShipParams      Params                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void USinkingComponent::SetSinkingParams(const struct FSinkingShipParams& Params)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SinkingComponent.SetSinkingParams"));}

	USinkingComponent_SetSinkingParams_Params params;
	params.Params = Params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SinkingComponent.SetDebugKeelOverConfigIndexOverride
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            Index                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void USinkingComponent::SetDebugKeelOverConfigIndexOverride(int Index)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SinkingComponent.SetDebugKeelOverConfigIndexOverride"));}

	USinkingComponent_SetDebugKeelOverConfigIndexOverride_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SinkingComponent.OnRep_ShipState
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// unsigned char                  PreviousState                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void USinkingComponent::OnRep_ShipState(unsigned char PreviousState)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SinkingComponent.OnRep_ShipState"));}

	USinkingComponent_OnRep_ShipState_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SinkingComponent.IsSinking
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool USinkingComponent::IsSinking()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SinkingComponent.IsSinking"));}

	USinkingComponent_IsSinking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SinkingComponent.IsKeeledOver
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool USinkingComponent::IsKeeledOver()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SinkingComponent.IsKeeledOver"));}

	USinkingComponent_IsKeeledOver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SinkingComponent.IsDeepEnoughInWaterToSink
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool USinkingComponent::IsDeepEnoughInWaterToSink()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SinkingComponent.IsDeepEnoughInWaterToSink"));}

	USinkingComponent_IsDeepEnoughInWaterToSink_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SinkingComponent.GetSinkingParams
// (FUNC_BlueprintCosmetic)
// Parameters:
// struct FSinkingShipParams      ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FSinkingShipParams USinkingComponent::GetSinkingParams()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SinkingComponent.GetSinkingParams"));}

	USinkingComponent_GetSinkingParams_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SinkingComponent.GetShipState
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EShipState>        ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EShipState> USinkingComponent::GetShipState()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SinkingComponent.GetShipState"));}

	USinkingComponent_GetShipState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SinkingComponent.ForceSinkShip
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void USinkingComponent::ForceSinkShip()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SinkingComponent.ForceSinkShip"));}

	USinkingComponent_ForceSinkShip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SinkingComponent.BeginningToSinkRPC
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void USinkingComponent::BeginningToSinkRPC()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SinkingComponent.BeginningToSinkRPC"));}

	USinkingComponent_BeginningToSinkRPC_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SkellyFort.Multicast_OnWaveGroupSpawned
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FBountySpawnerNewWaveGroupSpawnedEvent Ev                             (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm)
// class UWwiseEvent*             AudioEvent                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ASkellyFort::Multicast_OnWaveGroupSpawned(const struct FBountySpawnerNewWaveGroupSpawnedEvent& Ev, class UWwiseEvent* AudioEvent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SkellyFort.Multicast_OnWaveGroupSpawned"));}

	ASkellyFort_Multicast_OnWaveGroupSpawned_Params params;
	params.Ev = Ev;
	params.AudioEvent = AudioEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SkellyFort.Multicast_OnFortComplete
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVector                 DeathLocation                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// class UWwiseEvent*             AudioEvent                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ASkellyFort::Multicast_OnFortComplete(const struct FVector& DeathLocation, class UWwiseEvent* AudioEvent)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SkellyFort.Multicast_OnFortComplete"));}

	ASkellyFort_Multicast_OnFortComplete_Params params;
	params.DeathLocation = DeathLocation;
	params.AudioEvent = AudioEvent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.StaggerComponent.SetStaggerStrength
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          UnaryStrength                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UStaggerComponent::SetStaggerStrength(float UnaryStrength)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.StaggerComponent.SetStaggerStrength"));}

	UStaggerComponent_SetStaggerStrength_Params params;
	params.UnaryStrength = UnaryStrength;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.StatusEffectComponentProviderInterface.GetStatusEffectComponent
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UStatusEffectComponent*  ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData)

class UStatusEffectComponent* UStatusEffectComponentProviderInterface::GetStatusEffectComponent()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.StatusEffectComponentProviderInterface.GetStatusEffectComponent"));}

	UStatusEffectComponentProviderInterface_GetStatusEffectComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.StatusEffectComponent.OnRep_StatusEffect
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UStatusEffectComponent::OnRep_StatusEffect()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.StatusEffectComponent.OnRep_StatusEffect"));}

	UStatusEffectComponent_OnRep_StatusEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.StorageContainerComponent.OnRep_ItemCount
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            InOldItemCount                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UStorageContainerComponent::OnRep_ItemCount(int InOldItemCount)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.StorageContainerComponent.OnRep_ItemCount"));}

	UStorageContainerComponent_OnRep_ItemCount_Params params;
	params.InOldItemCount = InOldItemCount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Storm.Multicast_QueueLightning
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FLightningImpact        LightningImpact                (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm)

void AStorm::Multicast_QueueLightning(const struct FLightningImpact& LightningImpact)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Storm.Multicast_QueueLightning"));}

	AStorm_Multicast_QueueLightning_Params params;
	params.LightningImpact = LightningImpact;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.StunnedActionStateId.PushCharacterIntoStunnedActionState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaCharacter*        Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FStunnedActionStateParams Params                         (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UStunnedActionStateId::PushCharacterIntoStunnedActionState(class AAthenaCharacter* Character, const struct FStunnedActionStateParams& Params)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.StunnedActionStateId.PushCharacterIntoStunnedActionState"));}

	UStunnedActionStateId_PushCharacterIntoStunnedActionState_Params params;
	params.Character = Character;
	params.Params = Params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SwallowedByKrakenActionStateId.PushCharacterIntoSwallowedByKrakenActionState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AKrakenAnimatedTentacle* Tentacle                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void USwallowedByKrakenActionStateId::PushCharacterIntoSwallowedByKrakenActionState(class AActor* Character, class AKrakenAnimatedTentacle* Tentacle)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SwallowedByKrakenActionStateId.PushCharacterIntoSwallowedByKrakenActionState"));}

	USwallowedByKrakenActionStateId_PushCharacterIntoSwallowedByKrakenActionState_Params params;
	params.Character = Character;
	params.Tentacle = Tentacle;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SwallowedByKrakenActionStateId.PopCharacterOutOfSwallowedByKrakenActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void USwallowedByKrakenActionStateId::PopCharacterOutOfSwallowedByKrakenActionState(class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SwallowedByKrakenActionStateId.PopCharacterOutOfSwallowedByKrakenActionState"));}

	USwallowedByKrakenActionStateId_PopCharacterOutOfSwallowedByKrakenActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SwimmingCreatureAnimationInstance.RunningOnServer
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool USwimmingCreatureAnimationInstance::RunningOnServer()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SwimmingCreatureAnimationInstance.RunningOnServer"));}

	USwimmingCreatureAnimationInstance_RunningOnServer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SwimmingCreatureMovementComponent.SetSwimmingMode
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<ESwimmingMode>     InSwimmingMode                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void USwimmingCreatureMovementComponent::SetSwimmingMode(TEnumAsByte<ESwimmingMode> InSwimmingMode)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SwimmingCreatureMovementComponent.SetSwimmingMode"));}

	USwimmingCreatureMovementComponent_SetSwimmingMode_Params params;
	params.InSwimmingMode = InSwimmingMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SwimmingCreatureMovementComponent.OnRep_ReplicatedSwimmingMode
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void USwimmingCreatureMovementComponent::OnRep_ReplicatedSwimmingMode()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SwimmingCreatureMovementComponent.OnRep_ReplicatedSwimmingMode"));}

	USwimmingCreatureMovementComponent_OnRep_ReplicatedSwimmingMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SwimmingCreatureMovementComponent.OnHasSolidHit
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// struct FVector                 NormalImpulse                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FHitResult              Hit                            (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void USwimmingCreatureMovementComponent::OnHasSolidHit(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SwimmingCreatureMovementComponent.OnHasSolidHit"));}

	USwimmingCreatureMovementComponent_OnHasSolidHit_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SwimmingCreatureMovementComponent.Multicast_SetNewPathFollowingParamsRPC
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVector                 ServerGoalLocation             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// float                          ServerYawTurnRate              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          ServerMaxSpeed                 (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          ServerVelocitySmoothingFactor  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           IsServerCorrectionTurn         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void USwimmingCreatureMovementComponent::Multicast_SetNewPathFollowingParamsRPC(const struct FVector& ServerGoalLocation, float ServerYawTurnRate, float ServerMaxSpeed, float ServerVelocitySmoothingFactor, bool IsServerCorrectionTurn)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SwimmingCreatureMovementComponent.Multicast_SetNewPathFollowingParamsRPC"));}

	USwimmingCreatureMovementComponent_Multicast_SetNewPathFollowingParamsRPC_Params params;
	params.ServerGoalLocation = ServerGoalLocation;
	params.ServerYawTurnRate = ServerYawTurnRate;
	params.ServerMaxSpeed = ServerMaxSpeed;
	params.ServerVelocitySmoothingFactor = ServerVelocitySmoothingFactor;
	params.IsServerCorrectionTurn = IsServerCorrectionTurn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.SwimmingCreatureMovementComponent.GetSwimmingMode
// (FUNC_Final)
// Parameters:
// TEnumAsByte<ESwimmingMode>     ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<ESwimmingMode> USwimmingCreatureMovementComponent::GetSwimmingMode()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SwimmingCreatureMovementComponent.GetSwimmingMode"));}

	USwimmingCreatureMovementComponent_GetSwimmingMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SwimmingCreatureMovementComponent.GetMovementPropertiesForAIStrategy
// (FUNC_Protected)
// Parameters:
// class UClass*                  AIStrategy                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FSwimmingCreatureAIStrategyMovementProperties ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FSwimmingCreatureAIStrategyMovementProperties USwimmingCreatureMovementComponent::GetMovementPropertiesForAIStrategy(class UClass* AIStrategy)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SwimmingCreatureMovementComponent.GetMovementPropertiesForAIStrategy"));}

	USwimmingCreatureMovementComponent_GetMovementPropertiesForAIStrategy_Params params;
	params.AIStrategy = AIStrategy;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SwimmingCreatureMovementComponent.GetCurrentYawTurnRate
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float USwimmingCreatureMovementComponent::GetCurrentYawTurnRate()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SwimmingCreatureMovementComponent.GetCurrentYawTurnRate"));}

	USwimmingCreatureMovementComponent_GetCurrentYawTurnRate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SwimmingCreatureMovementComponent.GetCurrentVelocity
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float USwimmingCreatureMovementComponent::GetCurrentVelocity()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SwimmingCreatureMovementComponent.GetCurrentVelocity"));}

	USwimmingCreatureMovementComponent_GetCurrentVelocity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.SwimmingCreatureMovementComponent.GetComponentDistanceFromWaterHeight
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float USwimmingCreatureMovementComponent::GetComponentDistanceFromWaterHeight()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.SwimmingCreatureMovementComponent.GetComponentDistanceFromWaterHeight"));}

	USwimmingCreatureMovementComponent_GetComponentDistanceFromWaterHeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.TalkToNPCActionStateId.PushCharIntoActionState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UNPCDialogComponent*     NPCDialogComp                  (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UTalkToNPCActionStateId::PushCharIntoActionState(class UNPCDialogComponent* NPCDialogComp, class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TalkToNPCActionStateId.PushCharIntoActionState"));}

	UTalkToNPCActionStateId_PushCharIntoActionState_Params params;
	params.NPCDialogComp = NPCDialogComp;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TalkToNPCActionStateId.PopCharOutOfActionState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UNPCDialogComponent*     NPCDialogComp                  (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UTalkToNPCActionStateId::PopCharOutOfActionState(class UNPCDialogComponent* NPCDialogComp, class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TalkToNPCActionStateId.PopCharOutOfActionState"));}

	UTalkToNPCActionStateId_PopCharOutOfActionState_Params params;
	params.NPCDialogComp = NPCDialogComp;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TavernStepsTrigger.OnRep_StepsState
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EStepsTriggerState> LastState                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ATavernStepsTrigger::OnRep_StepsState(TEnumAsByte<EStepsTriggerState> LastState)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TavernStepsTrigger.OnRep_StepsState"));}

	ATavernStepsTrigger_OnRep_StepsState_Params params;
	params.LastState = LastState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TavernStepsTrigger.OnEndOverlapTavern
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ATavernStepsTrigger::OnEndOverlapTavern(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TavernStepsTrigger.OnEndOverlapTavern"));}

	ATavernStepsTrigger_OnEndOverlapTavern_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TavernStepsTrigger.OnEndOverlapStepsListener
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ATavernStepsTrigger::OnEndOverlapStepsListener(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TavernStepsTrigger.OnEndOverlapStepsListener"));}

	ATavernStepsTrigger_OnEndOverlapStepsListener_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TavernStepsTrigger.OnBeginOverlapTavern
// (FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bFromSweep                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FHitResult              SweepResult                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void ATavernStepsTrigger::OnBeginOverlapTavern(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TavernStepsTrigger.OnBeginOverlapTavern"));}

	ATavernStepsTrigger_OnBeginOverlapTavern_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TavernStepsTrigger.OnBeginOverlapStepsListener
// (FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  OtherActor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bFromSweep                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FHitResult              SweepResult                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void ATavernStepsTrigger::OnBeginOverlapStepsListener(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TavernStepsTrigger.OnBeginOverlapStepsListener"));}

	ATavernStepsTrigger_OnBeginOverlapStepsListener_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TavernStepsTrigger.Multicast_StartAnimatedStepsOpen
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ATavernStepsTrigger::Multicast_StartAnimatedStepsOpen()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TavernStepsTrigger.Multicast_StartAnimatedStepsOpen"));}

	ATavernStepsTrigger_Multicast_StartAnimatedStepsOpen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TeleportActionStateId.PushCharacterIntoTeleportActionStateWithCustomTeleportLocation
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FTeleportLocation       TeleportLocation               (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// TEnumAsByte<ETeleportActionStateFadeType> TeleportFadeType               (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<ETeleportActionStateConditions> TeleportConditions             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            StreamOutLevelId               (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            StreamInLevelId                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UTeleportActionStateId::PushCharacterIntoTeleportActionStateWithCustomTeleportLocation(class AActor* Character, const struct FTeleportLocation& TeleportLocation, TEnumAsByte<ETeleportActionStateFadeType> TeleportFadeType, TEnumAsByte<ETeleportActionStateConditions> TeleportConditions, int StreamOutLevelId, int StreamInLevelId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TeleportActionStateId.PushCharacterIntoTeleportActionStateWithCustomTeleportLocation"));}

	UTeleportActionStateId_PushCharacterIntoTeleportActionStateWithCustomTeleportLocation_Params params;
	params.Character = Character;
	params.TeleportLocation = TeleportLocation;
	params.TeleportFadeType = TeleportFadeType;
	params.TeleportConditions = TeleportConditions;
	params.StreamOutLevelId = StreamOutLevelId;
	params.StreamInLevelId = StreamInLevelId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TeleportActionStateId.PushCharacterIntoTeleportActionState
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<ETeleportActionStateFadeType> TeleportFadeType               (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<ETeleportActionStateConditions> TeleportConditions             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            StreamOutLevelId               (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            StreamInLevelId                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UTeleportActionStateId::PushCharacterIntoTeleportActionState(class AActor* Character, TEnumAsByte<ETeleportActionStateFadeType> TeleportFadeType, TEnumAsByte<ETeleportActionStateConditions> TeleportConditions, int StreamOutLevelId, int StreamInLevelId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TeleportActionStateId.PushCharacterIntoTeleportActionState"));}

	UTeleportActionStateId_PushCharacterIntoTeleportActionState_Params params;
	params.Character = Character;
	params.TeleportFadeType = TeleportFadeType;
	params.TeleportConditions = TeleportConditions;
	params.StreamOutLevelId = StreamOutLevelId;
	params.StreamInLevelId = StreamInLevelId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TeleportFunctions.GetTeleportLocationOnShip
// (FUNC_BlueprintCosmetic, FUNC_Delegate)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AShip*                   InShip                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FTeleportLocation       ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FTeleportLocation UTeleportFunctions::GetTeleportLocationOnShip(class AAthenaCharacter* InCharacter, class AShip* InShip)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TeleportFunctions.GetTeleportLocationOnShip"));}

	UTeleportFunctions_GetTeleportLocationOnShip_Params params;
	params.InCharacter = InCharacter;
	params.InShip = InShip;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.TeleportFunctions.GetTeleportLocationAroundTarget
// (FUNC_Net, FUNC_Protected, FUNC_Delegate)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  InTarget                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          InDistanceFromTarget           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FTeleportLocation       ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FTeleportLocation UTeleportFunctions::GetTeleportLocationAroundTarget(class AAthenaCharacter* InCharacter, class AActor* InTarget, float InDistanceFromTarget)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TeleportFunctions.GetTeleportLocationAroundTarget"));}

	UTeleportFunctions_GetTeleportLocationAroundTarget_Params params;
	params.InCharacter = InCharacter;
	params.InTarget = InTarget;
	params.InDistanceFromTarget = InDistanceFromTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.TeleportFunctions.GetNearestTeleportLocationOnLand
// (FUNC_Protected)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FTeleportLocation       ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FTeleportLocation UTeleportFunctions::GetNearestTeleportLocationOnLand(class AAthenaCharacter* InCharacter)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TeleportFunctions.GetNearestTeleportLocationOnLand"));}

	UTeleportFunctions_GetNearestTeleportLocationOnLand_Params params;
	params.InCharacter = InCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.TestControlObjectActionStateId.PushCharacterIntoTestControlObjectActionState
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EActionStateMachineTrackId> TrackId                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  ControlledObject               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          DockTime                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UTestControlObjectActionStateId::PushCharacterIntoTestControlObjectActionState(TEnumAsByte<EActionStateMachineTrackId> TrackId, class AActor* ControlledObject, class AActor* Character, float DockTime)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestControlObjectActionStateId.PushCharacterIntoTestControlObjectActionState"));}

	UTestControlObjectActionStateId_PushCharacterIntoTestControlObjectActionState_Params params;
	params.TrackId = TrackId;
	params.ControlledObject = ControlledObject;
	params.Character = Character;
	params.DockTime = DockTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestNetworkedEventsFunctionLibrary.FireTestEventToServer
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaPlayerController* PlayerController               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            TestEventData                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UTestNetworkedEventsFunctionLibrary::FireTestEventToServer(class AAthenaPlayerController* PlayerController, int TestEventData)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestNetworkedEventsFunctionLibrary.FireTestEventToServer"));}

	UTestNetworkedEventsFunctionLibrary_FireTestEventToServer_Params params;
	params.PlayerController = PlayerController;
	params.TestEventData = TestEventData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestNetworkedEventsFunctionLibrary.FireTestEventToClient
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaPlayerController* PlayerController               (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            TestEventData                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UTestNetworkedEventsFunctionLibrary::FireTestEventToClient(class AAthenaPlayerController* PlayerController, int TestEventData)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestNetworkedEventsFunctionLibrary.FireTestEventToClient"));}

	UTestNetworkedEventsFunctionLibrary_FireTestEventToClient_Params params;
	params.PlayerController = PlayerController;
	params.TestEventData = TestEventData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestQuestProxy.Stop
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ATestQuestProxy::Stop()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestQuestProxy.Stop"));}

	ATestQuestProxy_Stop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestQuestProxy.CreateXMarksTheSpotQuest
// (FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContext                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FXMarksTheSpotQuestDesc QuestDesc                      (CPF_Parm)

void ATestQuestProxy::CreateXMarksTheSpotQuest(class UObject* WorldContext, const struct FXMarksTheSpotQuestDesc& QuestDesc)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestQuestProxy.CreateXMarksTheSpotQuest"));}

	ATestQuestProxy_CreateXMarksTheSpotQuest_Params params;
	params.WorldContext = WorldContext;
	params.QuestDesc = QuestDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestQuestProxy.AddParticipant
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaPlayerCharacter*  Participant                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ATestQuestProxy::AddParticipant(class AAthenaPlayerCharacter* Participant)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestQuestProxy.AddParticipant"));}

	ATestQuestProxy_AddParticipant_Params params;
	params.Participant = Participant;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestReturnCompleteAfterTimeoutPlayerRelevancyService.CreateTestReturnCompleteAfterTimeoutPlayerRelevancyService
// (FUNC_Protected)
// Parameters:
// float                          InTimeoutWanted                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UTestReturnCompleteAfterTimeoutPlayerRelevancyService* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UTestReturnCompleteAfterTimeoutPlayerRelevancyService* UTestReturnCompleteAfterTimeoutPlayerRelevancyService::CreateTestReturnCompleteAfterTimeoutPlayerRelevancyService(float InTimeoutWanted)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestReturnCompleteAfterTimeoutPlayerRelevancyService.CreateTestReturnCompleteAfterTimeoutPlayerRelevancyService"));}

	UTestReturnCompleteAfterTimeoutPlayerRelevancyService_CreateTestReturnCompleteAfterTimeoutPlayerRelevancyService_Params params;
	params.InTimeoutWanted = InTimeoutWanted;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.TestShipAssetClassDatabase.MakeTestShipAssetClassDatabase
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UTestShipAssetClassDatabase* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UTestShipAssetClassDatabase* UTestShipAssetClassDatabase::MakeTestShipAssetClassDatabase()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestShipAssetClassDatabase.MakeTestShipAssetClassDatabase"));}

	UTestShipAssetClassDatabase_MakeTestShipAssetClassDatabase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.TestStreamingTeleport.GetTeleportPoints
// (FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<ECollisionChannel> BlockingChannel                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          CharacterRadius                (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          CharacterHalfHeight            (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          IntervalSize                   (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 MinExtents                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// struct FVector                 MaxExtents                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// TArray<struct FVector>         Points                         (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor)

void UTestStreamingTeleport::GetTeleportPoints(class UObject* WorldContextObject, TEnumAsByte<ECollisionChannel> BlockingChannel, float CharacterRadius, float CharacterHalfHeight, float IntervalSize, const struct FVector& MinExtents, const struct FVector& MaxExtents, TArray<struct FVector>* Points)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestStreamingTeleport.GetTeleportPoints"));}

	UTestStreamingTeleport_GetTeleportPoints_Params params;
	params.WorldContextObject = WorldContextObject;
	params.BlockingChannel = BlockingChannel;
	params.CharacterRadius = CharacterRadius;
	params.CharacterHalfHeight = CharacterHalfHeight;
	params.IntervalSize = IntervalSize;
	params.MinExtents = MinExtents;
	params.MaxExtents = MaxExtents;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Points != nullptr)
		*Points = params.Points;
}


// Function Athena.TextureFeedbackComponent.SetInputTexture1
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UTextureRenderTarget2D*  InRenderTargetTexture          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UTextureFeedbackComponent::SetInputTexture1(class UTextureRenderTarget2D* InRenderTargetTexture)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TextureFeedbackComponent.SetInputTexture1"));}

	UTextureFeedbackComponent_SetInputTexture1_Params params;
	params.InRenderTargetTexture = InRenderTargetTexture;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TextureFeedbackComponent.SetEffectActive
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           IsActive                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UTextureFeedbackComponent::SetEffectActive(bool IsActive)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TextureFeedbackComponent.SetEffectActive"));}

	UTextureFeedbackComponent_SetEffectActive_Params params;
	params.IsActive = IsActive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TextureFeedbackComponent.GetTexture
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UTexture*                ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UTexture* UTextureFeedbackComponent::GetTexture()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TextureFeedbackComponent.GetTexture"));}

	UTextureFeedbackComponent_GetTexture_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.TextureFeedbackComponent.CopyToTargetTexture
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UTextureRenderTarget2D*  RenderTarget                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UTexture*                SourceTexture                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UTextureFeedbackComponent::CopyToTargetTexture(class UObject* WorldContextObject, class UTextureRenderTarget2D* RenderTarget, class UTexture* SourceTexture)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TextureFeedbackComponent.CopyToTargetTexture"));}

	UTextureFeedbackComponent_CopyToTargetTexture_Params params;
	params.WorldContextObject = WorldContextObject;
	params.RenderTarget = RenderTarget;
	params.SourceTexture = SourceTexture;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TextureFeedbackComponent.ClearTexture
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FLinearColor            ClearColor                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UTextureFeedbackComponent::ClearTexture(const struct FLinearColor& ClearColor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TextureFeedbackComponent.ClearTexture"));}

	UTextureFeedbackComponent_ClearTexture_Params params;
	params.ClearColor = ClearColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TrackedActorService.OnTrackedActorDestroyed
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UTrackedActorService::OnTrackedActorDestroyed(class AActor* Actor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TrackedActorService.OnTrackedActorDestroyed"));}

	UTrackedActorService_OnTrackedActorDestroyed_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BountyMap.RefreshContents
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ABountyMap::RefreshContents()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BountyMap.RefreshContents"));}

	ABountyMap_RefreshContents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BountyMap.OnTextCanvasUpdate
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UCanvas*                 Canvas                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Width                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Height                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ABountyMap::OnTextCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BountyMap.OnTextCanvasUpdate"));}

	ABountyMap_OnTextCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BountyMap.OnRep_MapInventoryTexturePath
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ABountyMap::OnRep_MapInventoryTexturePath()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BountyMap.OnRep_MapInventoryTexturePath"));}

	ABountyMap_OnRep_MapInventoryTexturePath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.BountyMap.OnRep_Contents
// (FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FBountyMapContents      InPreviousContents             (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void ABountyMap::OnRep_Contents(const struct FBountyMapContents& InPreviousContents)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BountyMap.OnRep_Contents"));}

	ABountyMap_OnRep_Contents_Params params;
	params.InPreviousContents = InPreviousContents;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MerchantMap.RefreshContents
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AMerchantMap::RefreshContents()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MerchantMap.RefreshContents"));}

	AMerchantMap_RefreshContents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MerchantMap.OnTextCanvasUpdate
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UCanvas*                 Canvas                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Width                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Height                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMerchantMap::OnTextCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MerchantMap.OnTextCanvasUpdate"));}

	AMerchantMap_OnTextCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MerchantMap.OnRep_Contents
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FMerchantMapContents    InPreviousContents             (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void AMerchantMap::OnRep_Contents(const struct FMerchantMapContents& InPreviousContents)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MerchantMap.OnRep_Contents"));}

	AMerchantMap_OnRep_Contents_Params params;
	params.InPreviousContents = InPreviousContents;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RiddleMap.TriggerMagicGlow_RPC
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ARiddleMap::TriggerMagicGlow_RPC()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RiddleMap.TriggerMagicGlow_RPC"));}

	ARiddleMap_TriggerMagicGlow_RPC_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RiddleMap.StartMagicGlowEffect
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ARiddleMap::StartMagicGlowEffect()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RiddleMap.StartMagicGlowEffect"));}

	ARiddleMap_StartMagicGlowEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RiddleMap.RefreshContents
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ARiddleMap::RefreshContents()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RiddleMap.RefreshContents"));}

	ARiddleMap_RefreshContents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RiddleMap.OnTextCanvasUpdate
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UCanvas*                 Canvas                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Width                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Height                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ARiddleMap::OnTextCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RiddleMap.OnTextCanvasUpdate"));}

	ARiddleMap_OnTextCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RiddleMap.OnRep_MapInventoryTexturePath
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ARiddleMap::OnRep_MapInventoryTexturePath()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RiddleMap.OnRep_MapInventoryTexturePath"));}

	ARiddleMap_OnRep_MapInventoryTexturePath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RiddleMap.OnRep_Contents
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FRiddleMapContents      InPreviousContents             (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void ARiddleMap::OnRep_Contents(const struct FRiddleMapContents& InPreviousContents)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RiddleMap.OnRep_Contents"));}

	ARiddleMap_OnRep_Contents_Params params;
	params.InPreviousContents = InPreviousContents;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.RiddleMap.OnMaskCanvasUpdate
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UCanvas*                 Canvas                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Width                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Height                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ARiddleMap::OnMaskCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.RiddleMap.OnMaskCanvasUpdate"));}

	ARiddleMap_OnMaskCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.XMarksTheSpotMap.SetMapData
// (FUNC_BlueprintAuthorityOnly, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TAssetPtr<class UTexture>      InMapTextureAsset              (CPF_Parm)
// TAssetPtr<class UTexture>      InMapInventoryTextureAsset     (CPF_Parm)
// TArray<struct FXMarksTheSpotMapMark> InMarks                        (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm)
// float                          InRotation                     (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AXMarksTheSpotMap::SetMapData(TAssetPtr<class UTexture> InMapTextureAsset, TAssetPtr<class UTexture> InMapInventoryTextureAsset, TArray<struct FXMarksTheSpotMapMark> InMarks, float InRotation)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.XMarksTheSpotMap.SetMapData"));}

	AXMarksTheSpotMap_SetMapData_Params params;
	params.InMapTextureAsset = InMapTextureAsset;
	params.InMapInventoryTextureAsset = InMapInventoryTextureAsset;
	params.InMarks = InMarks;
	params.InRotation = InRotation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.XMarksTheSpotMap.OnRep_Marks
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AXMarksTheSpotMap::OnRep_Marks()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.XMarksTheSpotMap.OnRep_Marks"));}

	AXMarksTheSpotMap_OnRep_Marks_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.XMarksTheSpotMap.OnRep_MapTexturePath
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AXMarksTheSpotMap::OnRep_MapTexturePath()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.XMarksTheSpotMap.OnRep_MapTexturePath"));}

	AXMarksTheSpotMap_OnRep_MapTexturePath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.XMarksTheSpotMap.OnRep_MapInventoryTexturePath
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AXMarksTheSpotMap::OnRep_MapInventoryTexturePath()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.XMarksTheSpotMap.OnRep_MapInventoryTexturePath"));}

	AXMarksTheSpotMap_OnRep_MapInventoryTexturePath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.XMarksTheSpotMap.OnCanvasUpdate
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UCanvas*                 Canvas                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Width                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Height                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AXMarksTheSpotMap::OnCanvasUpdate(class UCanvas* Canvas, int Width, int Height)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.XMarksTheSpotMap.OnCanvasUpdate"));}

	AXMarksTheSpotMap_OnCanvasUpdate_Params params;
	params.Canvas = Canvas;
	params.Width = Width;
	params.Height = Height;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.XMarksTheSpotMap.IsMapTextureLoaded
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool AXMarksTheSpotMap::IsMapTextureLoaded()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.XMarksTheSpotMap.IsMapTextureLoaded"));}

	AXMarksTheSpotMap_IsMapTextureLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.XMarksTheSpotMap.GetRenderTarget
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UCanvasRenderTarget2D*   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UCanvasRenderTarget2D* AXMarksTheSpotMap::GetRenderTarget()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.XMarksTheSpotMap.GetRenderTarget"));}

	AXMarksTheSpotMap_GetRenderTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.XMarksTheSpotMap.GetMarks
// ()
// Parameters:
// TArray<struct FXMarksTheSpotMapMark> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<struct FXMarksTheSpotMapMark> AXMarksTheSpotMap::GetMarks()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.XMarksTheSpotMap.GetMarks"));}

	AXMarksTheSpotMap_GetMarks_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.XMarksTheSpotMap.GetMapTextureAsset
// ()
// Parameters:
// TAssetPtr<class UTexture>      ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

TAssetPtr<class UTexture> AXMarksTheSpotMap::GetMapTextureAsset()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.XMarksTheSpotMap.GetMapTextureAsset"));}

	AXMarksTheSpotMap_GetMapTextureAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.XMarksTheSpotMap.GetDynamicMaterialThird
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UMaterialInstanceDynamic* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UMaterialInstanceDynamic* AXMarksTheSpotMap::GetDynamicMaterialThird()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.XMarksTheSpotMap.GetDynamicMaterialThird"));}

	AXMarksTheSpotMap_GetDynamicMaterialThird_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.XMarksTheSpotMap.GetDynamicMaterialFirst
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UMaterialInstanceDynamic* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UMaterialInstanceDynamic* AXMarksTheSpotMap::GetDynamicMaterialFirst()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.XMarksTheSpotMap.GetDynamicMaterialFirst"));}

	AXMarksTheSpotMap_GetDynamicMaterialFirst_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.TriggerObject.Trigger
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  InTriggeringActor              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ATriggerObject::Trigger(class AActor* InTriggeringActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TriggerObject.Trigger"));}

	ATriggerObject_Trigger_Params params;
	params.InTriggeringActor = InTriggeringActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TriggerObject.OnTriggerServer
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  InTriggeringActor              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ATriggerObject::OnTriggerServer(class AActor* InTriggeringActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TriggerObject.OnTriggerServer"));}

	ATriggerObject_OnTriggerServer_Params params;
	params.InTriggeringActor = InTriggeringActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TriggerObject.OnTriggerClient
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  InTriggeringActor              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ATriggerObject::OnTriggerClient(class AActor* InTriggeringActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TriggerObject.OnTriggerClient"));}

	ATriggerObject_OnTriggerClient_Params params;
	params.InTriggeringActor = InTriggeringActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TriggerObject.MulticastTrigger
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  InTriggeringActor              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ATriggerObject::MulticastTrigger(class AActor* InTriggeringActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TriggerObject.MulticastTrigger"));}

	ATriggerObject_MulticastTrigger_Params params;
	params.InTriggeringActor = InTriggeringActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TriggerObject.CanActorTrigger
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  InTriggeringActor              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ATriggerObject::CanActorTrigger(class AActor* InTriggeringActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TriggerObject.CanActorTrigger"));}

	ATriggerObject_CanActorTrigger_Params params;
	params.InTriggeringActor = InTriggeringActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.TeleportTriggerObject.OnTriggerTeleportServer
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  InTriggeringActor              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ATeleportTriggerObject::OnTriggerTeleportServer(class AActor* InTriggeringActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TeleportTriggerObject.OnTriggerTeleportServer"));}

	ATeleportTriggerObject_OnTriggerTeleportServer_Params params;
	params.InTriggeringActor = InTriggeringActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TutorialComponent.OnRep_HasBegun
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UTutorialComponent::OnRep_HasBegun()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TutorialComponent.OnRep_HasBegun"));}

	UTutorialComponent_OnRep_HasBegun_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.UnifiedDelegateTestUnifiedDelegate.UnbindDelegate
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UUnifiedDelegateTestUnifiedDelegate::UnbindDelegate()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UnifiedDelegateTestUnifiedDelegate.UnbindDelegate"));}

	UUnifiedDelegateTestUnifiedDelegate_UnbindDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.UnifiedDelegateTestUnifiedDelegate.MakeTestUnifiedDelegate
// (FUNC_BlueprintCosmetic)
// Parameters:
// class UUnifiedDelegateTestUnifiedDelegate* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UUnifiedDelegateTestUnifiedDelegate* UUnifiedDelegateTestUnifiedDelegate::MakeTestUnifiedDelegate()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UnifiedDelegateTestUnifiedDelegate.MakeTestUnifiedDelegate"));}

	UUnifiedDelegateTestUnifiedDelegate_MakeTestUnifiedDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.UnifiedDelegateTestUnifiedDelegate.IsDelegateBound
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UUnifiedDelegateTestUnifiedDelegate::IsDelegateBound()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UnifiedDelegateTestUnifiedDelegate.IsDelegateBound"));}

	UUnifiedDelegateTestUnifiedDelegate_IsDelegateBound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.UnifiedDelegateTestUnifiedDelegate.BindDelegate
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FScriptDelegate         InDynamicDelegate              (CPF_Parm, CPF_ZeroConstructor)

void UUnifiedDelegateTestUnifiedDelegate::BindDelegate(const struct FScriptDelegate& InDynamicDelegate)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UnifiedDelegateTestUnifiedDelegate.BindDelegate"));}

	UUnifiedDelegateTestUnifiedDelegate_BindDelegate_Params params;
	params.InDynamicDelegate = InDynamicDelegate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.UnloadItemActionStateId.PushCharacterIntoUnloadItemActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  UnloadableActor                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Interactable                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UUnloadItemActionStateId::PushCharacterIntoUnloadItemActionState(class AActor* Character, class AActor* UnloadableActor, class AActor* Interactable)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UnloadItemActionStateId.PushCharacterIntoUnloadItemActionState"));}

	UUnloadItemActionStateId_PushCharacterIntoUnloadItemActionState_Params params;
	params.Character = Character;
	params.UnloadableActor = UnloadableActor;
	params.Interactable = Interactable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.UnloadItemActionStateId.PopCharacterOutOfUnloadItemActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UUnloadItemActionStateId::PopCharacterOutOfUnloadItemActionState(class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UnloadItemActionStateId.PopCharacterOutOfUnloadItemActionState"));}

	UUnloadItemActionStateId_PopCharacterOutOfUnloadItemActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.UsableWieldableComponent.Server_TriggerOneShotUse
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  InputID                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UUsableWieldableComponent::Server_TriggerOneShotUse(class UClass* InputID)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UsableWieldableComponent.Server_TriggerOneShotUse"));}

	UUsableWieldableComponent_Server_TriggerOneShotUse_Params params;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.UsableWieldableComponent.Multicast_TriggerOneShotUse
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  InputID                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UUsableWieldableComponent::Multicast_TriggerOneShotUse(class UClass* InputID)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UsableWieldableComponent.Multicast_TriggerOneShotUse"));}

	UUsableWieldableComponent_Multicast_TriggerOneShotUse_Params params;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.UseCannonActionStateId.PushCharacterIntoUseCannonActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EActionStateMachineTrackId> TrackId                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  CannonActor                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UUseCannonActionStateId::PushCharacterIntoUseCannonActionState(TEnumAsByte<EActionStateMachineTrackId> TrackId, class AActor* CannonActor, class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UseCannonActionStateId.PushCharacterIntoUseCannonActionState"));}

	UUseCannonActionStateId_PushCharacterIntoUseCannonActionState_Params params;
	params.TrackId = TrackId;
	params.CannonActor = CannonActor;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.UseCannonCompositeInputHandler.OnSecondaryInteractReleased
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UUseCannonCompositeInputHandler::OnSecondaryInteractReleased()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UseCannonCompositeInputHandler.OnSecondaryInteractReleased"));}

	UUseCannonCompositeInputHandler_OnSecondaryInteractReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.UseCannonCompositeInputHandler.OnSecondaryInteract
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UUseCannonCompositeInputHandler::OnSecondaryInteract()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UseCannonCompositeInputHandler.OnSecondaryInteract"));}

	UUseCannonCompositeInputHandler_OnSecondaryInteract_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.UseCannonCompositeInputHandler.OnMoveYaw
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UUseCannonCompositeInputHandler::OnMoveYaw(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UseCannonCompositeInputHandler.OnMoveYaw"));}

	UUseCannonCompositeInputHandler_OnMoveYaw_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.UseCannonCompositeInputHandler.OnMovePitch
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UUseCannonCompositeInputHandler::OnMovePitch(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UseCannonCompositeInputHandler.OnMovePitch"));}

	UUseCannonCompositeInputHandler_OnMovePitch_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.UseCannonCompositeInputHandler.OnFireCannon
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UUseCannonCompositeInputHandler::OnFireCannon()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UseCannonCompositeInputHandler.OnFireCannon"));}

	UUseCannonCompositeInputHandler_OnFireCannon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.UseItemActionStateId.PushCharacterIntoUseItemActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Usable                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  InputID                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UUseItemActionStateId::PushCharacterIntoUseItemActionState(class AActor* Character, class AActor* Usable, class UClass* InputID)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UseItemActionStateId.PushCharacterIntoUseItemActionState"));}

	UUseItemActionStateId_PushCharacterIntoUseItemActionState_Params params;
	params.Character = Character;
	params.Usable = Usable;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.UseItemActionStateId.PopCharacterOutOfUseItemActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UUseItemActionStateId::PopCharacterOutOfUseItemActionState(class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UseItemActionStateId.PopCharacterOutOfUseItemActionState"));}

	UUseItemActionStateId_PopCharacterOutOfUseItemActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.UseLadderActionStateId.PushCharacterIntoUseLadderActionState
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EActionStateMachineTrackId> TrackId                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  LadderActor                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          InteractingHeight              (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// unsigned char                  ClimbId                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FLadderDefinition       LadderDefinition               (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UUseLadderActionStateId::PushCharacterIntoUseLadderActionState(TEnumAsByte<EActionStateMachineTrackId> TrackId, class AActor* LadderActor, class AActor* Character, float InteractingHeight, unsigned char ClimbId, const struct FLadderDefinition& LadderDefinition)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UseLadderActionStateId.PushCharacterIntoUseLadderActionState"));}

	UUseLadderActionStateId_PushCharacterIntoUseLadderActionState_Params params;
	params.TrackId = TrackId;
	params.LadderActor = LadderActor;
	params.Character = Character;
	params.InteractingHeight = InteractingHeight;
	params.ClimbId = ClimbId;
	params.LadderDefinition = LadderDefinition;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.UseMapTableActionStateId.PushCharacterIntoUseMapTableActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EActionStateMachineTrackId> TrackId                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  MapTableActor                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UUseMapTableActionStateId::PushCharacterIntoUseMapTableActionState(TEnumAsByte<EActionStateMachineTrackId> TrackId, class AActor* MapTableActor, class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UseMapTableActionStateId.PushCharacterIntoUseMapTableActionState"));}

	UUseMapTableActionStateId_PushCharacterIntoUseMapTableActionState_Params params;
	params.TrackId = TrackId;
	params.MapTableActor = MapTableActor;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.UseMapTableCompositeInputHandler.OnZoomOut
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UUseMapTableCompositeInputHandler::OnZoomOut(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UseMapTableCompositeInputHandler.OnZoomOut"));}

	UUseMapTableCompositeInputHandler_OnZoomOut_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.UseMapTableCompositeInputHandler.OnZoomIn
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UUseMapTableCompositeInputHandler::OnZoomIn(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UseMapTableCompositeInputHandler.OnZoomIn"));}

	UUseMapTableCompositeInputHandler_OnZoomIn_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.UseMapTableCompositeInputHandler.OnTogglePin
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UUseMapTableCompositeInputHandler::OnTogglePin()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UseMapTableCompositeInputHandler.OnTogglePin"));}

	UUseMapTableCompositeInputHandler_OnTogglePin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.UseMapTableCompositeInputHandler.OnPanY
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UUseMapTableCompositeInputHandler::OnPanY(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UseMapTableCompositeInputHandler.OnPanY"));}

	UUseMapTableCompositeInputHandler_OnPanY_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.UseMapTableCompositeInputHandler.OnPanX
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UUseMapTableCompositeInputHandler::OnPanX(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UseMapTableCompositeInputHandler.OnPanX"));}

	UUseMapTableCompositeInputHandler_OnPanX_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.UseMapTableCompositeInputHandler.OnMouseZoom
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UUseMapTableCompositeInputHandler::OnMouseZoom(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UseMapTableCompositeInputHandler.OnMouseZoom"));}

	UUseMapTableCompositeInputHandler_OnMouseZoom_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.UseMapTableCompositeInputHandler.OnMousePanY
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UUseMapTableCompositeInputHandler::OnMousePanY(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UseMapTableCompositeInputHandler.OnMousePanY"));}

	UUseMapTableCompositeInputHandler_OnMousePanY_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.UseMapTableCompositeInputHandler.OnMousePanX
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          Value                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EInputHandlerResult> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EInputHandlerResult> UUseMapTableCompositeInputHandler::OnMousePanX(float Value)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.UseMapTableCompositeInputHandler.OnMousePanX"));}

	UUseMapTableCompositeInputHandler_OnMousePanX_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VenomComponent.SprayVenomInDirection
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVector                 SourceLocation                 (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// struct FVector                 Direction                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UVenomComponent::SprayVenomInDirection(const struct FVector& SourceLocation, const struct FVector& Direction)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VenomComponent.SprayVenomInDirection"));}

	UVenomComponent_SprayVenomInDirection_Params params;
	params.SourceLocation = SourceLocation;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.VenomComponent.SprayVenomAtClosestTarget
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVector                 SourceLocation                 (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UVenomComponent::SprayVenomAtClosestTarget(const struct FVector& SourceLocation)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VenomComponent.SprayVenomAtClosestTarget"));}

	UVenomComponent_SprayVenomAtClosestTarget_Params params;
	params.SourceLocation = SourceLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.VenomComponent.ApplyVenomToTarget
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Target                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UVenomComponent::ApplyVenomToTarget(class AActor* Target)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VenomComponent.ApplyVenomToTarget"));}

	UVenomComponent_ApplyVenomToTarget_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.VfxFunctionLibrary.WithWorldOwner
// (FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVfxSpawner             Spawner                        (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UVfxFunctionLibrary::WithWorldOwner(struct FVfxSpawner* Spawner)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VfxFunctionLibrary.WithWorldOwner"));}

	UVfxFunctionLibrary_WithWorldOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;
}


// Function Athena.VfxFunctionLibrary.WithRelativeScale
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVfxSpawner             Spawner                        (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// struct FVector                 Scale3D                        (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void UVfxFunctionLibrary::WithRelativeScale(const struct FVector& Scale3D, struct FVfxSpawner* Spawner)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VfxFunctionLibrary.WithRelativeScale"));}

	UVfxFunctionLibrary_WithRelativeScale_Params params;
	params.Scale3D = Scale3D;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;
}


// Function Athena.VfxFunctionLibrary.WithOwner
// (FUNC_RequiredAPI, FUNC_BlueprintCosmetic, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVfxSpawner             Spawner                        (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// class UObject*                 InOwner                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           InOwnerOnlySee                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           InOwnerNoSee                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UVfxFunctionLibrary::WithOwner(class UObject* InOwner, bool InOwnerOnlySee, bool InOwnerNoSee, struct FVfxSpawner* Spawner)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VfxFunctionLibrary.WithOwner"));}

	UVfxFunctionLibrary_WithOwner_Params params;
	params.InOwner = InOwner;
	params.InOwnerOnlySee = InOwnerOnlySee;
	params.InOwnerNoSee = InOwnerNoSee;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;
}


// Function Athena.VfxFunctionLibrary.WithEffect
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVfxSpawner             Spawner                        (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// class UObject*                 InEmitterTemplate              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           InAutoDestroy                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UVfxFunctionLibrary::WithEffect(class UObject* InEmitterTemplate, bool InAutoDestroy, struct FVfxSpawner* Spawner)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VfxFunctionLibrary.WithEffect"));}

	UVfxFunctionLibrary_WithEffect_Params params;
	params.InEmitterTemplate = InEmitterTemplate;
	params.InAutoDestroy = InAutoDestroy;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;
}


// Function Athena.VfxFunctionLibrary.Spawn
// (FUNC_Net, FUNC_Protected, FUNC_NetServer, FUNC_HasOutParms)
// Parameters:
// struct FVfxSpawner             Spawner                        (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UParticleSystemComponent* ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData)

class UParticleSystemComponent* UVfxFunctionLibrary::Spawn(class UObject* WorldContextObject, struct FVfxSpawner* Spawner)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VfxFunctionLibrary.Spawn"));}

	UVfxFunctionLibrary_Spawn_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;

	return params.ReturnValue;
}


// Function Athena.VfxFunctionLibrary.SetUnderwater
// (FUNC_Final, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVfxSpawner             Spawner                        (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// bool                           IsUnderwater                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UVfxFunctionLibrary::SetUnderwater(bool IsUnderwater, struct FVfxSpawner* Spawner)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VfxFunctionLibrary.SetUnderwater"));}

	UVfxFunctionLibrary_SetUnderwater_Params params;
	params.IsUnderwater = IsUnderwater;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;
}


// Function Athena.VfxFunctionLibrary.InVfxRegion
// (FUNC_Final, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVfxSpawner             Spawner                        (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// TEnumAsByte<EVfxRegion>        InRegion                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UVfxFunctionLibrary::InVfxRegion(TEnumAsByte<EVfxRegion> InRegion, struct FVfxSpawner* Spawner)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VfxFunctionLibrary.InVfxRegion"));}

	UVfxFunctionLibrary_InVfxRegion_Params params;
	params.InRegion = InRegion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;
}


// Function Athena.VfxFunctionLibrary.AttachedToSocket
// (FUNC_Final, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVfxSpawner             Spawner                        (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// class USceneComponent*         InAttachToComponent            (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// struct FName                   InAttachPointName              (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EAttachLocation>   InLocationType                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UVfxFunctionLibrary::AttachedToSocket(class USceneComponent* InAttachToComponent, const struct FName& InAttachPointName, TEnumAsByte<EAttachLocation> InLocationType, struct FVfxSpawner* Spawner)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VfxFunctionLibrary.AttachedToSocket"));}

	UVfxFunctionLibrary_AttachedToSocket_Params params;
	params.InAttachToComponent = InAttachToComponent;
	params.InAttachPointName = InAttachPointName;
	params.InLocationType = InLocationType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;
}


// Function Athena.VfxFunctionLibrary.AttachedToComponent
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVfxSpawner             Spawner                        (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// class USceneComponent*         InAttachToComponent            (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// TEnumAsByte<EAttachLocation>   InLocationType                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UVfxFunctionLibrary::AttachedToComponent(class USceneComponent* InAttachToComponent, TEnumAsByte<EAttachLocation> InLocationType, struct FVfxSpawner* Spawner)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VfxFunctionLibrary.AttachedToComponent"));}

	UVfxFunctionLibrary_AttachedToComponent_Params params;
	params.InAttachToComponent = InAttachToComponent;
	params.InLocationType = InLocationType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;
}


// Function Athena.VfxFunctionLibrary.AtSocketLocation
// (FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVfxSpawner             Spawner                        (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// class USceneComponent*         InSocketOwnerComponent         (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// struct FName                   InSocketName                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 InLocation                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FRotator                InRotation                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UVfxFunctionLibrary::AtSocketLocation(class USceneComponent* InSocketOwnerComponent, const struct FName& InSocketName, const struct FVector& InLocation, const struct FRotator& InRotation, struct FVfxSpawner* Spawner)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VfxFunctionLibrary.AtSocketLocation"));}

	UVfxFunctionLibrary_AtSocketLocation_Params params;
	params.InSocketOwnerComponent = InSocketOwnerComponent;
	params.InSocketName = InSocketName;
	params.InLocation = InLocation;
	params.InRotation = InRotation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;
}


// Function Athena.VfxFunctionLibrary.AtLocation
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVfxSpawner             Spawner                        (CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// struct FVector                 InLocation                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FRotator                InRotation                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UVfxFunctionLibrary::AtLocation(const struct FVector& InLocation, const struct FRotator& InRotation, struct FVfxSpawner* Spawner)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VfxFunctionLibrary.AtLocation"));}

	UVfxFunctionLibrary_AtLocation_Params params;
	params.InLocation = InLocation;
	params.InRotation = InRotation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Spawner != nullptr)
		*Spawner = params.Spawner;
}


// Function Athena.VfxFunctionLibrary.AthenaSpawnShipRelativeEmitterAtSocketLocation
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_HasOutParms)
// Parameters:
// class UObject*                 EmitterTemplate                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AAthenaPlayerCharacter*  AthenaPlayerCharacter          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class USceneComponent*         SocketOwnerComponent           (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// struct FName                   SocketName                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 Location                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FRotator                Rotation                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bAutoDestroy                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bOwnerOnlySee                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bOwnerNoSee                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bIsUnderwater                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EVfxRegion>        VfxRegion                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UParticleSystemComponent* ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData)

class UParticleSystemComponent* UVfxFunctionLibrary::AthenaSpawnShipRelativeEmitterAtSocketLocation(class UObject* EmitterTemplate, class AAthenaPlayerCharacter* AthenaPlayerCharacter, class USceneComponent* SocketOwnerComponent, const struct FName& SocketName, const struct FVector& Location, const struct FRotator& Rotation, bool bAutoDestroy, bool bOwnerOnlySee, bool bOwnerNoSee, bool bIsUnderwater, TEnumAsByte<EVfxRegion> VfxRegion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VfxFunctionLibrary.AthenaSpawnShipRelativeEmitterAtSocketLocation"));}

	UVfxFunctionLibrary_AthenaSpawnShipRelativeEmitterAtSocketLocation_Params params;
	params.EmitterTemplate = EmitterTemplate;
	params.AthenaPlayerCharacter = AthenaPlayerCharacter;
	params.SocketOwnerComponent = SocketOwnerComponent;
	params.SocketName = SocketName;
	params.Location = Location;
	params.Rotation = Rotation;
	params.bAutoDestroy = bAutoDestroy;
	params.bOwnerOnlySee = bOwnerOnlySee;
	params.bOwnerNoSee = bOwnerNoSee;
	params.bIsUnderwater = bIsUnderwater;
	params.VfxRegion = VfxRegion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAttachedWithOwner
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_HasOutParms)
// Parameters:
// class UObject*                 EmitterTemplate                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class USceneComponent*         AttachToComponent              (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// class UObject*                 Owner                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FName                   AttachPointName                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 Location                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FRotator                Rotation                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EAttachLocation>   LocationType                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bAutoDestroy                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bOwnerOnlySee                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bOwnerNoSee                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bIsUnderwater                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EVfxRegion>        VfxRegion                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UParticleSystemComponent* ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData)

class UParticleSystemComponent* UVfxFunctionLibrary::AthenaSpawnEmitterAttachedWithOwner(class UObject* EmitterTemplate, class USceneComponent* AttachToComponent, class UObject* Owner, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<EAttachLocation> LocationType, bool bAutoDestroy, bool bOwnerOnlySee, bool bOwnerNoSee, bool bIsUnderwater, TEnumAsByte<EVfxRegion> VfxRegion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAttachedWithOwner"));}

	UVfxFunctionLibrary_AthenaSpawnEmitterAttachedWithOwner_Params params;
	params.EmitterTemplate = EmitterTemplate;
	params.AttachToComponent = AttachToComponent;
	params.Owner = Owner;
	params.AttachPointName = AttachPointName;
	params.Location = Location;
	params.Rotation = Rotation;
	params.LocationType = LocationType;
	params.bAutoDestroy = bAutoDestroy;
	params.bOwnerOnlySee = bOwnerOnlySee;
	params.bOwnerNoSee = bOwnerNoSee;
	params.bIsUnderwater = bIsUnderwater;
	params.VfxRegion = VfxRegion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAttachedAndWorldOwned
// (FUNC_Net, FUNC_Protected, FUNC_Delegate, FUNC_NetServer)
// Parameters:
// class UObject*                 EmitterTemplate                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class USceneComponent*         AttachToComponent              (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// struct FName                   AttachPointName                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 Location                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FRotator                Rotation                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EAttachLocation>   LocationType                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bAutoDestroy                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bIsUnderwater                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EVfxRegion>        VfxRegion                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UParticleSystemComponent* ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData)

class UParticleSystemComponent* UVfxFunctionLibrary::AthenaSpawnEmitterAttachedAndWorldOwned(class UObject* EmitterTemplate, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<EAttachLocation> LocationType, bool bAutoDestroy, bool bIsUnderwater, TEnumAsByte<EVfxRegion> VfxRegion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAttachedAndWorldOwned"));}

	UVfxFunctionLibrary_AthenaSpawnEmitterAttachedAndWorldOwned_Params params;
	params.EmitterTemplate = EmitterTemplate;
	params.AttachToComponent = AttachToComponent;
	params.AttachPointName = AttachPointName;
	params.Location = Location;
	params.Rotation = Rotation;
	params.LocationType = LocationType;
	params.bAutoDestroy = bAutoDestroy;
	params.bIsUnderwater = bIsUnderwater;
	params.VfxRegion = VfxRegion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAtLocationWithOwner
// (FUNC_Net, FUNC_Protected, FUNC_Delegate, FUNC_NetServer)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UObject*                 EmitterTemplate                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Owner                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 SpawnLocation                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FRotator                SpawnRotation                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bAutoDestroy                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bOwnerOnlySee                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bOwnerNoSee                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bIsUnderwater                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EVfxRegion>        VfxRegion                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UParticleSystemComponent* ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData)

class UParticleSystemComponent* UVfxFunctionLibrary::AthenaSpawnEmitterAtLocationWithOwner(class UObject* WorldContextObject, class UObject* EmitterTemplate, class AActor* Owner, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, bool bAutoDestroy, bool bOwnerOnlySee, bool bOwnerNoSee, bool bIsUnderwater, TEnumAsByte<EVfxRegion> VfxRegion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAtLocationWithOwner"));}

	UVfxFunctionLibrary_AthenaSpawnEmitterAtLocationWithOwner_Params params;
	params.WorldContextObject = WorldContextObject;
	params.EmitterTemplate = EmitterTemplate;
	params.Owner = Owner;
	params.SpawnLocation = SpawnLocation;
	params.SpawnRotation = SpawnRotation;
	params.bAutoDestroy = bAutoDestroy;
	params.bOwnerOnlySee = bOwnerOnlySee;
	params.bOwnerNoSee = bOwnerNoSee;
	params.bIsUnderwater = bIsUnderwater;
	params.VfxRegion = VfxRegion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAtLocation
// (FUNC_BlueprintCosmetic, FUNC_Delegate, FUNC_NetServer)
// Parameters:
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UObject*                 EmitterTemplate                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 Location                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FRotator                Rotation                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bAutoDestroy                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bIsUnderwater                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EVfxRegion>        VfxRegion                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UParticleSystemComponent* ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData)

class UParticleSystemComponent* UVfxFunctionLibrary::AthenaSpawnEmitterAtLocation(class UObject* WorldContextObject, class UObject* EmitterTemplate, const struct FVector& Location, const struct FRotator& Rotation, bool bAutoDestroy, bool bIsUnderwater, TEnumAsByte<EVfxRegion> VfxRegion)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VfxFunctionLibrary.AthenaSpawnEmitterAtLocation"));}

	UVfxFunctionLibrary_AthenaSpawnEmitterAtLocation_Params params;
	params.WorldContextObject = WorldContextObject;
	params.EmitterTemplate = EmitterTemplate;
	params.Location = Location;
	params.Rotation = Rotation;
	params.bAutoDestroy = bAutoDestroy;
	params.bIsUnderwater = bIsUnderwater;
	params.VfxRegion = VfxRegion;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VfxSelectorFunctionLibrary.SelectUpdateVfxWithOwner
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_Delegate, FUNC_HasOutParms)
// Parameters:
// class UVfxSelectorDataAsset*   SelectorAsset                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Value                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  Owner                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UParticleSystemComponent* ExistingVfx                    (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// class USceneComponent*         AttachToComponent              (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// struct FName                   AttachPointName                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EAttachLocation>   LocationType                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 Location                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FRotator                Rotation                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bAutoDestroy                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bOwnerOnlySee                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bOwnerNoSee                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bIsUnderwater                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UParticleSystemComponent* ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData)

class UParticleSystemComponent* UVfxSelectorFunctionLibrary::SelectUpdateVfxWithOwner(class UVfxSelectorDataAsset* SelectorAsset, float Value, class AActor* Owner, class UParticleSystemComponent* ExistingVfx, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, TEnumAsByte<EAttachLocation> LocationType, const struct FVector& Location, const struct FRotator& Rotation, bool bAutoDestroy, bool bOwnerOnlySee, bool bOwnerNoSee, bool bIsUnderwater)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VfxSelectorFunctionLibrary.SelectUpdateVfxWithOwner"));}

	UVfxSelectorFunctionLibrary_SelectUpdateVfxWithOwner_Params params;
	params.SelectorAsset = SelectorAsset;
	params.Value = Value;
	params.Owner = Owner;
	params.ExistingVfx = ExistingVfx;
	params.AttachToComponent = AttachToComponent;
	params.AttachPointName = AttachPointName;
	params.LocationType = LocationType;
	params.Location = Location;
	params.Rotation = Rotation;
	params.bAutoDestroy = bAutoDestroy;
	params.bOwnerOnlySee = bOwnerOnlySee;
	params.bOwnerNoSee = bOwnerNoSee;
	params.bIsUnderwater = bIsUnderwater;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VfxSelectorFunctionLibrary.SelectSpawnVfxAttachedWithOwner
// (FUNC_Net, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// class UVfxSelectorDataAsset*   SelectorAsset                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Value                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class USceneComponent*         AttachToComponent              (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// class AActor*                  Owner                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FName                   AttachPointName                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EAttachLocation>   LocationType                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 Location                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FRotator                Rotation                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bAutoDestroy                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bOwnerOnlySee                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bOwnerNoSee                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bIsUnderwater                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UParticleSystemComponent* ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData)

class UParticleSystemComponent* UVfxSelectorFunctionLibrary::SelectSpawnVfxAttachedWithOwner(class UVfxSelectorDataAsset* SelectorAsset, float Value, class USceneComponent* AttachToComponent, class AActor* Owner, const struct FName& AttachPointName, TEnumAsByte<EAttachLocation> LocationType, const struct FVector& Location, const struct FRotator& Rotation, bool bAutoDestroy, bool bOwnerOnlySee, bool bOwnerNoSee, bool bIsUnderwater)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VfxSelectorFunctionLibrary.SelectSpawnVfxAttachedWithOwner"));}

	UVfxSelectorFunctionLibrary_SelectSpawnVfxAttachedWithOwner_Params params;
	params.SelectorAsset = SelectorAsset;
	params.Value = Value;
	params.AttachToComponent = AttachToComponent;
	params.Owner = Owner;
	params.AttachPointName = AttachPointName;
	params.LocationType = LocationType;
	params.Location = Location;
	params.Rotation = Rotation;
	params.bAutoDestroy = bAutoDestroy;
	params.bOwnerOnlySee = bOwnerOnlySee;
	params.bOwnerNoSee = bOwnerNoSee;
	params.bIsUnderwater = bIsUnderwater;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VfxSelectorFunctionLibrary.SelectSpawnVfx
// (FUNC_BlueprintCosmetic, FUNC_Delegate, FUNC_NetServer)
// Parameters:
// class AActor*                  Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UVfxSelectorDataAsset*   SelectorAsset                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Value                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 Location                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FRotator                Rotation                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bAutoDestroy                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bOwnerOnlySee                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bOwnerNoSee                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bIsUnderwater                  (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UParticleSystemComponent* ReturnValue                    (CPF_ExportObject, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_InstancedReference, CPF_IsPlainOldData)

class UParticleSystemComponent* UVfxSelectorFunctionLibrary::SelectSpawnVfx(class AActor* Actor, class UVfxSelectorDataAsset* SelectorAsset, float Value, const struct FVector& Location, const struct FRotator& Rotation, bool bAutoDestroy, bool bOwnerOnlySee, bool bOwnerNoSee, bool bIsUnderwater)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VfxSelectorFunctionLibrary.SelectSpawnVfx"));}

	UVfxSelectorFunctionLibrary_SelectSpawnVfx_Params params;
	params.Actor = Actor;
	params.SelectorAsset = SelectorAsset;
	params.Value = Value;
	params.Location = Location;
	params.Rotation = Rotation;
	params.bAutoDestroy = bAutoDestroy;
	params.bOwnerOnlySee = bOwnerOnlySee;
	params.bOwnerNoSee = bOwnerNoSee;
	params.bIsUnderwater = bIsUnderwater;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VomitComponent.VomitActivate
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FName                   VomitType                      (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// float                          Duration                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UVomitComponent::VomitActivate(const struct FName& VomitType, float Duration)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VomitComponent.VomitActivate"));}

	UVomitComponent_VomitActivate_Params params;
	params.VomitType = VomitType;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.VomitComponent.OnOverlapBegin
// (FUNC_BlueprintCosmetic, FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Other                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// int                            OtherBodyIndex                 (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           bFromSweep                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FHitResult              SweepResult                    (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UVomitComponent::OnOverlapBegin(class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VomitComponent.OnOverlapBegin"));}

	UVomitComponent_OnOverlapBegin_Params params;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.VomitComponent.Multicast_VomitImpact
// (FUNC_NetReliable, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FHitResult              Result                         (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm)

void UVomitComponent::Multicast_VomitImpact(const struct FHitResult& Result)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VomitComponent.Multicast_VomitImpact"));}

	UVomitComponent_Multicast_VomitImpact_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.VomitComponent.Multicast_VomitActivate
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FName                   VomitType                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// float                          Duration                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UVomitComponent::Multicast_VomitActivate(const struct FName& VomitType, float Duration)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VomitComponent.Multicast_VomitActivate"));}

	UVomitComponent_Multicast_VomitActivate_Params params;
	params.VomitType = VomitType;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.VomitComponent.IsFaceCoveredWithVomit
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UVomitComponent::IsFaceCoveredWithVomit()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VomitComponent.IsFaceCoveredWithVomit"));}

	UVomitComponent_IsFaceCoveredWithVomit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VomitComponent.DidVomitVFXSpawn
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UVomitComponent::DidVomitVFXSpawn()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VomitComponent.DidVomitVFXSpawn"));}

	UVomitComponent_DidVomitVFXSpawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VomitComponent.Client_VomitHit
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UVomitComponent::Client_VomitHit()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VomitComponent.Client_VomitHit"));}

	UVomitComponent_Client_VomitHit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.VotableWithSessionComponent.SetVoteDataIndex
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            InVoteDataIndex                (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UVotableWithSessionComponent::SetVoteDataIndex(int InVoteDataIndex)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VotableWithSessionComponent.SetVoteDataIndex"));}

	UVotableWithSessionComponent_SetVoteDataIndex_Params params;
	params.InVoteDataIndex = InVoteDataIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.VotableWithSessionComponent.IsSessionLocked
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UVotableWithSessionComponent::IsSessionLocked()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VotableWithSessionComponent.IsSessionLocked"));}

	UVotableWithSessionComponent_IsSessionLocked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VotableWithSessionComponent.GetVoteDataIndex
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UVotableWithSessionComponent::GetVoteDataIndex()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VotableWithSessionComponent.GetVoteDataIndex"));}

	UVotableWithSessionComponent_GetVoteDataIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.BindToParentShipCrewVotingSession.OnRep_Manifest
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UBindToParentShipCrewVotingSession::OnRep_Manifest()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.BindToParentShipCrewVotingSession.OnRep_Manifest"));}

	UBindToParentShipCrewVotingSession_OnRep_Manifest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.VoyageGeneratorSim.SimulateVoyageChain
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// int                            Count                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Seed                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            MaxHistory                     (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 StartingLocation               (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// TArray<struct FIsland>         Islands                        (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm)
// class UVoyageRecipeDataAsset*  Recipe                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AVoyageGeneratorSim::SimulateVoyageChain(int Count, int Seed, int MaxHistory, const struct FVector& StartingLocation, TArray<struct FIsland> Islands, class UVoyageRecipeDataAsset* Recipe)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VoyageGeneratorSim.SimulateVoyageChain"));}

	AVoyageGeneratorSim_SimulateVoyageChain_Params params;
	params.Count = Count;
	params.Seed = Seed;
	params.MaxHistory = MaxHistory;
	params.StartingLocation = StartingLocation;
	params.Islands = Islands;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.VoyageGeneratorSim.ProcessSimulatedVoyage
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UVoyageGeneratorSimResult* Voyage                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AVoyageGeneratorSim::ProcessSimulatedVoyage(class UVoyageGeneratorSimResult* Voyage)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VoyageGeneratorSim.ProcessSimulatedVoyage"));}

	AVoyageGeneratorSim_ProcessSimulatedVoyage_Params params;
	params.Voyage = Voyage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.VoyageGeneratorSim.OnEndSimulationRun
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AVoyageGeneratorSim::OnEndSimulationRun()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VoyageGeneratorSim.OnEndSimulationRun"));}

	AVoyageGeneratorSim_OnEndSimulationRun_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.VoyageGeneratorSim.OnBeginSimulationRun
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AVoyageGeneratorSim::OnBeginSimulationRun()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VoyageGeneratorSim.OnBeginSimulationRun"));}

	AVoyageGeneratorSim_OnBeginSimulationRun_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.VoyageGeneratorSimBlackboardFunctions.PrintBlackboard
// (FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVoyageGeneratorSimBlackboard Blackboard                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UVoyageGeneratorSimBlackboardFunctions::PrintBlackboard(const struct FVoyageGeneratorSimBlackboard& Blackboard)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VoyageGeneratorSimBlackboardFunctions.PrintBlackboard"));}

	UVoyageGeneratorSimBlackboardFunctions_PrintBlackboard_Params params;
	params.Blackboard = Blackboard;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.VoyageGeneratorSimBlackboardFunctions.GetValuesFromBlackboardByNameInt
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// struct FVoyageGeneratorSimBlackboard Blackboard                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// struct FName                   Name                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<int>                    ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<int> UVoyageGeneratorSimBlackboardFunctions::GetValuesFromBlackboardByNameInt(const struct FVoyageGeneratorSimBlackboard& Blackboard, const struct FName& Name)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VoyageGeneratorSimBlackboardFunctions.GetValuesFromBlackboardByNameInt"));}

	UVoyageGeneratorSimBlackboardFunctions_GetValuesFromBlackboardByNameInt_Params params;
	params.Blackboard = Blackboard;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VoyageGeneratorSimBlackboardFunctions.GetValuesFromBlackboardByName
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_Protected, FUNC_HasOutParms)
// Parameters:
// struct FVoyageGeneratorSimBlackboard Blackboard                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// struct FName                   Name                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<struct FString>         ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<struct FString> UVoyageGeneratorSimBlackboardFunctions::GetValuesFromBlackboardByName(const struct FVoyageGeneratorSimBlackboard& Blackboard, const struct FName& Name)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VoyageGeneratorSimBlackboardFunctions.GetValuesFromBlackboardByName"));}

	UVoyageGeneratorSimBlackboardFunctions_GetValuesFromBlackboardByName_Params params;
	params.Blackboard = Blackboard;
	params.Name = Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VoyageGeneratorSimBlackboardFunctions.CombineBlackboards
// (FUNC_Net, FUNC_NetReliable, FUNC_HasDefaults)
// Parameters:
// struct FVoyageGeneratorSimBlackboard A                              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// struct FVoyageGeneratorSimBlackboard B                              (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)
// struct FVoyageGeneratorSimBlackboard ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FVoyageGeneratorSimBlackboard UVoyageGeneratorSimBlackboardFunctions::CombineBlackboards(const struct FVoyageGeneratorSimBlackboard& A, const struct FVoyageGeneratorSimBlackboard& B)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VoyageGeneratorSimBlackboardFunctions.CombineBlackboards"));}

	UVoyageGeneratorSimBlackboardFunctions_CombineBlackboards_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VoyageGeneratorSimFunctions.GetIslandLocation
// (FUNC_BlueprintAuthorityOnly, FUNC_Protected, FUNC_Delegate)
// Parameters:
// TArray<struct FIsland>         Islands                        (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm)
// struct FName                   InName                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVector                 ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

struct FVector UVoyageGeneratorSimFunctions::GetIslandLocation(TArray<struct FIsland> Islands, const struct FName& InName)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VoyageGeneratorSimFunctions.GetIslandLocation"));}

	UVoyageGeneratorSimFunctions_GetIslandLocation_Params params;
	params.Islands = Islands;
	params.InName = InName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VoyageGeneratorSimFunctions.GenerateVoyageFromRecipe
// (FUNC_Net, FUNC_Protected, FUNC_Delegate, FUNC_NetServer)
// Parameters:
// struct FVector                 StartingLocation               (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// class UVoyageRecipeDataAsset*  Recipe                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<struct FIsland>         Islands                        (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm)
// int                            Seed                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UObject*                 WorldContextObject             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UVoyageGeneratorSimResult* ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UVoyageGeneratorSimResult* UVoyageGeneratorSimFunctions::GenerateVoyageFromRecipe(const struct FVector& StartingLocation, class UVoyageRecipeDataAsset* Recipe, TArray<struct FIsland> Islands, int Seed, class UObject* WorldContextObject)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VoyageGeneratorSimFunctions.GenerateVoyageFromRecipe"));}

	UVoyageGeneratorSimFunctions_GenerateVoyageFromRecipe_Params params;
	params.StartingLocation = StartingLocation;
	params.Recipe = Recipe;
	params.Islands = Islands;
	params.Seed = Seed;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VoyageGeneratorSimFunctions.GenerateDistributionFromRecipe
// (FUNC_Delegate)
// Parameters:
// class UVoyageRecipeDataAsset*  Recipe                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Seed                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<int>                    ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<int> UVoyageGeneratorSimFunctions::GenerateDistributionFromRecipe(class UVoyageRecipeDataAsset* Recipe, int Seed)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VoyageGeneratorSimFunctions.GenerateDistributionFromRecipe"));}

	UVoyageGeneratorSimFunctions_GenerateDistributionFromRecipe_Params params;
	params.Recipe = Recipe;
	params.Seed = Seed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VoyageGeneratorSimResult.VisitChapter
// (FUNC_BlueprintCosmetic, FUNC_Net, FUNC_Protected)
// Parameters:
// int                            Index                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FVoyageGeneratorSimBlackboard ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FVoyageGeneratorSimBlackboard UVoyageGeneratorSimResult::VisitChapter(int Index)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VoyageGeneratorSimResult.VisitChapter"));}

	UVoyageGeneratorSimResult_VisitChapter_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VoyageGeneratorSimResult.Visit
// (FUNC_Net)
// Parameters:
// struct FVoyageGeneratorSimBlackboard ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FVoyageGeneratorSimBlackboard UVoyageGeneratorSimResult::Visit()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VoyageGeneratorSimResult.Visit"));}

	UVoyageGeneratorSimResult_Visit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VoyageGeneratorSimResult.GetTitle
// (FUNC_BlueprintCosmetic)
// Parameters:
// struct FText                   ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FText UVoyageGeneratorSimResult::GetTitle()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VoyageGeneratorSimResult.GetTitle"));}

	UVoyageGeneratorSimResult_GetTitle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VoyageGeneratorSimResult.GetNumQuests
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UVoyageGeneratorSimResult::GetNumQuests()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VoyageGeneratorSimResult.GetNumQuests"));}

	UVoyageGeneratorSimResult_GetNumQuests_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.VoyageGeneratorSimResult.GetNumChapters
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UVoyageGeneratorSimResult::GetNumChapters()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.VoyageGeneratorSimResult.GetNumChapters"));}

	UVoyageGeneratorSimResult_GetNumChapters_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WaitForDemoResetActionStateId.PushCharacterIntoWaitForDemoResetActionState
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Character                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UWaitForDemoResetActionStateId::PushCharacterIntoWaitForDemoResetActionState(class AActor* Character)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WaitForDemoResetActionStateId.PushCharacterIntoWaitForDemoResetActionState"));}

	UWaitForDemoResetActionStateId_PushCharacterIntoWaitForDemoResetActionState_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WaitingToSpawnActionStateId.PushCharacterIntoWaitingToSpawnActionState
// (FUNC_Final, FUNC_RequiredAPI, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AAthenaCharacter*        InCharacter                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  InStartSpot                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           InReceiveLoadout               (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           InReceiveEntitlement           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           InWaitForStreaming             (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UWaitingToSpawnActionStateId::PushCharacterIntoWaitingToSpawnActionState(class AAthenaCharacter* InCharacter, class AActor* InStartSpot, bool InReceiveLoadout, bool InReceiveEntitlement, bool InWaitForStreaming)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WaitingToSpawnActionStateId.PushCharacterIntoWaitingToSpawnActionState"));}

	UWaitingToSpawnActionStateId_PushCharacterIntoWaitingToSpawnActionState_Params params;
	params.InCharacter = InCharacter;
	params.InStartSpot = InStartSpot;
	params.InReceiveLoadout = InReceiveLoadout;
	params.InReceiveEntitlement = InReceiveEntitlement;
	params.InWaitForStreaming = InWaitForStreaming;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WaterHeightProviderInterface.HasValidWaterHeight
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UWaterHeightProviderInterface::HasValidWaterHeight()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WaterHeightProviderInterface.HasValidWaterHeight"));}

	UWaterHeightProviderInterface_HasValidWaterHeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WaterHeightProviderInterface.GetWaterHeight
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UWaterHeightProviderInterface::GetWaterHeight()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WaterHeightProviderInterface.GetWaterHeight"));}

	UWaterHeightProviderInterface_GetWaterHeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WaterHeightProviderInterface.GetValidWaterHeightAtomic
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          OutWaterHeight                 (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UWaterHeightProviderInterface::GetValidWaterHeightAtomic(float* OutWaterHeight)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WaterHeightProviderInterface.GetValidWaterHeightAtomic"));}

	UWaterHeightProviderInterface_GetValidWaterHeightAtomic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutWaterHeight != nullptr)
		*OutWaterHeight = params.OutWaterHeight;

	return params.ReturnValue;
}


// Function Athena.WaterHeightProviderComponent.HasValidWaterHeight
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UWaterHeightProviderComponent::HasValidWaterHeight()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WaterHeightProviderComponent.HasValidWaterHeight"));}

	UWaterHeightProviderComponent_HasValidWaterHeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WaterHeightProviderComponent.GetWaterHeight
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UWaterHeightProviderComponent::GetWaterHeight()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WaterHeightProviderComponent.GetWaterHeight"));}

	UWaterHeightProviderComponent_GetWaterHeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WaterHeightProviderComponent.GetValidWaterHeightAtomic
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_Private)
// Parameters:
// float                          OutWaterHeight                 (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UWaterHeightProviderComponent::GetValidWaterHeightAtomic(float* OutWaterHeight)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WaterHeightProviderComponent.GetValidWaterHeightAtomic"));}

	UWaterHeightProviderComponent_GetValidWaterHeightAtomic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutWaterHeight != nullptr)
		*OutWaterHeight = params.OutWaterHeight;

	return params.ReturnValue;
}


// Function Athena.MurkWaterModifierZoneComponent.OnRep_State
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EMurkWaterModifierZoneState> PreviousState                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UMurkWaterModifierZoneComponent::OnRep_State(TEnumAsByte<EMurkWaterModifierZoneState> PreviousState)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MurkWaterModifierZoneComponent.OnRep_State"));}

	UMurkWaterModifierZoneComponent_OnRep_State_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction Athena.WaterSplashComponent.OnWaterSplashReachedDeepWaterDelegate__DelegateSignature
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UWaterSplashComponent::OnWaterSplashReachedDeepWaterDelegate__DelegateSignature()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("DelegateFunction Athena.WaterSplashComponent.OnWaterSplashReachedDeepWaterDelegate__DelegateSignature"));}

	UWaterSplashComponent_OnWaterSplashReachedDeepWaterDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction Athena.WaterSplashComponent.OnWaterSplashExitWaterDelegate__DelegateSignature
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UWaterSplashComponent::OnWaterSplashExitWaterDelegate__DelegateSignature()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("DelegateFunction Athena.WaterSplashComponent.OnWaterSplashExitWaterDelegate__DelegateSignature"));}

	UWaterSplashComponent_OnWaterSplashExitWaterDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction Athena.WaterSplashComponent.OnWaterSplashEnterWaterDelegate__DelegateSignature
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UWaterSplashComponent::OnWaterSplashEnterWaterDelegate__DelegateSignature()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("DelegateFunction Athena.WaterSplashComponent.OnWaterSplashEnterWaterDelegate__DelegateSignature"));}

	UWaterSplashComponent_OnWaterSplashEnterWaterDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WaterVolume.RegisterComponents
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UFlatWaterMeshComponent* FlatWaterMesh                  (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)
// class UFlatWaterPlaneComponent* FlatWaterPlane                 (CPF_Parm, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData)

void AWaterVolume::RegisterComponents(class UFlatWaterMeshComponent* FlatWaterMesh, class UFlatWaterPlaneComponent* FlatWaterPlane)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WaterVolume.RegisterComponents"));}

	AWaterVolume_RegisterComponents_Params params;
	params.FlatWaterMesh = FlatWaterMesh;
	params.FlatWaterPlane = FlatWaterPlane;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WeakActorHandleTestsFunctionLib.TestCreatingWeakActorHandleFromConsoleStringWithValidNetGuidInvalidName
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UWeakActorHandleTestsFunctionLib::TestCreatingWeakActorHandleFromConsoleStringWithValidNetGuidInvalidName(class AActor* Actor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WeakActorHandleTestsFunctionLib.TestCreatingWeakActorHandleFromConsoleStringWithValidNetGuidInvalidName"));}

	UWeakActorHandleTestsFunctionLib_TestCreatingWeakActorHandleFromConsoleStringWithValidNetGuidInvalidName_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WeepingComponent.OnRep_State
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UWeepingComponent::OnRep_State()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WeepingComponent.OnRep_State"));}

	UWeepingComponent_OnRep_State_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WetnessComponent.SetWet
// (FUNC_Final, FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FVector                 WorldSpaceWaterPos             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           FullyWet                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UWetnessComponent::SetWet(const struct FVector& WorldSpaceWaterPos, bool FullyWet)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WetnessComponent.SetWet"));}

	UWetnessComponent_SetWet_Params params;
	params.WorldSpaceWaterPos = WorldSpaceWaterPos;
	params.FullyWet = FullyWet;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WetnessComponent.OnRep_WetData
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UWetnessComponent::OnRep_WetData()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WetnessComponent.OnRep_WetData"));}

	UWetnessComponent_OnRep_WetData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WetnessComponent.GetWet
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float UWetnessComponent::GetWet()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WetnessComponent.GetWet"));}

	UWetnessComponent_GetWet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WheelInteractableFunctionLib.UpdateAdditiveIdles
// (FUNC_BlueprintAuthorityOnly, FUNC_NetReliable, FUNC_NetServer, FUNC_HasOutParms)
// Parameters:
// float                          Rate                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          AnimationTime                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FWheelAdditiveProperties WithinRange                    (CPF_ConstParm, CPF_Parm)
// struct FWheelAdditiveAlphaSets SetAdditiveIdles               (CPF_Parm)
// struct FBlendAdditiveValues    SetAdditiveBlendValues         (CPF_ConstParm, CPF_Parm)
// TEnumAsByte<EWheelAnimationType> WheelTurnType                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FWheelAdditiveAlphaSets ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FWheelAdditiveAlphaSets UWheelInteractableFunctionLib::UpdateAdditiveIdles(float Rate, float AnimationTime, const struct FWheelAdditiveProperties& WithinRange, const struct FWheelAdditiveAlphaSets& SetAdditiveIdles, const struct FBlendAdditiveValues& SetAdditiveBlendValues, TEnumAsByte<EWheelAnimationType> WheelTurnType)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WheelInteractableFunctionLib.UpdateAdditiveIdles"));}

	UWheelInteractableFunctionLib_UpdateAdditiveIdles_Params params;
	params.Rate = Rate;
	params.AnimationTime = AnimationTime;
	params.WithinRange = WithinRange;
	params.SetAdditiveIdles = SetAdditiveIdles;
	params.SetAdditiveBlendValues = SetAdditiveBlendValues;
	params.WheelTurnType = WheelTurnType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WheelInteractableFunctionLib.CharacterWheelAnimationUpdate
// (FUNC_Net, FUNC_NetReliable, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_HasOutParms, FUNC_HasDefaults)
// Parameters:
// class AActor*                  Wheel                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FSocketId               LeftHandSocketName             (CPF_ConstParm, CPF_Parm)
// struct FSocketId               RightHandSocketName            (CPF_ConstParm, CPF_Parm)
// struct FTransform              LeftHandTransform              (CPF_Parm, CPF_OutParm, CPF_IsPlainOldData)
// struct FTransform              RightHandTransform             (CPF_Parm, CPF_OutParm, CPF_IsPlainOldData)
// float                          WheelTime                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// float                          Rate                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           LeftArm                        (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           RightArm                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EWheelAnimationType> WheelTurnType                  (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FWheelArmIKDownWithinRange WithinRange                    (CPF_ConstParm, CPF_Parm)
// struct FWheelArmIKBoolSets     ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ReturnParm)

struct FWheelArmIKBoolSets UWheelInteractableFunctionLib::CharacterWheelAnimationUpdate(class AActor* Wheel, const struct FSocketId& LeftHandSocketName, const struct FSocketId& RightHandSocketName, float WheelTime, float Rate, bool LeftArm, bool RightArm, TEnumAsByte<EWheelAnimationType> WheelTurnType, const struct FWheelArmIKDownWithinRange& WithinRange, struct FTransform* LeftHandTransform, struct FTransform* RightHandTransform)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WheelInteractableFunctionLib.CharacterWheelAnimationUpdate"));}

	UWheelInteractableFunctionLib_CharacterWheelAnimationUpdate_Params params;
	params.Wheel = Wheel;
	params.LeftHandSocketName = LeftHandSocketName;
	params.RightHandSocketName = RightHandSocketName;
	params.WheelTime = WheelTime;
	params.Rate = Rate;
	params.LeftArm = LeftArm;
	params.RightArm = RightArm;
	params.WheelTurnType = WheelTurnType;
	params.WithinRange = WithinRange;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (LeftHandTransform != nullptr)
		*LeftHandTransform = params.LeftHandTransform;
	if (RightHandTransform != nullptr)
		*RightHandTransform = params.RightHandTransform;

	return params.ReturnValue;
}


// Function Athena.WheelMock.GetNormalizedWheelPosition
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float AWheelMock::GetNormalizedWheelPosition()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WheelMock.GetNormalizedWheelPosition"));}

	AWheelMock_GetNormalizedWheelPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Bucket.Server_OnThrow
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FProjectileAim          AimData                        (CPF_ConstParm, CPF_Parm, CPF_ReferenceParm)

void ABucket::Server_OnThrow(const struct FProjectileAim& AimData)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Bucket.Server_OnThrow"));}

	ABucket_Server_OnThrow_Params params;
	params.AimData = AimData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Bucket.OnRep_FillState
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ABucket::OnRep_FillState()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Bucket.OnRep_FillState"));}

	ABucket_OnRep_FillState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Bucket.Multicast_Throw
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ABucket::Multicast_Throw()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Bucket.Multicast_Throw"));}

	ABucket_Multicast_Throw_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Bucket.Multicast_Scoop
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ABucket::Multicast_Scoop()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Bucket.Multicast_Scoop"));}

	ABucket_Multicast_Scoop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Bucket.GetFillState
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EBucketFillState>  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EBucketFillState> ABucket::GetFillState()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Bucket.GetFillState"));}

	ABucket_GetFillState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Bucket.FillWithVomit
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ABucket::FillWithVomit()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Bucket.FillWithVomit"));}

	ABucket_FillWithVomit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Bucket.CanBeVomitedInto
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool ABucket::CanBeVomitedInto()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Bucket.CanBeVomitedInto"));}

	ABucket_CanBeVomitedInto_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.MusicalInstrument.TriggerMagicGlow_Multicast_RPC
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AMusicalInstrument::TriggerMagicGlow_Multicast_RPC()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MusicalInstrument.TriggerMagicGlow_Multicast_RPC"));}

	AMusicalInstrument_TriggerMagicGlow_Multicast_RPC_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MusicalInstrument.StartMagicGlowEffect
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AMusicalInstrument::StartMagicGlowEffect()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MusicalInstrument.StartMagicGlowEffect"));}

	AMusicalInstrument_StartMagicGlowEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestProjectileWeapon.TestGetState
// (FUNC_Final)
// Parameters:
// TEnumAsByte<EProjectileWeaponState> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EProjectileWeaponState> ATestProjectileWeapon::TestGetState()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestProjectileWeapon.TestGetState"));}

	ATestProjectileWeapon_TestGetState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.TestProjectileWeapon.SpoofFireRequest
// (FUNC_Net, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FFireRequest            Request                        (CPF_Parm)

void ATestProjectileWeapon::SpoofFireRequest(const struct FFireRequest& Request)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestProjectileWeapon.SpoofFireRequest"));}

	ATestProjectileWeapon_SpoofFireRequest_Params params;
	params.Request = Request;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestProjectileWeapon.RegisterAndWield
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  TargetOwner                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ATestProjectileWeapon::RegisterAndWield(class AActor* TargetOwner)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestProjectileWeapon.RegisterAndWield"));}

	ATestProjectileWeapon_RegisterAndWield_Params params;
	params.TargetOwner = TargetOwner;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.TestProjectileWeapon.GenerateAndFireProjectiles
// ()
// Parameters:
// TArray<struct FHitResult>      ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<struct FHitResult> ATestProjectileWeapon::GenerateAndFireProjectiles()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestProjectileWeapon.GenerateAndFireProjectiles"));}

	ATestProjectileWeapon_GenerateAndFireProjectiles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.TestProjectileWeapon.FireInstantly
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ATestProjectileWeapon::FireInstantly()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.TestProjectileWeapon.FireInstantly"));}

	ATestProjectileWeapon_FireInstantly_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Spyglass.ScopeOn
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ASpyglass::ScopeOn()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Spyglass.ScopeOn"));}

	ASpyglass_ScopeOn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Spyglass.ScopeOff
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ASpyglass::ScopeOff()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Spyglass.ScopeOff"));}

	ASpyglass_ScopeOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Spyglass.GlintOn
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ASpyglass::GlintOn()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Spyglass.GlintOn"));}

	ASpyglass_GlintOn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Spyglass.GlintOff
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ASpyglass::GlintOff()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Spyglass.GlintOff"));}

	ASpyglass_GlintOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Spyglass.ForceScopeOff
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ASpyglass::ForceScopeOff()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Spyglass.ForceScopeOff"));}

	ASpyglass_ForceScopeOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Fruit.Multicast_EatRPC
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void AFruit::Multicast_EatRPC()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Fruit.Multicast_EatRPC"));}

	AFruit_Multicast_EatRPC_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Lantern.TriggerGlow
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ALantern::TriggerGlow()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Lantern.TriggerGlow"));}

	ALantern_TriggerGlow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Lantern.Server_RequestChangeLight
// (FUNC_RequiredAPI, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           InLightOn                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           Raised                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ALantern::Server_RequestChangeLight(bool InLightOn, bool Raised)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Lantern.Server_RequestChangeLight"));}

	ALantern_Server_RequestChangeLight_Params params;
	params.InLightOn = InLightOn;
	params.Raised = Raised;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Lantern.Server_ExternalLightFactorChange
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          ExternalLightFactor            (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ALantern::Server_ExternalLightFactorChange(float ExternalLightFactor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Lantern.Server_ExternalLightFactorChange"));}

	ALantern_Server_ExternalLightFactorChange_Params params;
	params.ExternalLightFactor = ExternalLightFactor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Lantern.ReceiveWieldThirdPerson
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ALantern::ReceiveWieldThirdPerson()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Lantern.ReceiveWieldThirdPerson"));}

	ALantern_ReceiveWieldThirdPerson_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Lantern.ReceiveWieldFirstPerson
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ALantern::ReceiveWieldFirstPerson()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Lantern.ReceiveWieldFirstPerson"));}

	ALantern_ReceiveWieldFirstPerson_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Lantern.ReceiveTurnOnOffOneshotFx
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           On                             (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ALantern::ReceiveTurnOnOffOneshotFx(bool On)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Lantern.ReceiveTurnOnOffOneshotFx"));}

	ALantern_ReceiveTurnOnOffOneshotFx_Params params;
	params.On = On;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Lantern.ReceiveLightChange
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ALantern::ReceiveLightChange()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Lantern.ReceiveLightChange"));}

	ALantern_ReceiveLightChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Lantern.PreMeshChangedBPEvent
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ALantern::PreMeshChangedBPEvent()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Lantern.PreMeshChangedBPEvent"));}

	ALantern_PreMeshChangedBPEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Lantern.PostMeshChangedBPEvent
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ALantern::PostMeshChangedBPEvent()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Lantern.PostMeshChangedBPEvent"));}

	ALantern_PostMeshChangedBPEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Lantern.OnRep_Raised
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ALantern::OnRep_Raised()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Lantern.OnRep_Raised"));}

	ALantern_OnRep_Raised_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Lantern.OnRep_LightOn
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ALantern::OnRep_LightOn()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Lantern.OnRep_LightOn"));}

	ALantern_OnRep_LightOn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Lantern.Multicast_PlayTurnOnOffOneshotFx
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           TurnOn                         (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ALantern::Multicast_PlayTurnOnOffOneshotFx(bool TurnOn)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Lantern.Multicast_PlayTurnOnOffOneshotFx"));}

	ALantern_Multicast_PlayTurnOnOffOneshotFx_Params params;
	params.TurnOn = TurnOn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Lantern.GetUnaryRaisedBlendFactor
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ALantern::GetUnaryRaisedBlendFactor()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Lantern.GetUnaryRaisedBlendFactor"));}

	ALantern_GetUnaryRaisedBlendFactor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Lantern.GetUnaryActiveBlendFactor
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ALantern::GetUnaryActiveBlendFactor()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Lantern.GetUnaryActiveBlendFactor"));}

	ALantern_GetUnaryActiveBlendFactor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Lantern.FlareLight_Multicast_RPC
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ALantern::FlareLight_Multicast_RPC()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Lantern.FlareLight_Multicast_RPC"));}

	ALantern_FlareLight_Multicast_RPC_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MeleeWeapon.Server_RequestAttack
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EMeleeWeaponAttackType> Type                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Index                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMeleeWeapon::Server_RequestAttack(TEnumAsByte<EMeleeWeaponAttackType> Type, int Index)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MeleeWeapon.Server_RequestAttack"));}

	AMeleeWeapon_Server_RequestAttack_Params params;
	params.Type = Type;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MeleeWeapon.OnBlockedAttack
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FEventBlocked           Event                          (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)

void AMeleeWeapon::OnBlockedAttack(const struct FEventBlocked& Event)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MeleeWeapon.OnBlockedAttack"));}

	AMeleeWeapon_OnBlockedAttack_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MeleeWeapon.Multicast_TriggerAttack
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EMeleeWeaponAttackType> Type                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            Index                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMeleeWeapon::Multicast_TriggerAttack(TEnumAsByte<EMeleeWeaponAttackType> Type, int Index)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MeleeWeapon.Multicast_TriggerAttack"));}

	AMeleeWeapon_Multicast_TriggerAttack_Params params;
	params.Type = Type;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.MeleeWeapon.Client_RequestAttackResponse
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// bool                           Accepted                       (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void AMeleeWeapon::Client_RequestAttackResponse(bool Accepted)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.MeleeWeapon.Client_RequestAttackResponse"));}

	AMeleeWeapon_Client_RequestAttackResponse_Params params;
	params.Accepted = Accepted;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Tankard.SetLiquidLevel
// (FUNC_BlueprintAuthorityOnly, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// float                          Level                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void ATankard::SetLiquidLevel(float Level)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Tankard.SetLiquidLevel"));}

	ATankard_SetLiquidLevel_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Tankard.OnRep_RemainingVolume
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void ATankard::OnRep_RemainingVolume()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Tankard.OnRep_RemainingVolume"));}

	ATankard_OnRep_RemainingVolume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.Tankard.GetWantedLiquidLevel
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ATankard::GetWantedLiquidLevel()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Tankard.GetWantedLiquidLevel"));}

	ATankard_GetWantedLiquidLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.Tankard.GetLiquidLevel
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// float                          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

float ATankard::GetLiquidLevel()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.Tankard.GetLiquidLevel"));}

	ATankard_GetLiquidLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemAnimationInterface.TriggerOneShotAnimation
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  InputID                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UWieldableItemAnimationInterface::TriggerOneShotAnimation(class UClass* InputID)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemAnimationInterface.TriggerOneShotAnimation"));}

	UWieldableItemAnimationInterface_TriggerOneShotAnimation_Params params;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldableItemAnimationInterface.StartUnequipAnimation
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UWieldableItemAnimationInterface::StartUnequipAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemAnimationInterface.StartUnequipAnimation"));}

	UWieldableItemAnimationInterface_StartUnequipAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldableItemAnimationInterface.StartOutOfContinuousUseAnimation
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  InputID                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UWieldableItemAnimationInterface::StartOutOfContinuousUseAnimation(class UClass* InputID)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemAnimationInterface.StartOutOfContinuousUseAnimation"));}

	UWieldableItemAnimationInterface_StartOutOfContinuousUseAnimation_Params params;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldableItemAnimationInterface.StartIntoContinuousAnimation
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  InputID                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UWieldableItemAnimationInterface::StartIntoContinuousAnimation(class UClass* InputID)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemAnimationInterface.StartIntoContinuousAnimation"));}

	UWieldableItemAnimationInterface_StartIntoContinuousAnimation_Params params;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldableItemAnimationInterface.StartEquipAnimation
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UWieldableItemAnimationInterface::StartEquipAnimation()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemAnimationInterface.StartEquipAnimation"));}

	UWieldableItemAnimationInterface_StartEquipAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldableItemAnimationInterface.StartContinuousAnimation
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  InputID                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UWieldableItemAnimationInterface::StartContinuousAnimation(class UClass* InputID)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemAnimationInterface.StartContinuousAnimation"));}

	UWieldableItemAnimationInterface_StartContinuousAnimation_Params params;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldableItemAnimationInterface.ReturnToIdle
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UWieldableItemAnimationInterface::ReturnToIdle()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemAnimationInterface.ReturnToIdle"));}

	UWieldableItemAnimationInterface_ReturnToIdle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldableItemAnimationInterface.IsEquipAnimationPlaying
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UWieldableItemAnimationInterface::IsEquipAnimationPlaying()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemAnimationInterface.IsEquipAnimationPlaying"));}

	UWieldableItemAnimationInterface_IsEquipAnimationPlaying_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemAnimationInstance.OnUseStopped
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  InputID                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UWieldableItemAnimationInstance::OnUseStopped(class UClass* InputID)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemAnimationInstance.OnUseStopped"));}

	UWieldableItemAnimationInstance_OnUseStopped_Params params;
	params.InputID = InputID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldableItemAnimationInstance.OnUseStarted
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  InputID                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FWieldableItemActionVisuals ActionVisuals                  (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UWieldableItemAnimationInstance::OnUseStarted(class UClass* InputID, const struct FWieldableItemActionVisuals& ActionVisuals)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemAnimationInstance.OnUseStarted"));}

	UWieldableItemAnimationInstance_OnUseStarted_Params params;
	params.InputID = InputID;
	params.ActionVisuals = ActionVisuals;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldableItemAnimationInstance.OnOneShotUseTriggered
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class UClass*                  InputID                        (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// struct FWieldableItemActionVisuals ActionVisuals                  (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ReferenceParm)

void UWieldableItemAnimationInstance::OnOneShotUseTriggered(class UClass* InputID, const struct FWieldableItemActionVisuals& ActionVisuals)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemAnimationInstance.OnOneShotUseTriggered"));}

	UWieldableItemAnimationInstance_OnOneShotUseTriggered_Params params;
	params.InputID = InputID;
	params.ActionVisuals = ActionVisuals;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldableItemFunctionLibrary.IsThirdPersonMeshComponentTickEnabled
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AWieldableItem*          InWieldable                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UWieldableItemFunctionLibrary::IsThirdPersonMeshComponentTickEnabled(class AWieldableItem* InWieldable)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemFunctionLibrary.IsThirdPersonMeshComponentTickEnabled"));}

	UWieldableItemFunctionLibrary_IsThirdPersonMeshComponentTickEnabled_Params params;
	params.InWieldable = InWieldable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemFunctionLibrary.IsFirstPersonMeshComponentTickEnabled
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AWieldableItem*          InWieldable                    (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UWieldableItemFunctionLibrary::IsFirstPersonMeshComponentTickEnabled(class AWieldableItem* InWieldable)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemFunctionLibrary.IsFirstPersonMeshComponentTickEnabled"));}

	UWieldableItemFunctionLibrary_IsFirstPersonMeshComponentTickEnabled_Params params;
	params.InWieldable = InWieldable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.RemoveItem
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UWieldableItemSetComponent::RemoveItem(class AActor* Item)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetComponent.RemoveItem"));}

	UWieldableItemSetComponent_RemoveItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.OnRep_Items
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UWieldableItemSetComponent::OnRep_Items()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetComponent.OnRep_Items"));}

	UWieldableItemSetComponent_OnRep_Items_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldableItemSetComponent.OnItemDestroyed
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Actor                          (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UWieldableItemSetComponent::OnItemDestroyed(class AActor* Actor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetComponent.OnItemDestroyed"));}

	UWieldableItemSetComponent_OnItemDestroyed_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldableItemSetComponent.GetSlotForItem
// (FUNC_Protected)
// Parameters:
// int                            Index                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UClass* UWieldableItemSetComponent::GetSlotForItem(int Index)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetComponent.GetSlotForItem"));}

	UWieldableItemSetComponent_GetSlotForItem_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.GetNumItemsOfType
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  Type                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UWieldableItemSetComponent::GetNumItemsOfType(class UClass* Type)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetComponent.GetNumItemsOfType"));}

	UWieldableItemSetComponent_GetNumItemsOfType_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.GetNumItems
// (FUNC_BlueprintAuthorityOnly)
// Parameters:
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UWieldableItemSetComponent::GetNumItems()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetComponent.GetNumItems"));}

	UWieldableItemSetComponent_GetNumItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.GetItemsOfCategory
// (FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  ItemCategory                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TArray<class AActor*>          ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm)

TArray<class AActor*> UWieldableItemSetComponent::GetItemsOfCategory(class UClass* ItemCategory)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetComponent.GetItemsOfCategory"));}

	UWieldableItemSetComponent_GetItemsOfCategory_Params params;
	params.ItemCategory = ItemCategory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.GetItemIndexInCategorySet
// (FUNC_BlueprintAuthorityOnly, FUNC_Delegate)
// Parameters:
// class AActor*                  Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  ItemCategory                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UWieldableItemSetComponent::GetItemIndexInCategorySet(class AActor* Item, class UClass* ItemCategory)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetComponent.GetItemIndexInCategorySet"));}

	UWieldableItemSetComponent_GetItemIndexInCategorySet_Params params;
	params.Item = Item;
	params.ItemCategory = ItemCategory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.GetItemIndex
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

int UWieldableItemSetComponent::GetItemIndex(class AActor* Item)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetComponent.GetItemIndex"));}

	UWieldableItemSetComponent_GetItemIndex_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.GetItemFromSlot
// (FUNC_Protected)
// Parameters:
// class UClass*                  ItemCategory                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* UWieldableItemSetComponent::GetItemFromSlot(class UClass* ItemCategory)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetComponent.GetItemFromSlot"));}

	UWieldableItemSetComponent_GetItemFromSlot_Params params;
	params.ItemCategory = ItemCategory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.GetItem
// (FUNC_Protected)
// Parameters:
// int                            Index                          (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class AActor*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class AActor* UWieldableItemSetComponent::GetItem(int Index)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetComponent.GetItem"));}

	UWieldableItemSetComponent_GetItem_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.ContainsItemOfType
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class UClass*                  ItemType                       (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UWieldableItemSetComponent::ContainsItemOfType(class UClass* ItemType)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetComponent.ContainsItemOfType"));}

	UWieldableItemSetComponent_ContainsItemOfType_Params params;
	params.ItemType = ItemType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.Contains
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UWieldableItemSetComponent::Contains(class AActor* Item)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetComponent.Contains"));}

	UWieldableItemSetComponent_Contains_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.AddItemToSlot
// (FUNC_Final, FUNC_Delegate)
// Parameters:
// class AActor*                  Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// class UClass*                  ItemCategory                   (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UWieldableItemSetComponent::AddItemToSlot(class AActor* Item, class UClass* ItemCategory)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetComponent.AddItemToSlot"));}

	UWieldableItemSetComponent_AddItemToSlot_Params params;
	params.Item = Item;
	params.ItemCategory = ItemCategory;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableItemSetComponent.AddItem
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UWieldableItemSetComponent::AddItem(class AActor* Item)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableItemSetComponent.AddItem"));}

	UWieldableItemSetComponent_AddItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldableTestFunctions.ChangeItemSize
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AWieldableItem*          InWieldable                    (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EWieldableItemSize> InNewSize                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UWieldableTestFunctions::ChangeItemSize(class AWieldableItem* InWieldable, TEnumAsByte<EWieldableItemSize> InNewSize)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldableTestFunctions.ChangeItemSize"));}

	UWieldableTestFunctions_ChangeItemSize_Params params;
	params.InWieldable = InWieldable;
	params.InNewSize = InNewSize;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldedItemComponent.WieldItem
// (FUNC_RequiredAPI, FUNC_MulticastDelegate, FUNC_Delegate)
// Parameters:
// TScriptInterface<class UWieldableInterface> Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           Fast                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// TEnumAsByte<EWieldItemReturnCode> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TEnumAsByte<EWieldItemReturnCode> UWieldedItemComponent::WieldItem(const TScriptInterface<class UWieldableInterface>& Item, bool Fast)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldedItemComponent.WieldItem"));}

	UWieldedItemComponent_WieldItem_Params params;
	params.Item = Item;
	params.Fast = Fast;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldedItemComponent.UnstashItem
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EStashReason>      Reason                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UWieldedItemComponent::UnstashItem(TEnumAsByte<EStashReason> Reason)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldedItemComponent.UnstashItem"));}

	UWieldedItemComponent_UnstashItem_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldedItemComponent.StashItem
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EStashReason>      Reason                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UWieldedItemComponent::StashItem(TEnumAsByte<EStashReason> Reason)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldedItemComponent.StashItem"));}

	UWieldedItemComponent_StashItem_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldedItemComponent.SlowStashItem
// (FUNC_Final, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// TEnumAsByte<EStashReason>      Reason                         (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UWieldedItemComponent::SlowStashItem(TEnumAsByte<EStashReason> Reason)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldedItemComponent.SlowStashItem"));}

	UWieldedItemComponent_SlowStashItem_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldedItemComponent.Server_WieldRPC
// (FUNC_BlueprintAuthorityOnly, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// int                            InEpochId                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UWieldedItemComponent::Server_WieldRPC(class AActor* Item, int InEpochId)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldedItemComponent.Server_WieldRPC"));}

	UWieldedItemComponent_Server_WieldRPC_Params params;
	params.Item = Item;
	params.InEpochId = InEpochId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldedItemComponent.OnRep_HeldItem
// (FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)

void UWieldedItemComponent::OnRep_HeldItem()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldedItemComponent.OnRep_HeldItem"));}

	UWieldedItemComponent_OnRep_HeldItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldedItemComponent.IsItemWielded
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_Protected)
// Parameters:
// class AActor*                  ItemActor                      (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UWieldedItemComponent::IsItemWielded(class AActor* ItemActor)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldedItemComponent.IsItemWielded"));}

	UWieldedItemComponent_IsItemWielded_Params params;
	params.ItemActor = ItemActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldedItemComponent.IsItemStashed
// (FUNC_Final)
// Parameters:
// bool                           ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

bool UWieldedItemComponent::IsItemStashed()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldedItemComponent.IsItemStashed"));}

	UWieldedItemComponent_IsItemStashed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldedItemComponent.GetWieldedItemIfNotStashed
// ()
// Parameters:
// TScriptInterface<class UWieldableInterface> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TScriptInterface<class UWieldableInterface> UWieldedItemComponent::GetWieldedItemIfNotStashed()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldedItemComponent.GetWieldedItemIfNotStashed"));}

	UWieldedItemComponent_GetWieldedItemIfNotStashed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldedItemComponent.GetWieldedItem
// ()
// Parameters:
// TScriptInterface<class UWieldableInterface> ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

TScriptInterface<class UWieldableInterface> UWieldedItemComponent::GetWieldedItem()
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldedItemComponent.GetWieldedItem"));}

	UWieldedItemComponent_GetWieldedItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Athena.WieldedItemComponent.Client_WieldItemCorrectionRPC
// (FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// class AActor*                  Item                           (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UWieldedItemComponent::Client_WieldItemCorrectionRPC(class AActor* Item)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldedItemComponent.Client_WieldItemCorrectionRPC"));}

	UWieldedItemComponent_Client_WieldItemCorrectionRPC_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WieldedItemComponent.Client_WieldItem
// (FUNC_Final, FUNC_BlueprintCosmetic, FUNC_MulticastDelegate, FUNC_Public, FUNC_Private, FUNC_Protected, FUNC_Delegate, FUNC_NetServer, FUNC_HasOutParms, FUNC_HasDefaults, FUNC_NetClient, FUNC_DLLImport, FUNC_BlueprintCallable, FUNC_BlueprintEvent, FUNC_BlueprintPure, FUNC_Const, FUNC_NetValidate)
// Parameters:
// struct FNetActorPtr            Item                           (CPF_Parm)
// int                            InEpochId                      (CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)
// bool                           Fast                           (CPF_ConstParm, CPF_Parm, CPF_ZeroConstructor, CPF_IsPlainOldData)

void UWieldedItemComponent::Client_WieldItem(const struct FNetActorPtr& Item, int InEpochId, bool Fast)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WieldedItemComponent.Client_WieldItem"));}

	UWieldedItemComponent_Client_WieldItem_Params params;
	params.Item = Item;
	params.InEpochId = InEpochId;
	params.Fast = Fast;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Athena.WorldRegionBlueprintFunctionLibrary.GetSeaIdFromWorldSpaceLocation
// (FUNC_BlueprintCosmetic, FUNC_Delegate)
// Parameters:
// struct FVector                 InLocation                     (CPF_ConstParm, CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReferenceParm, CPF_IsPlainOldData)
// class UClass*                  ReturnValue                    (CPF_Parm, CPF_OutParm, CPF_ZeroConstructor, CPF_ReturnParm, CPF_IsPlainOldData)

class UClass* UWorldRegionBlueprintFunctionLibrary::GetSeaIdFromWorldSpaceLocation(const struct FVector& InLocation)
{
	static UFunction* fn = 0;
	if(fn == 0) { fn = UObject::FindObject<UFunction>(_xor_("Function Athena.WorldRegionBlueprintFunctionLibrary.GetSeaIdFromWorldSpaceLocation"));}

	UWorldRegionBlueprintFunctionLibrary_GetSeaIdFromWorldSpaceLocation_Params params;
	params.InLocation = InLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
